broker.id=3
listeners=plaintext://localhost:29094

auto.create.topics.enable=true
auto.leader.rebalance.enable=true
background.threads=2
compression.type=producer
controlled.shutdown.enable=true
default.replication.factor=1

delete.topic.enable=true
dual.commit.enabled=false

leader.imbalance.check.interval.seconds=10
leader.imbalance.per.broker.percentage=10

#100 MB is sufficient for testing
log.segment.bytes=104857600
log.cleaner.enable=false
log.cleanup.policy=delete
log.dirs=kafka-logs
log.flush.interval.messages=10000
log.flush.interval.ms=10000
log.flush.scheduler.interval.ms=10000
log.index.interval.bytes=4096
log.index.size.max.bytes=104857600
log.message.timestamp.type=CreateTime
log.retention.check.interval.ms=300000
log.retention.bytes=104857600
log.retention.hours=10000
log.roll.hours=5000
message.max.bytes=1000000

num.network.threads=2
num.io.threads=2
num.partitions=2
num.recovery.threads.per.data.dir=1
num.replica.fetchers=1
min.insync.replicas=1

socket.receive.buffer.bytes=102400
socket.request.max.bytes=10485760
socket.send.buffer.bytes=102400

offsets.storage=kafka
offsets.topic.num.partitions=1
offsets.topic.replication.factor=3
offsets.retention.minutes=10080
transaction.state.log.num.partitions=1

replica.fetch.max.bytes=10485760
replica.fetch.wait.max.ms=500
replica.high.watermark.checkpoint.interval.ms=5000
replica.lag.time.max.ms=10000
replica.socket.receive.buffer.bytes=65536
replica.socket.timeout.ms=5000

# Allow unclean leader election!
unclean.leader.election.enable=true
queued.max.requests=10000

zookeeper.connect=localhost:22181/kafka,localhost:22182/kafka,localhost:22183/kafka
zookeeper.connection.timeout.ms=10000
zookeeper.session.timeout.ms=5000
zookeeper.sync.time.ms=5000

group.id="default"

heartbeat.interval.ms=1000
