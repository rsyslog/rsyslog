!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABORT_FINALIZE	runtime/rsyslog.h	478;"	d
ACLAddHostnameOnFail	runtime/net.c	/^int     ACLAddHostnameOnFail = 0; \/* add hostname to acl when DNS resolving has failed *\/$/;"	v
ACLDontResolve	runtime/net.c	/^int     ACLDontResolve = 0;       \/* add hostname to acl instead of resolving it to IP(s) *\/$/;"	v
ACTION_BIND	contrib/imzmq3/imzmq3.c	59;"	d	file:
ACTION_BIND	contrib/omzmq3/omzmq3.c	59;"	d	file:
ACTION_CONNECT	contrib/imzmq3/imzmq3.c	58;"	d	file:
ACTION_CONNECT	contrib/omzmq3/omzmq3.c	58;"	d	file:
ACTION_H_INCLUDED	action.h	26;"	d
ACTIVE_FILE	plugins/imfile/imfile.c	215;"	d	file:
ACTSHELL_H_INCLUDED	tools/omshell.h	25;"	d
ACT_ARRAY_PASSING	runtime/syslogd-types.h	/^typedef enum 	{ ACT_STRING_PASSING = 0, ACT_ARRAY_PASSING = 1, ACT_MSG_PASSING = 2,$/;"	e	enum:__anon53
ACT_JSON_PASSING	runtime/syslogd-types.h	/^	  ACT_JSON_PASSING = 3} paramPassing_t;$/;"	e	enum:__anon53
ACT_MSG_PASSING	runtime/syslogd-types.h	/^typedef enum 	{ ACT_STRING_PASSING = 0, ACT_ARRAY_PASSING = 1, ACT_MSG_PASSING = 2,$/;"	e	enum:__anon53
ACT_STATE_COMM	runtime/wti.h	34;"	d
ACT_STATE_ITX	runtime/wti.h	33;"	d
ACT_STATE_RDY	runtime/wti.h	32;"	d
ACT_STATE_RTRY	runtime/wti.h	35;"	d
ACT_STATE_SUSP	runtime/wti.h	36;"	d
ACT_STRING_PASSING	runtime/syslogd-types.h	/^typedef enum 	{ ACT_STRING_PASSING = 0, ACT_ARRAY_PASSING = 1, ACT_MSG_PASSING = 2,$/;"	e	enum:__anon53
ADDR_NAME	runtime/net.h	39;"	d
ADDR_PRI6	runtime/net.h	40;"	d
ADD_METADATA_UNSPECIFIED	plugins/imfile/imfile.c	86;"	d	file:
AI_NUMERICSERV	runtime/net.h	71;"	d
ALLOC_INC	template.c	119;"	d	file:
ALLOWEDMETHOD_GSS	plugins/imgssapi/imgssapi.c	69;"	d	file:
ALLOWEDMETHOD_TCP	plugins/imgssapi/imgssapi.c	70;"	d	file:
API_GT	tools/rsgtutil.c	/^static enum { API_GT, API_KSI } apimode = API_GT;$/;"	e	enum:__anon78	file:
API_KSI	tools/rsgtutil.c	/^static enum { API_GT, API_KSI } apimode = API_GT;$/;"	e	enum:__anon78	file:
ASSERT	runtime/debug.h	128;"	d
ASSERT	runtime/debug.h	133;"	d
ATOMIC_ADD	runtime/atomic.h	43;"	d
ATOMIC_CAS	runtime/atomic.h	/^	ATOMIC_CAS(int *data, int oldVal, int newVal, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_CAS	runtime/atomic.h	54;"	d
ATOMIC_CAS_VAL	runtime/atomic.h	/^	ATOMIC_CAS_VAL(int *data, int oldVal, int newVal, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_CAS_VAL	runtime/atomic.h	56;"	d
ATOMIC_CAS_time_t	runtime/atomic.h	/^	ATOMIC_CAS_time_t(time_t *data, time_t oldVal, time_t newVal, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_CAS_time_t	runtime/atomic.h	55;"	d
ATOMIC_DEC	runtime/atomic.h	136;"	d
ATOMIC_DEC	runtime/atomic.h	47;"	d
ATOMIC_DEC_AND_FETCH	runtime/atomic.h	/^	ATOMIC_DEC_AND_FETCH(int *data, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_DEC_AND_FETCH	runtime/atomic.h	48;"	d
ATOMIC_DEC_uint64	runtime/atomic.h	209;"	d
ATOMIC_DEC_unit64	runtime/atomic.h	197;"	d
ATOMIC_FETCH_32BIT	runtime/atomic.h	/^	ATOMIC_FETCH_32BIT(int *data, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_FETCH_32BIT	runtime/atomic.h	49;"	d
ATOMIC_INC	runtime/atomic.h	44;"	d
ATOMIC_INC	runtime/atomic.h	77;"	d
ATOMIC_INC_AND_FETCH_int	runtime/atomic.h	/^	ATOMIC_INC_AND_FETCH_int(int *data, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_INC_AND_FETCH_int	runtime/atomic.h	45;"	d
ATOMIC_INC_AND_FETCH_uint64	runtime/atomic.h	/^	ATOMIC_INC_AND_FETCH_uint64(uint64 *data, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_INC_AND_FETCH_uint64	runtime/atomic.h	198;"	d
ATOMIC_INC_AND_FETCH_unsigned	runtime/atomic.h	/^	ATOMIC_INC_AND_FETCH_unsigned(unsigned *data, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_INC_AND_FETCH_unsigned	runtime/atomic.h	46;"	d
ATOMIC_INC_uint64	runtime/atomic.h	196;"	d
ATOMIC_INC_uint64	runtime/atomic.h	204;"	d
ATOMIC_STORE_0_TO_INT	runtime/atomic.h	51;"	d
ATOMIC_STORE_0_TO_INT	runtime/atomic.h	83;"	d
ATOMIC_STORE_1_TO_32BIT	runtime/atomic.h	50;"	d
ATOMIC_STORE_1_TO_INT	runtime/atomic.h	52;"	d
ATOMIC_STORE_1_TO_INT	runtime/atomic.h	89;"	d
ATOMIC_STORE_INT_TO_INT	runtime/atomic.h	53;"	d
ATOMIC_SUB	runtime/atomic.h	/^	ATOMIC_SUB(int *data, int val, pthread_mutex_t *phlpmut) {$/;"	f
ATOMIC_SUB	runtime/atomic.h	42;"	d
Abort	runtime/nsd.h	/^	rsRetVal (*Abort)(nsd_t *pThis);$/;"	v
Abort	runtime/nsd_gtls.c	/^Abort(nsd_t *pNsd)$/;"	f	file:
Abort	runtime/nsd_ptcp.c	/^Abort(nsd_t *pNsd)$/;"	f	file:
AbortDestruct	runtime/netstrm.c	/^AbortDestruct(netstrm_t **ppThis)$/;"	f	file:
AbortDestruct	runtime/netstrm.h	/^	rsRetVal (*AbortDestruct)(netstrm_t **ppThis);$/;"	v
AcceptConnReq	plugins/imptcp/imptcp.c	/^AcceptConnReq(ptcplstn_t *pLstn, int *newSock, prop_t **peerName, prop_t **peerIP)$/;"	f	file:
AcceptConnReq	runtime/netstrm.c	/^AcceptConnReq(netstrm_t *pThis, netstrm_t **ppNew)$/;"	f	file:
AcceptConnReq	runtime/netstrm.h	/^	rsRetVal (*AcceptConnReq)(netstrm_t *pThis, netstrm_t **ppNew);$/;"	v
AcceptConnReq	runtime/nsd.h	/^	rsRetVal (*AcceptConnReq)(nsd_t *pThis, nsd_t **ppThis);$/;"	v
AcceptConnReq	runtime/nsd_gtls.c	/^AcceptConnReq(nsd_t *pNsd, nsd_t **ppNew)$/;"	f	file:
AcceptConnReq	runtime/nsd_ptcp.c	/^AcceptConnReq(nsd_t *pNsd, nsd_t **ppNew)$/;"	f	file:
ActionQueType	action.c	/^	queueType_t ActionQueType;			\/* type of the main message queue above *\/$/;"	m	struct:configSettings_s	file:
Activate	runtime/rsconf.h	/^	rsRetVal (*Activate)(rsconf_t *ppThis);$/;"	v
Add	runtime/nsd.h	/^	rsRetVal (*Add)(nsdsel_t *pNsdsel, nsd_t *pNsd, nsdsel_waitOp_t waitOp);$/;"	v
Add	runtime/nsdsel_gtls.c	/^Add(nsdsel_t *pNsdsel, nsd_t *pNsd, nsdsel_waitOp_t waitOp)$/;"	f	file:
Add	runtime/nsdsel_ptcp.c	/^Add(nsdsel_t *pNsdsel, nsd_t *pNsd, nsdsel_waitOp_t waitOp)$/;"	f	file:
Add	runtime/nssel.c	/^Add(nssel_t *pThis, netstrm_t *pStrm, nsdsel_waitOp_t waitOp)$/;"	f	file:
Add	runtime/nssel.h	/^	rsRetVal (*Add)(nssel_t *pThis, netstrm_t *pStrm, nsdsel_waitOp_t waitOp);$/;"	v
AddAllowedSender	runtime/net.c	/^static rsRetVal AddAllowedSender(struct AllowedSenders **ppRoot, struct AllowedSenders **ppLast,$/;"	f	file:
AddAllowedSenderEntry	runtime/net.c	/^static rsRetVal AddAllowedSenderEntry(struct AllowedSenders **ppRoot, struct AllowedSenders **ppLast,$/;"	f	file:
AddCounter	runtime/statsobj.h	/^	rsRetVal (*AddCounter)(statsobj_t *pThis, uchar *ctrName, statsCtrType_t ctrType, int8_t flags, void *pCtr);$/;"	v
AddDfltParser	runtime/parser.c	/^AddDfltParser(uchar *pName)$/;"	f	file:
AddDfltParser	runtime/parser.h	/^	rsRetVal (*AddDfltParser)(uchar *);$/;"	v
AddParserToList	runtime/parser.c	/^AddParserToList(parserList_t **ppListRoot, parser_t *pParser)$/;"	f	file:
AddParserToList	runtime/parser.h	/^	rsRetVal (*AddParserToList)(parserList_t **pListRoot, parser_t *pParser);$/;"	v
AddPermittedPeer	runtime/net.c	/^AddPermittedPeer(permittedPeers_t **ppRootPeer, uchar* pszID)$/;"	f	file:
AddPermittedPeer	runtime/net.h	/^	rsRetVal (*AddPermittedPeer)(permittedPeers_t **ppRootPeer, uchar *pszID);$/;"	v
AddPermittedPeerWildcard	runtime/net.c	/^AddPermittedPeerWildcard(permittedPeers_t *pPeer, uchar* pszStr, size_t lenStr)$/;"	f	file:
AddRef	runtime/prop.c	/^static rsRetVal AddRef(prop_t *pThis)$/;"	f	file:
AddRef	runtime/prop.h	/^	rsRetVal (*AddRef)(prop_t *pThis);$/;"	v
AddScript	runtime/ruleset.h	/^	void (*AddScript)(ruleset_t *pThis, struct cnfstmt *script);$/;"	v
AddStrgenToList	runtime/strgen.c	/^AddStrgenToList(strgenList_t **ppListRoot, strgen_t *pStrgen)$/;"	f	file:
AddStrgenToList	runtime/strgen.h	/^	rsRetVal (*AddStrgenToList)(strgenList_t **pListRoot, strgen_t *pStrgen);$/;"	v
AllowedSenders	runtime/net.h	/^struct AllowedSenders {$/;"	s
BATCH_H_INCLUDED	runtime/batch.h	27;"	d
BATCH_SIZE_DFLT	plugins/imudp/imudp.c	97;"	d	file:
BATCH_STATE_BAD	runtime/batch.h	38;"	d
BATCH_STATE_COMM	runtime/batch.h	40;"	d
BATCH_STATE_DISC	runtime/batch.h	41;"	d
BATCH_STATE_RDY	runtime/batch.h	37;"	d
BATCH_STATE_SUB	runtime/batch.h	39;"	d
BEGINAbstractObjClassInit	runtime/obj-types.h	195;"	d
BEGINExit	tests/testbench.h	92;"	d
BEGINInit	tests/testbench.h	52;"	d
BEGINObjClassExit	runtime/conf.c	/^BEGINObjClassExit(conf, OBJ_IS_CORE_MODULE) \/* CHANGE class also in END MACRO! *\/$/;"	f
BEGINObjClassExit	runtime/obj-types.h	219;"	d
BEGINObjClassInit	runtime/obj-types.h	174;"	d
BEGINSetShutdownImmdtPtr	runtime/module-template.h	1107;"	d
BEGINTest	tests/testbench.h	79;"	d
BEGIN_MTX_PROTECTED_OPERATIONS	runtime/srUtils.h	104;"	d
BEGINactivateCnf	runtime/module-template.h	958;"	d
BEGINactivateCnfPrePrivDrop	runtime/module-template.h	940;"	d
BEGINafterRun	runtime/module-template.h	1037;"	d
BEGINbeginCnfLoad	runtime/module-template.h	850;"	d
BEGINbeginTransaction	runtime/module-template.h	232;"	d
BEGINcheckCnf	runtime/module-template.h	920;"	d
BEGINcommitTransaction	runtime/module-template.h	250;"	d
BEGINcreateInstance	runtime/module-template.h	134;"	d
BEGINcreateWrkrInstance	runtime/module-template.h	178;"	d
BEGINdbgPrintInstInfo	runtime/module-template.h	295;"	d
BEGINdoAction	runtime/module-template.h	278;"	d
BEGINdoHUP	runtime/module-template.h	1065;"	d
BEGINdoHUPWrkr	runtime/module-template.h	1085;"	d
BEGINendCnfLoad	runtime/module-template.h	898;"	d
BEGINendTransaction	runtime/module-template.h	264;"	d
BEGINfreeCnf	runtime/module-template.h	976;"	d
BEGINfreeInstance	runtime/module-template.h	161;"	d
BEGINfreeParserInst	runtime/module-template.h	451;"	d
BEGINfreeWrkrInstance	runtime/module-template.h	198;"	d
BEGINfunc	runtime/debug.h	125;"	d
BEGINfunc	runtime/debug.h	130;"	d
BEGINinitConfVars	runtime/module-template.h	490;"	d
BEGINinterface	runtime/obj-types.h	371;"	d
BEGINisCompatibleWithFeature	runtime/module-template.h	216;"	d
BEGINmodExit	runtime/module-template.h	833;"	d
BEGINmodInit	runtime/module-template.h	763;"	d
BEGINnewActInst	runtime/module-template.h	377;"	d
BEGINnewInpInst	runtime/module-template.h	414;"	d
BEGINnewParserInst	runtime/module-template.h	433;"	d
BEGINobjConstruct	runtime/netstrms.c	/^BEGINobjConstruct(netstrms) \/* be sure to specify the object type also in END macro! *\/$/;"	f
BEGINobjConstruct	runtime/obj-types.h	234;"	d
BEGINobjConstruct	runtime/parser.c	/^BEGINobjConstruct(parser) \/* be sure to specify the object type also in END macro! *\/$/;"	f
BEGINobjConstruct	runtime/strgen.c	/^BEGINobjConstruct(strgen) \/* be sure to specify the object type also in END macro! *\/$/;"	f
BEGINobjConstruct	runtime/var.c	/^BEGINobjConstruct(var) \/* be sure to specify the object type also in END macro! *\/$/;"	f
BEGINobjDebugPrint	runtime/obj-types.h	321;"	d
BEGINobjDestruct	runtime/obj-types.h	281;"	d
BEGINobjDestruct	runtime/queue.c	/^BEGINobjDestruct(qqueue) \/* be sure to specify the object type also in END and CODESTART macros! *\/$/;"	f
BEGINobjInstance	runtime/lmcry_gcry.h	/^	BEGINobjInstance; \/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:lmcry_gcry_s
BEGINobjInstance	runtime/lmsig_gt.h	/^	BEGINobjInstance; \/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:lmsig_gt_s
BEGINobjInstance	runtime/lmsig_ksi.h	/^	BEGINobjInstance; \/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:lmsig_ksi_s
BEGINobjInstance	runtime/msg.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:msg
BEGINobjInstance	runtime/netstrm.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:netstrm_s
BEGINobjInstance	runtime/netstrms.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:netstrms_s
BEGINobjInstance	runtime/nsd_gtls.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:nsd_gtls_s
BEGINobjInstance	runtime/nsd_ptcp.h	/^	BEGINobjInstance; \/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:nsd_ptcp_s
BEGINobjInstance	runtime/nsdpoll_ptcp.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:nsdpoll_ptcp_s
BEGINobjInstance	runtime/nsdsel_gtls.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:nsdsel_gtls_s
BEGINobjInstance	runtime/nsdsel_ptcp.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:nsdsel_ptcp_s
BEGINobjInstance	runtime/nspoll.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:nspoll_s
BEGINobjInstance	runtime/nssel.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:nssel_s
BEGINobjInstance	runtime/obj-types.h	115;"	d
BEGINobjInstance	runtime/obj-types.h	96;"	d
BEGINobjInstance	runtime/parser.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:parser_s
BEGINobjInstance	runtime/prop.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:prop_s
BEGINobjInstance	runtime/queue.h	/^	BEGINobjInstance;$/;"	m	struct:queue_s
BEGINobjInstance	runtime/rsconf.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:rsconf_s
BEGINobjInstance	runtime/ruleset.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:ruleset_s
BEGINobjInstance	runtime/statsobj.h	/^	BEGINobjInstance;		\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:statsobj_s
BEGINobjInstance	runtime/stream.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:strm_s
BEGINobjInstance	runtime/strgen.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:strgen_s
BEGINobjInstance	runtime/strms_sess.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:strms_sess_s
BEGINobjInstance	runtime/strmsrv.h	/^	BEGINobjInstance;	\/**< Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:strmsrv_s
BEGINobjInstance	runtime/tcpclt.h	/^	BEGINobjInstance;	\/**< Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:tcpclt_s
BEGINobjInstance	runtime/tcps_sess.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:tcps_sess_s
BEGINobjInstance	runtime/tcpsrv.h	/^	BEGINobjInstance;	\/**< Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:tcpsrv_s
BEGINobjInstance	runtime/var.h	/^	BEGINobjInstance;	\/* Data to implement generic object - MUST be the first data element! *\/$/;"	m	struct:var_s
BEGINobjInstance	runtime/wti.h	/^	BEGINobjInstance;$/;"	m	struct:wti_s
BEGINobjInstance	runtime/wtp.h	/^	BEGINobjInstance;$/;"	m	struct:wtp_s
BEGINobjQueryInterface	runtime/conf.c	/^BEGINobjQueryInterface(conf)$/;"	f
BEGINobjQueryInterface	runtime/datetime.c	/^BEGINobjQueryInterface(datetime)$/;"	f
BEGINobjQueryInterface	runtime/errmsg.c	/^BEGINobjQueryInterface(errmsg)$/;"	f
BEGINobjQueryInterface	runtime/glbl.c	/^BEGINobjQueryInterface(glbl)$/;"	f
BEGINobjQueryInterface	runtime/gss-misc.c	/^BEGINobjQueryInterface(gssutil)$/;"	f
BEGINobjQueryInterface	runtime/lmcry_gcry.c	/^BEGINobjQueryInterface(lmcry_gcry)$/;"	f
BEGINobjQueryInterface	runtime/lmsig_gt.c	/^BEGINobjQueryInterface(lmsig_gt)$/;"	f
BEGINobjQueryInterface	runtime/lmsig_ksi.c	/^BEGINobjQueryInterface(lmsig_ksi)$/;"	f
BEGINobjQueryInterface	runtime/net.c	/^BEGINobjQueryInterface(net)$/;"	f
BEGINobjQueryInterface	runtime/netstrm.c	/^BEGINobjQueryInterface(netstrm)$/;"	f
BEGINobjQueryInterface	runtime/netstrms.c	/^BEGINobjQueryInterface(netstrms)$/;"	f
BEGINobjQueryInterface	runtime/nsd_gtls.c	/^BEGINobjQueryInterface(nsd_gtls)$/;"	f
BEGINobjQueryInterface	runtime/nsd_ptcp.c	/^BEGINobjQueryInterface(nsd_ptcp)$/;"	f
BEGINobjQueryInterface	runtime/nsdpoll_ptcp.c	/^BEGINobjQueryInterface(nsdpoll_ptcp)$/;"	f
BEGINobjQueryInterface	runtime/nsdsel_gtls.c	/^BEGINobjQueryInterface(nsdsel_gtls)$/;"	f
BEGINobjQueryInterface	runtime/nsdsel_ptcp.c	/^BEGINobjQueryInterface(nsdsel_ptcp)$/;"	f
BEGINobjQueryInterface	runtime/nspoll.c	/^BEGINobjQueryInterface(nspoll)$/;"	f
BEGINobjQueryInterface	runtime/nssel.c	/^BEGINobjQueryInterface(nssel)$/;"	f
BEGINobjQueryInterface	runtime/obj-types.h	355;"	d
BEGINobjQueryInterface	runtime/obj.c	/^BEGINobjQueryInterface(obj)$/;"	f
BEGINobjQueryInterface	runtime/parser.c	/^BEGINobjQueryInterface(parser)$/;"	f
BEGINobjQueryInterface	runtime/regexp.c	/^BEGINobjQueryInterface(regexp)$/;"	f
BEGINobjQueryInterface	runtime/rsconf.c	/^BEGINobjQueryInterface(rsconf)$/;"	f
BEGINobjQueryInterface	runtime/ruleset.c	/^BEGINobjQueryInterface(ruleset)$/;"	f
BEGINobjQueryInterface	runtime/stream.c	/^BEGINobjQueryInterface(strm)$/;"	f
BEGINobjQueryInterface	runtime/strgen.c	/^BEGINobjQueryInterface(strgen)$/;"	f
BEGINobjQueryInterface	runtime/strms_sess.c	/^BEGINobjQueryInterface(strms_sess)$/;"	f
BEGINobjQueryInterface	runtime/strmsrv.c	/^BEGINobjQueryInterface(strmsrv)$/;"	f
BEGINobjQueryInterface	runtime/tcps_sess.c	/^BEGINobjQueryInterface(tcps_sess)$/;"	f
BEGINobjQueryInterface	runtime/tcpsrv.c	/^BEGINobjQueryInterface(tcpsrv)$/;"	f
BEGINobjQueryInterface	runtime/zlibw.c	/^BEGINobjQueryInterface(zlibw)$/;"	f
BEGINparse	runtime/module-template.h	1121;"	d
BEGINparse2	runtime/module-template.h	1136;"	d
BEGINparseSelectorAct	runtime/module-template.h	324;"	d
BEGINqueryEtryPt	runtime/module-template.h	504;"	d
BEGINrunInput	runtime/module-template.h	997;"	d
BEGINsetModCnf	runtime/module-template.h	879;"	d
BEGINstrgen	runtime/module-template.h	1158;"	d
BEGINtryResume	runtime/module-template.h	475;"	d
BEGINwillRun	runtime/module-template.h	1018;"	d
BSONAppendJSONObject	plugins/ommongodb/ommongodb.c	/^BSONAppendJSONObject(bson *doc, const gchar *name, struct json_object *json)$/;"	f	file:
BSONFromJSONArray	plugins/ommongodb/ommongodb.c	/^BSONFromJSONArray(struct json_object *json)$/;"	f	file:
BSONFromJSONObject	plugins/ommongodb/ommongodb.c	/^BSONFromJSONObject(struct json_object *json)$/;"	f	file:
BeginSerialize	runtime/obj.c	/^BeginSerialize(strm_t *pStrm, obj_t *pObj)$/;"	f	file:
BeginSerialize	runtime/obj.h	/^	rsRetVal (*BeginSerialize)(strm_t *pStrm, obj_t *pObj);$/;"	v
BeginSerializePropBag	runtime/obj.c	/^BeginSerializePropBag(strm_t *pStrm, obj_t *pObj)$/;"	f	file:
BeginSerializePropBag	runtime/obj.h	/^	rsRetVal (*BeginSerializePropBag)(strm_t *pStrm, obj_t *pObj);$/;"	v
CFGLNSIZ	runtime/conf.c	30;"	d	file:
CFSYSLINE_H_INCLUDED	runtime/cfsysline.h	23;"	d
CHAR_CONVERT	runtime/unicode-helper.h	63;"	d
CHKEOF	tests/rscript.c	126;"	d	file:
CHKgnutls	runtime/nsd_gtls.c	78;"	d	file:
CHKiRet	runtime/rsyslog.h	464;"	d
CHKiRet	runtime/rsyslog.h	466;"	d
CHKiRet_Hdlr	runtime/rsyslog.h	470;"	d
CHKjson	plugins/imuxsock/imuxsock.c	818;"	d	file:
CHKjson	plugins/imuxsock/imuxsock.c	844;"	d	file:
CHKmalloc	runtime/rsyslog.h	472;"	d
CHKr	runtime/librsgt_common.h	89;"	d
CHKrDecode	runtime/librsgt_common.h	91;"	d
CNFACT_LEGACY	grammar/rainerscript.h	/^enum cnfactType { CNFACT_V2, CNFACT_LEGACY };$/;"	e	enum:cnfactType
CNFACT_V2	grammar/rainerscript.h	/^enum cnfactType { CNFACT_V2, CNFACT_LEGACY };$/;"	e	enum:cnfactType
CNFFILT_NONE	grammar/rainerscript.h	/^enum cnfFiltType { CNFFILT_NONE, CNFFILT_PRI, CNFFILT_PROP, CNFFILT_SCRIPT };$/;"	e	enum:cnfFiltType
CNFFILT_PRI	grammar/rainerscript.h	/^enum cnfFiltType { CNFFILT_NONE, CNFFILT_PRI, CNFFILT_PROP, CNFFILT_SCRIPT };$/;"	e	enum:cnfFiltType
CNFFILT_PROP	grammar/rainerscript.h	/^enum cnfFiltType { CNFFILT_NONE, CNFFILT_PRI, CNFFILT_PROP, CNFFILT_SCRIPT };$/;"	e	enum:cnfFiltType
CNFFILT_SCRIPT	grammar/rainerscript.h	/^enum cnfFiltType { CNFFILT_NONE, CNFFILT_PRI, CNFFILT_PROP, CNFFILT_SCRIPT };$/;"	e	enum:cnfFiltType
CNFFUNC_CNUM	grammar/rainerscript.h	/^	CNFFUNC_CNUM,$/;"	e	enum:cnffuncid
CNFFUNC_CSTR	grammar/rainerscript.h	/^	CNFFUNC_CSTR,$/;"	e	enum:cnffuncid
CNFFUNC_EXEC_TEMPLATE	grammar/rainerscript.h	/^	CNFFUNC_EXEC_TEMPLATE,$/;"	e	enum:cnffuncid
CNFFUNC_FIELD	grammar/rainerscript.h	/^	CNFFUNC_FIELD,$/;"	e	enum:cnffuncid
CNFFUNC_GETENV	grammar/rainerscript.h	/^	CNFFUNC_GETENV,$/;"	e	enum:cnffuncid
CNFFUNC_INVALID	grammar/rainerscript.h	/^	CNFFUNC_INVALID = 0, \/**< defunct entry, do not use (should normally not be present) *\/$/;"	e	enum:cnffuncid
CNFFUNC_LOOKUP	grammar/rainerscript.h	/^	CNFFUNC_LOOKUP,$/;"	e	enum:cnffuncid
CNFFUNC_MAX_ARGS	grammar/rainerscript.h	29;"	d
CNFFUNC_NAME	grammar/rainerscript.h	/^	CNFFUNC_NAME = 1,   \/**< use name to call function (for future use) *\/$/;"	e	enum:cnffuncid
CNFFUNC_PRIFILT	grammar/rainerscript.h	/^	CNFFUNC_PRIFILT,$/;"	e	enum:cnffuncid
CNFFUNC_RANDOM	grammar/rainerscript.h	/^	CNFFUNC_RANDOM$/;"	e	enum:cnffuncid
CNFFUNC_REPLACE	grammar/rainerscript.h	/^	CNFFUNC_REPLACE,$/;"	e	enum:cnffuncid
CNFFUNC_RE_EXTRACT	grammar/rainerscript.h	/^	CNFFUNC_RE_EXTRACT,$/;"	e	enum:cnffuncid
CNFFUNC_RE_MATCH	grammar/rainerscript.h	/^	CNFFUNC_RE_MATCH,$/;"	e	enum:cnffuncid
CNFFUNC_STRLEN	grammar/rainerscript.h	/^	CNFFUNC_STRLEN,$/;"	e	enum:cnffuncid
CNFFUNC_TOLOWER	grammar/rainerscript.h	/^	CNFFUNC_TOLOWER,$/;"	e	enum:cnffuncid
CNFFUNC_WRAP	grammar/rainerscript.h	/^	CNFFUNC_WRAP,$/;"	e	enum:cnffuncid
CNFOBJ_ACTION	grammar/rainerscript.h	/^	CNFOBJ_ACTION,$/;"	e	enum:cnfobjType
CNFOBJ_CONSTANT	grammar/rainerscript.h	/^	CNFOBJ_CONSTANT,$/;"	e	enum:cnfobjType
CNFOBJ_GLOBAL	grammar/rainerscript.h	/^	CNFOBJ_GLOBAL,$/;"	e	enum:cnfobjType
CNFOBJ_INPUT	grammar/rainerscript.h	/^	CNFOBJ_INPUT,$/;"	e	enum:cnfobjType
CNFOBJ_INVALID	grammar/rainerscript.h	/^	CNFOBJ_INVALID = 0$/;"	e	enum:cnfobjType
CNFOBJ_LOOKUP_TABLE	grammar/rainerscript.h	/^	CNFOBJ_LOOKUP_TABLE,$/;"	e	enum:cnfobjType
CNFOBJ_MAINQ	grammar/rainerscript.h	/^	CNFOBJ_MAINQ,$/;"	e	enum:cnfobjType
CNFOBJ_MODULE	grammar/rainerscript.h	/^	CNFOBJ_MODULE,$/;"	e	enum:cnfobjType
CNFOBJ_PARSER	grammar/rainerscript.h	/^	CNFOBJ_PARSER,$/;"	e	enum:cnfobjType
CNFOBJ_PROPERTY	grammar/rainerscript.h	/^	CNFOBJ_PROPERTY,$/;"	e	enum:cnfobjType
CNFOBJ_RULESET	grammar/rainerscript.h	/^	CNFOBJ_RULESET,$/;"	e	enum:cnfobjType
CNFOBJ_TIMEZONE	grammar/rainerscript.h	/^	CNFOBJ_TIMEZONE,$/;"	e	enum:cnfobjType
CNFOBJ_TPL	grammar/rainerscript.h	/^	CNFOBJ_TPL,$/;"	e	enum:cnfobjType
CNFPARAMBLK_VERSION	grammar/rainerscript.h	316;"	d
CNFPARAM_DEPRECATED	grammar/rainerscript.h	309;"	d
CNFPARAM_REQUIRED	grammar/rainerscript.h	308;"	d
CODESTARTExit	tests/testbench.h	98;"	d
CODESTARTInit	tests/testbench.h	64;"	d
CODESTARTObjClassExit	runtime/obj-types.h	224;"	d
CODESTARTSetShutdownImmdtPtr	runtime/module-template.h	1112;"	d
CODESTARTTest	tests/testbench.h	84;"	d
CODESTARTactivateCnf	runtime/module-template.h	964;"	d
CODESTARTactivateCnfPrePrivDrop	runtime/module-template.h	946;"	d
CODESTARTafterRun	runtime/module-template.h	1042;"	d
CODESTARTbeginCnfLoad	runtime/module-template.h	856;"	d
CODESTARTbeginTransaction	runtime/module-template.h	237;"	d
CODESTARTcheckCnf	runtime/module-template.h	926;"	d
CODESTARTcommitTransaction	runtime/module-template.h	255;"	d
CODESTARTcreateInstance	runtime/module-template.h	140;"	d
CODESTARTcreateWrkrInstance	runtime/module-template.h	184;"	d
CODESTARTdbgPrintInstInfo	runtime/module-template.h	301;"	d
CODESTARTdoAction	runtime/module-template.h	283;"	d
CODESTARTdoHUP	runtime/module-template.h	1070;"	d
CODESTARTdoHUPWrkr	runtime/module-template.h	1090;"	d
CODESTARTendCnfLoad	runtime/module-template.h	904;"	d
CODESTARTendTransaction	runtime/module-template.h	269;"	d
CODESTARTfreeCnf	runtime/module-template.h	982;"	d
CODESTARTfreeInstance	runtime/module-template.h	167;"	d
CODESTARTfreeParserInst	runtime/module-template.h	457;"	d
CODESTARTfreeWrkrInstance	runtime/module-template.h	204;"	d
CODESTARTinitConfVars	runtime/module-template.h	495;"	d
CODESTARTisCompatibleWithFeature	runtime/module-template.h	222;"	d
CODESTARTmodExit	runtime/module-template.h	838;"	d
CODESTARTmodInit	runtime/module-template.h	769;"	d
CODESTARTnewActInst	runtime/module-template.h	385;"	d
CODESTARTnewInpInst	runtime/module-template.h	419;"	d
CODESTARTnewParserInst	runtime/module-template.h	439;"	d
CODESTARTobjDebugPrint	runtime/obj-types.h	326;"	d
CODESTARTobjDebugPrint	runtime/rsconf.c	/^CODESTARTobjDebugPrint(rsconf)$/;"	f
CODESTARTobjDestruct	runtime/nsdpoll_ptcp.c	/^CODESTARTobjDestruct(nsdpoll_ptcp)$/;"	f
CODESTARTobjDestruct	runtime/obj-types.h	287;"	d
CODESTARTobjQueryInterface	runtime/obj-types.h	360;"	d
CODESTARTparse	runtime/module-template.h	1126;"	d
CODESTARTparse2	runtime/module-template.h	1141;"	d
CODESTARTparseSelectorAct	runtime/module-template.h	331;"	d
CODESTARTqueryEtryPt	runtime/module-template.h	510;"	d
CODESTARTrunInput	runtime/module-template.h	1002;"	d
CODESTARTsetModCnf	runtime/module-template.h	884;"	d
CODESTARTstrgen	runtime/module-template.h	1163;"	d
CODESTARTtryResume	runtime/module-template.h	480;"	d
CODESTARTwillRun	runtime/module-template.h	1023;"	d
CODE_STD_FINALIZERnewActInst	runtime/module-template.h	390;"	d
CODE_STD_FINALIZERnewInpInst	runtime/module-template.h	421;"	d
CODE_STD_FINALIZERnewParserInst	runtime/module-template.h	441;"	d
CODE_STD_FINALIZERparseSelectorAct	runtime/module-template.h	340;"	d
CODE_STD_STRING_REQUESTnewActInst	runtime/module-template.h	387;"	d
CODE_STD_STRING_REQUESTparseSelectorAct	runtime/module-template.h	337;"	d
CODEmodInit_QueryRegCFSLineHdlr	runtime/module-template.h	817;"	d
CODEqueryEtryPt_IsCompatibleWithFeature_IF_OMOD_QUERIES	runtime/module-template.h	605;"	d
CODEqueryEtryPt_STD_CONF2_CNFNAME_QUERIES	runtime/module-template.h	684;"	d
CODEqueryEtryPt_STD_CONF2_IMOD_QUERIES	runtime/module-template.h	664;"	d
CODEqueryEtryPt_STD_CONF2_OMOD_QUERIES	runtime/module-template.h	654;"	d
CODEqueryEtryPt_STD_CONF2_PREPRIVDROP_QUERIES	runtime/module-template.h	674;"	d
CODEqueryEtryPt_STD_CONF2_QUERIES	runtime/module-template.h	629;"	d
CODEqueryEtryPt_STD_CONF2_setModCnf_QUERIES	runtime/module-template.h	646;"	d
CODEqueryEtryPt_STD_IMOD_QUERIES	runtime/module-template.h	615;"	d
CODEqueryEtryPt_STD_LIB_QUERIES	runtime/module-template.h	693;"	d
CODEqueryEtryPt_STD_MOD_QUERIES	runtime/module-template.h	530;"	d
CODEqueryEtryPt_STD_OMOD8_QUERIES	runtime/module-template.h	582;"	d
CODEqueryEtryPt_STD_OMODTX_QUERIES	runtime/module-template.h	563;"	d
CODEqueryEtryPt_STD_OMOD_QUERIES	runtime/module-template.h	544;"	d
CODEqueryEtryPt_STD_PMOD2_QUERIES	runtime/module-template.h	711;"	d
CODEqueryEtryPt_STD_PMOD_QUERIES	runtime/module-template.h	700;"	d
CODEqueryEtryPt_STD_SMOD_QUERIES	runtime/module-template.h	730;"	d
CODEqueryEtryPt_SetShutdownImmdtPtr	runtime/module-template.h	1103;"	d
CODEqueryEtryPt_TXIF_OMOD_QUERIES	runtime/module-template.h	593;"	d
CODEqueryEtryPt_doHUP	runtime/module-template.h	1061;"	d
CODEqueryEtryPt_doHUPWrkr	runtime/module-template.h	1081;"	d
COMPRESS_NEVER	plugins/imptcp/imptcp.c	98;"	d	file:
COMPRESS_NEVER	tools/omfwd.c	102;"	d	file:
COMPRESS_SINGLE_MSG	plugins/imptcp/imptcp.c	99;"	d	file:
COMPRESS_SINGLE_MSG	tools/omfwd.c	103;"	d	file:
COMPRESS_STREAM_ALWAYS	plugins/imptcp/imptcp.c	101;"	d	file:
COMPRESS_STREAM_ALWAYS	tools/omfwd.c	105;"	d	file:
COMP_NUM_BINOP	grammar/rainerscript.c	1935;"	d	file:
COMP_NUM_BINOP_DIV	grammar/rainerscript.c	1942;"	d	file:
CONFIGURED_FILE	plugins/imfile/imfile.c	216;"	d	file:
CONF_HOSTNAME_BUFSIZE	runtime/rsyslog.h	50;"	d
CONF_HOSTNAME_MAXSIZE	runtime/rsyslog.h	46;"	d
CONF_IPARAMS_BUFSIZE	runtime/rsyslog.h	52;"	d
CONF_MIN_SIZE_FOR_COMPRESS	runtime/rsyslog.h	53;"	d
CONF_NUM_MULTISUB	runtime/rsyslog.h	74;"	d
CONF_OMOD_NUMSTRINGS_MAXSIZE	runtime/rsyslog.h	65;"	d
CONF_PROGNAME_BUFSIZE	runtime/rsyslog.h	49;"	d
CONF_PROP_BUFSIZE	runtime/rsyslog.h	51;"	d
CONF_RAWMSG_BUFSIZE	runtime/rsyslog.h	47;"	d
CONF_TAG_BUFSIZE	runtime/rsyslog.h	48;"	d
CONF_TAG_MAXSIZE	runtime/rsyslog.h	45;"	d
CONF_VERIFY_PARTIAL_CONF	dirty.h	41;"	d
CONSTANT	template.h	/^enum EntryTypes { UNDEFINED = 0, CONSTANT = 1, FIELD = 2 };$/;"	e	enum:EntryTypes
CONST_LEN_TIMESTAMP_3164	runtime/rsyslog.h	34;"	d
CONST_LEN_TIMESTAMP_3339	runtime/rsyslog.h	35;"	d
COOKIE_BLANKLINE	runtime/obj.c	106;"	d	file:
COOKIE_BLANKLINE	tools/recover_qi.pl	/^sub COOKIE_BLANKLINE { '.' }$/;"	s
COOKIE_ENDLINE	runtime/obj.c	105;"	d	file:
COOKIE_ENDLINE	tools/recover_qi.pl	/^sub COOKIE_ENDLINE   { '>' }$/;"	s
COOKIE_OBJLINE	runtime/obj.c	103;"	d	file:
COOKIE_OBJLINE	tools/recover_qi.pl	/^sub COOKIE_OBJLINE   { '<' }$/;"	s
COOKIE_PROPLINE	runtime/obj.c	104;"	d	file:
COOKIE_PROPLINE	tools/recover_qi.pl	/^sub COOKIE_PROPLINE  { '+' }$/;"	s
COPY_SUBREC_TO_NEWREC	runtime/librsgt_read.c	1200;"	d	file:
COPY_SUBREC_TO_NEWREC	runtime/librsksi_read.c	1210;"	d	file:
CORE_COMPONENT	runtime/obj-types.h	387;"	d
CORE_FEATURE_BATCHING	runtime/rsyslog.h	138;"	d
CRLFILE	runtime/nsd_gtls.c	56;"	d	file:
CRYPROV_PARAMTYPE_DISK	runtime/cryprov.h	32;"	d
CRYPROV_PARAMTYPE_REGULAR	runtime/cryprov.h	31;"	d
CSV_DELIMITER	contrib/pmpanngfw/pmpanngfw.c	95;"	d	file:
CTR_FLAG_NONE	runtime/statsobj.h	55;"	d
CTR_FLAG_RESETTABLE	runtime/statsobj.h	56;"	d
CURR_MOD_IF_VERSION	runtime/modules.h	53;"	d
CheckConnection	runtime/netstrm.c	/^CheckConnection(netstrm_t *pThis)$/;"	f	file:
CheckConnection	runtime/netstrm.h	/^	rsRetVal (*CheckConnection)(netstrm_t *pThis);	\/* This is a trick mostly for plain tcp syslog *\/$/;"	v
CheckConnection	runtime/nsd.h	/^	rsRetVal (*CheckConnection)(nsd_t *pThis);	\/* This is a trick mostly for plain tcp syslog *\/$/;"	v
CheckConnection	runtime/nsd_gtls.c	/^CheckConnection(nsd_t __attribute__((unused)) *pNsd)$/;"	f	file:
CheckConnection	runtime/nsd_ptcp.c	/^CheckConnection(nsd_t *pNsd)$/;"	f	file:
CheckFileChange	runtime/stream.c	/^CheckFileChange(strm_t *pThis)$/;"	f	file:
CheckFileChange	runtime/stream.h	/^	rsRetVal (*CheckFileChange)(strm_t *pThis);$/;"	v
ChkStopWrkrReg	runtime/queue.c	/^ChkStopWrkrReg(qqueue_t *pThis)$/;"	f	file:
Close	runtime/strms_sess.c	/^Close(strms_sess_t *pThis)$/;"	f	file:
Close	runtime/strms_sess.h	/^	rsRetVal (*Close)(strms_sess_t *pThis);$/;"	v
Close	runtime/tcps_sess.c	/^Close(tcps_sess_t *pThis)$/;"	f	file:
Close	runtime/tcps_sess.h	/^	rsRetVal (*Close)(tcps_sess_t *pThis);$/;"	v
ClosingText	plugins/pmlastmsg/pmlastmsg.c	80;"	d	file:
CmpHost	runtime/net.c	/^static int CmpHost(struct sockaddr_storage *s1, struct sockaddr_storage* s2, size_t socklen)$/;"	f	file:
CmpHost	runtime/net.h	/^	int (*CmpHost)(struct sockaddr_storage *, struct sockaddr_storage*, size_t);$/;"	v
ConfFile	tools/rsyslogd.c	/^uchar *ConfFile = (uchar*) "\/etc\/rsyslog.conf";$/;"	v
Config	plugins/impstats/statslog-graph.py	/^	from pygal import Config$/;"	i
Connect	runtime/netstrm.c	/^Connect(netstrm_t *pThis, int family, uchar *port, uchar *host)$/;"	f	file:
Connect	runtime/netstrm.h	/^	rsRetVal (*Connect)(netstrm_t *pThis, int family, unsigned char *port, unsigned char *host);$/;"	v
Connect	runtime/nsd.h	/^	rsRetVal (*Connect)(nsd_t *pThis, int family, unsigned char *port, unsigned char *host);$/;"	v
Connect	runtime/nsd_gtls.c	/^Connect(nsd_t *pNsd, int family, uchar *port, uchar *host)$/;"	f	file:
Connect	runtime/nsd_ptcp.c	/^Connect(nsd_t *pNsd, int family, uchar *port, uchar *host)$/;"	f	file:
Construct	runtime/cryprov.h	/^	rsRetVal (*Construct)(void *ppThis);$/;"	v
Construct	runtime/netstrm.h	/^	rsRetVal (*Construct)(netstrm_t **ppThis);$/;"	v
Construct	runtime/netstrms.h	/^	rsRetVal (*Construct)(netstrms_t **ppThis);$/;"	v
Construct	runtime/nsd.h	/^	rsRetVal (*Construct)(nsd_t **ppThis);$/;"	v
Construct	runtime/nsd.h	/^	rsRetVal (*Construct)(nsdpoll_t **ppThis);$/;"	v
Construct	runtime/nsd.h	/^	rsRetVal (*Construct)(nsdsel_t **ppThis);$/;"	v
Construct	runtime/nspoll.h	/^	rsRetVal (*Construct)(nspoll_t **ppThis);$/;"	v
Construct	runtime/nssel.h	/^	rsRetVal (*Construct)(nssel_t **ppThis);$/;"	v
Construct	runtime/parser.h	/^	rsRetVal (*Construct)(parser_t **ppThis);$/;"	v
Construct	runtime/prop.h	/^	rsRetVal (*Construct)(prop_t **ppThis);$/;"	v
Construct	runtime/rsconf.h	/^	rsRetVal (*Construct)(rsconf_t **ppThis);$/;"	v
Construct	runtime/ruleset.h	/^	rsRetVal (*Construct)(ruleset_t **ppThis);$/;"	v
Construct	runtime/sigprov.h	/^	rsRetVal (*Construct)(void *ppThis);$/;"	v
Construct	runtime/statsobj.h	/^	rsRetVal (*Construct)(statsobj_t **ppThis);$/;"	v
Construct	runtime/stream.h	/^	rsRetVal (*Construct)(strm_t **ppThis);$/;"	v
Construct	runtime/strgen.h	/^	rsRetVal (*Construct)(strgen_t **ppThis);$/;"	v
Construct	runtime/strms_sess.h	/^	rsRetVal (*Construct)(strms_sess_t **ppThis);$/;"	v
Construct	runtime/strmsrv.h	/^	rsRetVal (*Construct)(strmsrv_t **ppThis);$/;"	v
Construct	runtime/tcpclt.h	/^	rsRetVal (*Construct)(tcpclt_t **ppThis);$/;"	v
Construct	runtime/tcps_sess.h	/^	rsRetVal (*Construct)(tcps_sess_t **ppThis);$/;"	v
Construct	runtime/tcpsrv.h	/^	rsRetVal (*Construct)(tcpsrv_t **ppThis);$/;"	v
Construct	runtime/var.h	/^	rsRetVal (*Construct)(var_t **ppThis);$/;"	v
ConstructFinalize	runtime/netstrm.h	/^	rsRetVal (*ConstructFinalize)(netstrm_t *pThis);$/;"	v
ConstructFinalize	runtime/netstrms.h	/^	rsRetVal (*ConstructFinalize)(netstrms_t *pThis);$/;"	v
ConstructFinalize	runtime/nspoll.c	/^ConstructFinalize(nspoll_t *pThis)$/;"	f	file:
ConstructFinalize	runtime/nspoll.h	/^	rsRetVal (*ConstructFinalize)(nspoll_t *pThis);$/;"	v
ConstructFinalize	runtime/nssel.c	/^ConstructFinalize(nssel_t *pThis)$/;"	f	file:
ConstructFinalize	runtime/nssel.h	/^	rsRetVal (*ConstructFinalize)(nssel_t *pThis);$/;"	v
ConstructFinalize	runtime/parser.h	/^	rsRetVal (*ConstructFinalize)(parser_t *pThis);$/;"	v
ConstructFinalize	runtime/prop.h	/^	rsRetVal (*ConstructFinalize)(prop_t *pThis);$/;"	v
ConstructFinalize	runtime/rsconf.h	/^	rsRetVal (*ConstructFinalize)(rsconf_t __attribute__((unused)) *pThis);$/;"	v
ConstructFinalize	runtime/ruleset.h	/^	rsRetVal (*ConstructFinalize)(rsconf_t *conf, ruleset_t __attribute__((unused)) *pThis);$/;"	v
ConstructFinalize	runtime/statsobj.h	/^	rsRetVal (*ConstructFinalize)(statsobj_t *pThis);$/;"	v
ConstructFinalize	runtime/stream.h	/^	rsRetVal (*ConstructFinalize)(strm_t *pThis);$/;"	v
ConstructFinalize	runtime/strgen.h	/^	rsRetVal (*ConstructFinalize)(strgen_t *pThis);$/;"	v
ConstructFinalize	runtime/strms_sess.h	/^	rsRetVal (*ConstructFinalize)(strms_sess_t __attribute__((unused)) *pThis);$/;"	v
ConstructFinalize	runtime/strmsrv.h	/^	rsRetVal (*ConstructFinalize)(strmsrv_t __attribute__((unused)) *pThis);$/;"	v
ConstructFinalize	runtime/tcpclt.h	/^	rsRetVal (*ConstructFinalize)(tcpclt_t __attribute__((unused)) *pThis);$/;"	v
ConstructFinalize	runtime/tcps_sess.h	/^	rsRetVal (*ConstructFinalize)(tcps_sess_t __attribute__((unused)) *pThis);$/;"	v
ConstructFinalize	runtime/tcpsrv.h	/^	rsRetVal (*ConstructFinalize)(tcpsrv_t __attribute__((unused)) *pThis);$/;"	v
ConstructFinalize	runtime/var.h	/^	rsRetVal (*ConstructFinalize)(var_t __attribute__((unused)) *pThis);$/;"	v
ConsumerDA	runtime/queue.c	/^ConsumerDA(qqueue_t *pThis, wti_t *pWti)$/;"	f	file:
ConsumerReg	runtime/queue.c	/^ConsumerReg(qqueue_t *pThis, wti_t *pWti)$/;"	f	file:
CreateGrok	contrib/mmgrok/mmgrok.c	/^static inline grok_t *CreateGrok()$/;"	f	file:
CreateOrReuseStringProp	runtime/prop.c	/^rsRetVal CreateOrReuseStringProp(prop_t **ppThis, const uchar *psz, const int len)$/;"	f
CreateOrReuseStringProp	runtime/prop.h	/^	rsRetVal (*CreateOrReuseStringProp)(prop_t **ppThis, const uchar *psz, const int len);$/;"	v
CreateSocket	runtime/tcpclt.c	/^CreateSocket(struct addrinfo *addrDest)$/;"	f	file:
CreateSocket	runtime/tcpclt.h	/^	int (*CreateSocket)(struct addrinfo *addrDest);$/;"	v
CreateStringProp	runtime/prop.c	/^static rsRetVal CreateStringProp(prop_t **ppThis, const uchar* psz, const int len)$/;"	f	file:
CreateStringProp	runtime/prop.h	/^	rsRetVal (*CreateStringProp)(prop_t **ppThis, const uchar* psz, const int len);$/;"	v
CreateStrm	runtime/netstrms.c	/^CreateStrm(netstrms_t *pThis, netstrm_t **ppStrm)$/;"	f	file:
CreateStrm	runtime/netstrms.h	/^	rsRetVal (*CreateStrm)(netstrms_t *pThis, netstrm_t **ppStrm);$/;"	v
Ctl	runtime/nsd.h	/^	rsRetVal (*Ctl)(nsdpoll_t *pNsdpoll, nsd_t *pNsd, int id, void *pUsr, int mode, int op);$/;"	v
Ctl	runtime/nsdpoll_ptcp.c	/^Ctl(nsdpoll_t *pNsdpoll, nsd_t *pNsd, int id, void *pUsr, int mode, int op) {$/;"	f	file:
Ctl	runtime/nspoll.c	/^Ctl(nspoll_t *pThis, netstrm_t *pStrm, int id, void *pUsr, int mode, int op) {$/;"	f	file:
Ctl	runtime/nspoll.h	/^	rsRetVal (*Ctl)(nspoll_t *pNsdpoll, netstrm_t *pStrm, int id, void *pUsr, int mode, int op);$/;"	v
DBGOPRINT	runtime/debug.h	119;"	d
DBGOPRINT	runtime/debug.h	122;"	d
DBGPRINTF	runtime/debug.h	118;"	d
DBGPRINTF	runtime/debug.h	121;"	d
DEBUG_FULL	runtime/debug.h	33;"	d
DEBUG_H_INCLUDED	runtime/debug.h	25;"	d
DEBUG_OFF	runtime/debug.h	31;"	d
DEBUG_ONDEMAND	runtime/debug.h	32;"	d
DEFAULT_FACILITY	plugins/impstats/impstats.c	58;"	d	file:
DEFAULT_MARK_PERIOD	plugins/immark/immark.c	52;"	d	file:
DEFAULT_SEVERITY	plugins/impstats/impstats.c	59;"	d	file:
DEFAULT_STATS_PERIOD	plugins/impstats/impstats.c	57;"	d	file:
DEFFUNC_llExecFunc	action.c	/^DEFFUNC_llExecFunc(doActivateActions)$/;"	f
DEFFUNC_llExecFunc	runtime/cfsysline.c	/^DEFFUNC_llExecFunc(unregHdlrsHeadExec)$/;"	f
DEFFUNC_llExecFunc	runtime/linkedlist.h	68;"	d
DEFFUNC_llExecFunc	runtime/ruleset.c	/^DEFFUNC_llExecFunc(doActivateRulesetQueues)$/;"	f
DEFFUNC_llExecFunc	runtime/ruleset.c	/^DEFFUNC_llExecFunc(doIterateAllActions)$/;"	f
DEFFUNC_llExecFunc	runtime/ruleset.c	/^DEFFUNC_llExecFunc(doRulesetOptimizeAll)$/;"	f
DEFFUNC_llExecFunc	tools/rsyslogd.c	/^DEFFUNC_llExecFunc(doHUPActions)$/;"	f
DEFINE_HASHTABLE_INSERT	runtime/hashtable.h	102;"	d
DEFINE_HASHTABLE_ITERATOR_SEARCH	runtime/hashtable_itr.h	71;"	d
DEFINE_HASHTABLE_REMOVE	runtime/hashtable.h	138;"	d
DEFINE_HASHTABLE_SEARCH	runtime/hashtable.h	120;"	d
DEFUPRI	runtime/parser.c	47;"	d	file:
DEFVARS_mutexProtection	runtime/srUtils.h	102;"	d
DEF_ATOMIC_HELPER_MUT	runtime/atomic.h	184;"	d
DEF_ATOMIC_HELPER_MUT	runtime/atomic.h	59;"	d
DEF_ATOMIC_HELPER_MUT64	runtime/atomic.h	200;"	d
DEF_ATOMIC_HELPER_MUT64	runtime/atomic.h	224;"	d
DEF_IMOD_STATIC_DATA	runtime/module-template.h	42;"	d
DEF_LMOD_STATIC_DATA	runtime/module-template.h	45;"	d
DEF_MOD_STATIC_DATA	runtime/module-template.h	35;"	d
DEF_OMOD_STATIC_DATA	runtime/module-template.h	38;"	d
DEF_PMOD_STATIC_DATA	runtime/module-template.h	47;"	d
DEF_SMOD_STATIC_DATA	runtime/module-template.h	50;"	d
DEFiRet	runtime/rsyslog.h	475;"	d
DEFmodGetID	runtime/module-template.h	104;"	d
DEFobjCurrIf	plugins/im3195/im3195.c	/^DEFobjCurrIf(errmsg)$/;"	f
DEFobjCurrIf	plugins/imjournal/imjournal.c	/^DEFobjCurrIf(datetime)$/;"	f
DEFobjCurrIf	plugins/imsolaris/imsolaris.c	/^DEFobjCurrIf(errmsg)$/;"	f
DEFobjCurrIf	runtime/obj-types.h	403;"	d
DEFobjCurrIf	runtime/stringbuf.c	/^DEFobjCurrIf(obj)$/;"	f
DEFobjStaticHelpers	runtime/obj.h	68;"	d
DEFpropGetMeth	runtime/obj-types.h	124;"	d
DEFpropSetMeth	runtime/obj-types.h	139;"	d
DEFpropSetMeth	runtime/obj-types.h	155;"	d
DEFpropSetMeth	runtime/wtp.c	/^DEFpropSetMeth(wtp, wtpState, wtpState_t)$/;"	f
DEFpropSetMethFP	runtime/obj-types.h	146;"	d
DEFpropSetMethPTR	runtime/obj-types.h	130;"	d
DESTROY_ATOMIC_HELPER_MUT	runtime/atomic.h	186;"	d
DESTROY_ATOMIC_HELPER_MUT	runtime/atomic.h	61;"	d
DESTROY_ATOMIC_HELPER_MUT64	runtime/atomic.h	202;"	d
DESTROY_ATOMIC_HELPER_MUT64	runtime/atomic.h	226;"	d
DFLT_ENABLE_TLS	plugins/omrelp/omrelp.c	67;"	d	file:
DFLT_ENABLE_TLSZIP	plugins/omrelp/omrelp.c	68;"	d	file:
DFLT_FACILITY	plugins/imjournal/imjournal.c	102;"	d	file:
DFLT_NETSTRM_DRVR	runtime/glbl.c	56;"	d	file:
DFLT_PollInterval	plugins/imfile/imfile.c	80;"	d	file:
DFLT_SEVERITY	plugins/imjournal/imjournal.c	101;"	d	file:
DFLT_SOURCE_PORT_END	plugins/omudpspoof/omudpspoof.c	113;"	d	file:
DFLT_SOURCE_PORT_START	plugins/omudpspoof/omudpspoof.c	112;"	d	file:
DFLT_bCreatePath	plugins/imuxsock/imuxsock.c	164;"	d	file:
DFLT_bLogStatusMsgs	runtime/rsconf.h	186;"	d
DFLT_persiststateinterval	plugins/imjournal/imjournal.c	100;"	d	file:
DFLT_ratelimitBurst	plugins/imuxsock/imuxsock.c	166;"	d	file:
DFLT_ratelimitInterval	plugins/imuxsock/imuxsock.c	165;"	d	file:
DFLT_ratelimitSeverity	plugins/imuxsock/imuxsock.c	167;"	d	file:
DFLT_wrkrMax	plugins/imptcp/imptcp.c	96;"	d	file:
DIRTY_H_INCLUDED	dirty.h	27;"	d
DIR_ALLOWEDSENDER	runtime/conf.h	/^enum eDirective { DIR_TEMPLATE = 0, DIR_OUTCHANNEL = 1, DIR_ALLOWEDSENDER = 2};$/;"	e	enum:eDirective
DIR_OUTCHANNEL	runtime/conf.h	/^enum eDirective { DIR_TEMPLATE = 0, DIR_OUTCHANNEL = 1, DIR_ALLOWEDSENDER = 2};$/;"	e	enum:eDirective
DIR_TEMPLATE	runtime/conf.h	/^enum eDirective { DIR_TEMPLATE = 0, DIR_OUTCHANNEL = 1, DIR_ALLOWEDSENDER = 2};$/;"	e	enum:eDirective
DLL_Add	runtime/debug.c	146;"	d	file:
DLL_Del	runtime/debug.c	135;"	d	file:
DONT_LOAD_LIB	runtime/obj-types.h	388;"	d
DOORFILE	plugins/imsolaris/sun_cddl.c	68;"	d	file:
DPP	contrib/omhttpfs/omhttpfs.c	90;"	d	file:
DataRcvd	plugins/imptcp/imptcp.c	/^DataRcvd(ptcpsess_t *pThis, char *pData, size_t iLen)$/;"	f	file:
DataRcvd	runtime/strms_sess.c	/^DataRcvd(strms_sess_t *pThis, char *pData, size_t iLen)$/;"	f	file:
DataRcvd	runtime/strms_sess.h	/^	rsRetVal (*DataRcvd)(strms_sess_t *pThis, char *pData, size_t iLen);$/;"	v
DataRcvd	runtime/tcps_sess.c	/^DataRcvd(tcps_sess_t *pThis, char *pData, size_t iLen)$/;"	f	file:
DataRcvd	runtime/tcps_sess.h	/^	rsRetVal (*DataRcvd)(tcps_sess_t *pThis, char *pData, size_t iLen);$/;"	v
DataRcvdCompressed	plugins/imptcp/imptcp.c	/^DataRcvdCompressed(ptcpsess_t *pThis, char *buf, size_t len)$/;"	f	file:
DataRcvdUncompressed	plugins/imptcp/imptcp.c	/^DataRcvdUncompressed(ptcpsess_t *pThis, char *pData, size_t iLen, struct syslogTime *stTime, time_t ttGenTime)$/;"	f	file:
Debug	grammar/testdriver.c	/^int Debug = 1;$/;"	v
DebugPrintAll	runtime/ruleset.h	/^	rsRetVal (*DebugPrintAll)(rsconf_t *conf);$/;"	v
DecodePRIFilter	runtime/conf.c	/^rsRetVal DecodePRIFilter(uchar *pline, uchar pmask[])$/;"	f
DecodePropFilter	grammar/rainerscript.c	/^DecodePropFilter(uchar *pline, struct cnfstmt *stmt)$/;"	f	file:
Decrypt	runtime/cryprov.h	/^	rsRetVal (*Decrypt)(void *pFileInstData, uchar *buf, size_t *lenBuf);$/;"	v
Decrypt	runtime/lmcry_gcry.c	/^Decrypt(void *pF, uchar *rec, size_t *lenRec)$/;"	f	file:
Deflate	runtime/zlibw.h	/^	int (*Deflate)(z_streamp strm, int);$/;"	v
DeflateEnd	runtime/zlibw.h	/^	int (*DeflateEnd)(z_streamp strm);$/;"	v
DeflateInit	runtime/zlibw.h	/^	int (*DeflateInit)(z_streamp strm, int);$/;"	v
DeflateInit2	runtime/zlibw.h	/^	int (*DeflateInit2)(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy);$/;"	v
DeleteBatchFromQStore	runtime/queue.c	/^DeleteBatchFromQStore(qqueue_t *pThis, batch_t *pBatch)$/;"	f	file:
DeleteProcessedBatch	runtime/queue.c	/^DeleteProcessedBatch(qqueue_t *pThis, batch_t *pBatch)$/;"	f	file:
DeleteStateFiles	runtime/cryprov.h	/^	rsRetVal (*DeleteStateFiles)(uchar *logfn);$/;"	v
DeleteStateFiles	runtime/lmcry_gcry.c	/^DeleteStateFiles(uchar *logfn)$/;"	f	file:
DequeueConsumable	runtime/queue.c	/^DequeueConsumable(qqueue_t *pThis, wti_t *pWti)$/;"	f	file:
DequeueConsumableElements	runtime/queue.c	/^DequeueConsumableElements(qqueue_t *pThis, wti_t *pWti, int *piRemainingQueueSize)$/;"	f	file:
DequeueForConsumer	runtime/queue.c	/^DequeueForConsumer(qqueue_t *pThis, wti_t *pWti)$/;"	f	file:
Deserialize	runtime/obj.c	/^Deserialize(void *ppObj, uchar *pszTypeExpected, strm_t *pStrm, rsRetVal (*fFixup)(obj_t*,void*), void *pUsr)$/;"	f	file:
Deserialize	runtime/obj.h	/^	rsRetVal (*Deserialize)(void *ppObj, uchar *pszTypeExpected, strm_t *pStrm, rsRetVal (*fFixup)(obj_t*,void*), void *pUsr);$/;"	v
DeserializePropBag	runtime/obj.c	/^DeserializePropBag(obj_t *pObj, strm_t *pStrm)$/;"	f	file:
DeserializePropBag	runtime/obj.h	/^	rsRetVal (*DeserializePropBag)(obj_t *pObj, strm_t *pStrm);$/;"	v
Destruct	runtime/cryprov.h	/^	rsRetVal (*Destruct)(void *ppThis);$/;"	v
Destruct	runtime/netstrm.h	/^	rsRetVal (*Destruct)(netstrm_t **ppThis);$/;"	v
Destruct	runtime/netstrms.h	/^	rsRetVal (*Destruct)(netstrms_t **ppThis);$/;"	v
Destruct	runtime/nsd.h	/^	rsRetVal (*Destruct)(nsd_t **ppThis);$/;"	v
Destruct	runtime/nsd.h	/^	rsRetVal (*Destruct)(nsdpoll_t **ppThis);$/;"	v
Destruct	runtime/nsd.h	/^	rsRetVal (*Destruct)(nsdsel_t **ppThis);$/;"	v
Destruct	runtime/nspoll.h	/^	rsRetVal (*Destruct)(nspoll_t **ppThis);$/;"	v
Destruct	runtime/nssel.h	/^	rsRetVal (*Destruct)(nssel_t **ppThis);$/;"	v
Destruct	runtime/parser.h	/^	rsRetVal (*Destruct)(parser_t **ppThis);$/;"	v
Destruct	runtime/prop.h	/^	rsRetVal (*Destruct)(prop_t **ppThis);$/;"	v
Destruct	runtime/rsconf.h	/^	rsRetVal (*Destruct)(rsconf_t **ppThis);$/;"	v
Destruct	runtime/ruleset.h	/^	rsRetVal (*Destruct)(ruleset_t **ppThis);$/;"	v
Destruct	runtime/sigprov.h	/^	rsRetVal (*Destruct)(void *ppThis);$/;"	v
Destruct	runtime/statsobj.h	/^	rsRetVal (*Destruct)(statsobj_t **ppThis);$/;"	v
Destruct	runtime/stream.h	/^	rsRetVal (*Destruct)(strm_t **ppThis);$/;"	v
Destruct	runtime/strgen.h	/^	rsRetVal (*Destruct)(strgen_t **ppThis);$/;"	v
Destruct	runtime/strms_sess.h	/^	rsRetVal (*Destruct)(strms_sess_t **ppThis);$/;"	v
Destruct	runtime/strmsrv.h	/^	rsRetVal (*Destruct)(strmsrv_t **ppThis);$/;"	v
Destruct	runtime/tcpclt.h	/^	rsRetVal (*Destruct)(tcpclt_t **ppThis);$/;"	v
Destruct	runtime/tcps_sess.h	/^	rsRetVal (*Destruct)(tcps_sess_t **ppThis);$/;"	v
Destruct	runtime/tcpsrv.h	/^	rsRetVal (*Destruct)(tcpsrv_t **ppThis);$/;"	v
Destruct	runtime/var.h	/^	rsRetVal (*Destruct)(var_t **ppThis);$/;"	v
DestructAllActions	runtime/ruleset.h	/^	rsRetVal (*DestructAllActions)(rsconf_t *conf);$/;"	v
DestructObjSelf	runtime/obj.c	/^DestructObjSelf(obj_t *pThis)$/;"	f	file:
DestructObjSelf	runtime/obj.h	/^	rsRetVal (*DestructObjSelf)(obj_t *pThis);$/;"	v
DestructParserList	runtime/parser.c	/^DestructParserList(parserList_t **ppListRoot)$/;"	f	file:
DestructParserList	runtime/parser.h	/^	rsRetVal (*DestructParserList)(parserList_t **pListRoot);$/;"	v
DestructPermittedPeerWildcards	runtime/net.c	/^DestructPermittedPeerWildcards(permittedPeers_t *pPeer)$/;"	f	file:
DestructPermittedPeers	runtime/net.c	/^DestructPermittedPeers(permittedPeers_t **ppRootPeer)$/;"	f	file:
DestructPermittedPeers	runtime/net.h	/^	rsRetVal (*DestructPermittedPeers)(permittedPeers_t **ppRootPeer);$/;"	v
DestructStrgenList	runtime/strgen.c	/^DestructStrgenList(strgenList_t **ppListRoot)$/;"	f	file:
DestructStrgenList	runtime/strgen.h	/^	rsRetVal (*DestructStrgenList)(strgenList_t **pListRoot);$/;"	v
DestructTCPInstanceData	tools/omfwd.c	/^DestructTCPInstanceData(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
DiagTalker	tests/historical/DiagTalker.java	/^public class DiagTalker {$/;"	c
DoDeleteBatchFromQStore	runtime/queue.c	/^DoDeleteBatchFromQStore(qqueue_t *pThis, int nElem)$/;"	f	file:
DoSaveOnShutdown	runtime/queue.c	/^DoSaveOnShutdown(qqueue_t *pThis)$/;"	f	file:
DoSubmitMessage	runtime/tcps_sess.h	/^	rsRetVal (*DoSubmitMessage)(tcps_sess_t*, uchar*, int); \/* submit message callback *\/$/;"	m	struct:tcps_sess_s
DoorCreated	plugins/imsolaris/sun_cddl.c	/^static int		DoorCreated = 0;$/;"	v	file:
DoorFd	plugins/imsolaris/sun_cddl.c	/^static int		DoorFd = -1;$/;"	v	file:
DoorFileName	plugins/imsolaris/sun_cddl.c	/^static char		*DoorFileName = DOORFILE;$/;"	v	file:
DropMalPTRMsgs	runtime/glbl.c	/^	SIMP_PROP(DropMalPTRMsgs);$/;"	v
Drvr	runtime/netstrm.h	/^	nsd_if_t Drvr;		\/**< our stream driver *\/$/;"	m	struct:netstrm_s
Drvr	runtime/netstrms.h	/^	nsd_if_t Drvr;		\/**< our stream driver *\/$/;"	m	struct:netstrms_s
Drvr	runtime/nspoll.h	/^	nsdpoll_if_t Drvr;	\/**< our stream driver *\/$/;"	m	struct:nspoll_s
Drvr	runtime/nssel.h	/^	nsdsel_if_t Drvr;	\/**< our stream driver *\/$/;"	m	struct:nssel_s
Dup	runtime/stream.h	/^	rsRetVal (*Dup)(strm_t *pThis, strm_t **ppNew);$/;"	v
EHostnameCmpMode	runtime/syslogd-types.h	/^typedef enum _EHostnameCmpMode EHostnameCmpMode;$/;"	t	typeref:enum:_EHostnameCmpMode
EIF_MAX_RECTYPE_LEN	runtime/libgcry.h	72;"	d
EIF_MAX_VALUE_LEN	runtime/libgcry.h	73;"	d
EMPTY_STRUCT	plugins/imdiag/imdiag.c	/^	EMPTY_STRUCT;$/;"	m	struct:modConfData_s	file:
EMPTY_STRUCT	plugins/imgssapi/imgssapi.c	/^	EMPTY_STRUCT;$/;"	m	struct:modConfData_s	file:
EMPTY_STRUCT	runtime/rsyslog.h	635;"	d
ENCINFO_SUFFIX	runtime/libgcry.h	75;"	d
ENDExit	tests/testbench.h	100;"	d
ENDInit	tests/testbench.h	66;"	d
ENDObjClassExit	runtime/modules.c	/^ENDObjClassExit(module)$/;"	f
ENDObjClassExit	runtime/obj-types.h	226;"	d
ENDObjClassInit	runtime/obj-types.h	186;"	d
ENDObjClassInit	runtime/obj-types.h	207;"	d
ENDSetShutdownImmdtPtr	runtime/module-template.h	1114;"	d
ENDTest	tests/testbench.h	86;"	d
END_MTX_PROTECTED_OPERATIONS	runtime/srUtils.h	110;"	d
ENDactivateCnf	runtime/module-template.h	966;"	d
ENDactivateCnfPrePrivDrop	runtime/module-template.h	948;"	d
ENDafterRun	runtime/module-template.h	1044;"	d
ENDbeginCnfLoad	runtime/module-template.h	863;"	d
ENDbeginTransaction	runtime/module-template.h	239;"	d
ENDcheckCnf	runtime/module-template.h	928;"	d
ENDcommitTransaction	runtime/module-template.h	257;"	d
ENDcreateInstance	runtime/module-template.h	147;"	d
ENDcreateWrkrInstance	runtime/module-template.h	192;"	d
ENDdbgPrintInstInfo	runtime/module-template.h	305;"	d
ENDdoAction	runtime/module-template.h	286;"	d
ENDdoHUP	runtime/module-template.h	1072;"	d
ENDdoHUPWrkr	runtime/module-template.h	1092;"	d
ENDendCnfLoad	runtime/module-template.h	906;"	d
ENDendTransaction	runtime/module-template.h	271;"	d
ENDfreeCnf	runtime/module-template.h	984;"	d
ENDfreeInstance	runtime/module-template.h	170;"	d
ENDfreeParserInst	runtime/module-template.h	460;"	d
ENDfreeWrkrInstance	runtime/module-template.h	207;"	d
ENDfunc	runtime/debug.h	126;"	d
ENDfunc	runtime/debug.h	131;"	d
ENDfuncIRet	runtime/debug.h	127;"	d
ENDfuncIRet	runtime/debug.h	132;"	d
ENDinitConfVars	runtime/module-template.h	497;"	d
ENDinterface	runtime/obj-types.h	374;"	d
ENDisCompatibleWithFeature	runtime/module-template.h	224;"	d
ENDmodExit	runtime/module-template.h	840;"	d
ENDmodInit	runtime/module-template.h	783;"	d
ENDnewActInst	runtime/module-template.h	405;"	d
ENDnewInpInst	runtime/module-template.h	423;"	d
ENDnewParserInst	runtime/module-template.h	443;"	d
ENDobjConstruct	runtime/nsd_gtls.c	/^ENDobjConstruct(nsd_gtls)$/;"	f
ENDobjConstruct	runtime/obj-types.h	239;"	d
ENDobjConstruct	runtime/rsconf.c	/^ENDobjConstruct(rsconf)$/;"	f
ENDobjConstruct	runtime/wti.c	/^ENDobjConstruct(wti)$/;"	f
ENDobjConstruct	runtime/wtp.c	/^ENDobjConstruct(wtp)$/;"	f
ENDobjDebugPrint	runtime/obj-types.h	330;"	d
ENDobjDebugPrint	runtime/ruleset.c	/^ENDobjDebugPrint(ruleset)$/;"	f
ENDobjDebugPrint	runtime/var.c	/^ENDobjDebugPrint(var)$/;"	f
ENDobjDestruct	runtime/msg.c	/^ENDobjDestruct(msg)$/;"	f
ENDobjDestruct	runtime/obj-types.h	301;"	d
ENDobjDestruct	runtime/queue.c	/^ENDobjDestruct(qqueue)$/;"	f
ENDobjDestruct	runtime/var.c	/^ENDobjDestruct(var)$/;"	f
ENDobjDestruct	runtime/wtp.c	/^ENDobjDestruct(wtp)$/;"	f
ENDobjQueryInterface	runtime/obj-types.h	363;"	d
ENDobjQueryInterface	runtime/obj.c	/^ENDobjQueryInterface(obj)$/;"	f
ENDparse	runtime/module-template.h	1129;"	d
ENDparse2	runtime/module-template.h	1145;"	d
ENDparseSelectorAct	runtime/module-template.h	356;"	d
ENDqueryEtryPt	runtime/module-template.h	517;"	d
ENDrunInput	runtime/module-template.h	1005;"	d
ENDsetModCnf	runtime/module-template.h	886;"	d
ENDstrgen	runtime/module-template.h	1166;"	d
ENDtryResume	runtime/module-template.h	483;"	d
ENDwillRun	runtime/module-template.h	1025;"	d
ENOWType	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	g	file:
ERRMSG_LEN	plugins/imsolaris/sun_cddl.c	73;"	d	file:
ERR_TTYHUP	runtime/stream.c	1061;"	d	file:
ERR_TTYHUP	runtime/stream.c	1063;"	d	file:
ER_TTYHUP	runtime/stream.c	1082;"	d	file:
ETCPsyslogFramingAnomaly	runtime/tcpsrv.h	/^typedef enum ETCPsyslogFramingAnomaly {$/;"	g
EXIT_FAILURE	tests/nettester.c	54;"	d	file:
EXIT_FAILURE	tests/randomgen.c	48;"	d	file:
EXIT_FAILURE	tests/tcpflood.c	107;"	d	file:
EnableKeepAlive	plugins/imptcp/imptcp.c	/^EnableKeepAlive(ptcplstn_t *pLstn, int sock)$/;"	f	file:
EnableKeepAlive	runtime/netstrm.c	/^EnableKeepAlive(netstrm_t *pThis)$/;"	f	file:
EnableKeepAlive	runtime/netstrm.h	/^	rsRetVal (*EnableKeepAlive)(netstrm_t *pThis);$/;"	v
EnableKeepAlive	runtime/nsd.h	/^	rsRetVal (*EnableKeepAlive)(nsd_t *pThis);$/;"	v
EnableKeepAlive	runtime/nsd_gtls.c	/^EnableKeepAlive(nsd_t *pNsd)$/;"	f	file:
EnableKeepAlive	runtime/nsd_ptcp.c	/^EnableKeepAlive(nsd_t *pNsd)$/;"	f	file:
EnableStats	runtime/statsobj.h	/^	rsRetVal (*EnableStats)(void);$/;"	v
Encrypt	runtime/cryprov.h	/^	rsRetVal (*Encrypt)(void *pFileInstData, uchar *buf, size_t *lenBuf);$/;"	v
Encrypt	runtime/lmcry_gcry.c	/^Encrypt(void *pF, uchar *rec, size_t *lenRec)$/;"	f	file:
EndSerialize	runtime/obj.c	/^EndSerialize(strm_t *pStrm)$/;"	f	file:
EndSerialize	runtime/obj.h	/^	rsRetVal (*EndSerialize)(strm_t *pStrm);$/;"	v
EntryTypes	template.h	/^enum EntryTypes { UNDEFINED = 0, CONSTANT = 1, FIELD = 2 };$/;"	g
ExtendBuf	template.c	/^ExtendBuf(actWrkrIParams_t *__restrict__ const iparam, const size_t iMinSize)$/;"	f
FD_ZERO	runtime/unlimited_select.h	33;"	d
FD_ZERO	runtime/unlimited_select.h	34;"	d
FIELD	template.h	/^enum EntryTypes { UNDEFINED = 0, CONSTANT = 1, FIELD = 2 };$/;"	e	enum:EntryTypes
FINALIZE	runtime/rsyslog.h	474;"	d
FIOP_CONTAINS	runtime/typedefs.h	/^	FIOP_CONTAINS  = 1,	\/* contains string? *\/$/;"	e	enum:__anon56
FIOP_EREREGEX	runtime/typedefs.h	/^	FIOP_EREREGEX = 5,	\/* matches a ERE regular expression? *\/$/;"	e	enum:__anon56
FIOP_ISEMPTY	runtime/typedefs.h	/^	FIOP_ISEMPTY = 6	\/* string empty <=> strlen(s) == 0 ?*\/$/;"	e	enum:__anon56
FIOP_ISEQUAL	runtime/typedefs.h	/^	FIOP_ISEQUAL  = 2,	\/* is (exactly) equal? *\/$/;"	e	enum:__anon56
FIOP_NOP	runtime/typedefs.h	/^	FIOP_NOP = 0,		\/* do not use - No Operation *\/$/;"	e	enum:__anon56
FIOP_REGEX	runtime/typedefs.h	/^	FIOP_REGEX = 4,		\/* matches a (BRE) regular expression? *\/$/;"	e	enum:__anon56
FIOP_STARTSWITH	runtime/typedefs.h	/^	FIOP_STARTSWITH = 3,	\/* starts with a string? *\/$/;"	e	enum:__anon56
FLUSHONTX_DFLT	tools/omfile.c	132;"	d	file:
FLUSH_INTRVL_DFLT	tools/omfile.c	130;"	d	file:
FMT_NATIVE	tests/syslog_caller.c	/^static enum { FMT_NATIVE, FMT_SYSLOG_INJECT_L, FMT_SYSLOG_INJECT_C$/;"	e	enum:__anon74	file:
FMT_SYSLOG_INJECT_C	tests/syslog_caller.c	/^static enum { FMT_NATIVE, FMT_SYSLOG_INJECT_L, FMT_SYSLOG_INJECT_C$/;"	e	enum:__anon74	file:
FMT_SYSLOG_INJECT_L	tests/syslog_caller.c	/^static enum { FMT_NATIVE, FMT_SYSLOG_INJECT_L, FMT_SYSLOG_INJECT_C$/;"	e	enum:__anon74	file:
FORW_TCP	tools/omfwd.c	95;"	d	file:
FORW_UDP	tools/omfwd.c	94;"	d	file:
FRAMING_UNSET	plugins/imtcp/imtcp.c	86;"	d	file:
FREE_BOTH_RET	grammar/rainerscript.c	1931;"	d	file:
FREE_TWO_STRINGS	grammar/rainerscript.c	1969;"	d	file:
FUNC_NAME	grammar/rainerscript.c	3757;"	d	file:
F_ISSET	runtime/net.h	36;"	d
F_SET	runtime/net.h	35;"	d
F_UNSET	runtime/net.h	37;"	d
FillRemHost	runtime/nsd_ptcp.c	/^FillRemHost(nsd_ptcp_t *pThis, struct sockaddr_storage *pAddr)$/;"	f	file:
FindObjInfo	runtime/obj.c	/^FindObjInfo(cstr_t *pstrOID, objInfo_t **ppInfo)$/;"	f	file:
FindParser	runtime/parser.c	/^FindParser(parser_t **ppParser, uchar *pName)$/;"	f	file:
FindParser	runtime/parser.h	/^	rsRetVal (*FindParser)(parser_t **ppThis, uchar*name);$/;"	v
FindStrgen	runtime/strgen.c	/^FindStrgen(strgen_t **ppStrgen, uchar *pName)$/;"	f	file:
FindStrgen	runtime/strgen.h	/^	rsRetVal (*FindStrgen)(strgen_t **ppThis, uchar*name);$/;"	v
FindWithCnfName	runtime/modules.c	/^FindWithCnfName(rsconf_t *cnf, uchar *name, eModType_t rqtdType)$/;"	f	file:
FindWithCnfName	runtime/modules.h	/^	modInfo_t *(*FindWithCnfName)(rsconf_t *cnf, uchar *name, eModType_t rqtdType); \/* added v3, 2011-07-19 *\/$/;"	v
Flush	runtime/stream.h	/^	rsRetVal (*Flush)(strm_t *pThis);$/;"	v
GENERATE_FUNC	grammar/rainerscript.c	3751;"	d	file:
GENERATE_FUNC_WITH_ERR_MSG	grammar/rainerscript.c	3743;"	d	file:
GENERATE_FUNC_WITH_NARG_RANGE	grammar/rainerscript.c	3735;"	d	file:
GETVAL	runtime/obj.c	534;"	d	file:
GETVAL	runtime/obj.c	563;"	d	file:
GLBL_H_INCLUDED	runtime/glbl.h	31;"	d
GSSMODE_ENC	plugins/omgssapi/omgssapi.c	/^	GSSMODE_ENC$/;"	e	enum:gss_mode_e	file:
GSSMODE_MIC	plugins/omgssapi/omgssapi.c	/^	GSSMODE_MIC,$/;"	e	enum:gss_mode_e	file:
GSS_MISC_H_INCLUDED	runtime/gss-misc.h	23;"	d
GTLS_AUTH_CERTANON	runtime/nsd_gtls.h	/^		GTLS_AUTH_CERTANON = 3$/;"	e	enum:nsd_gtls_s::__anon43
GTLS_AUTH_CERTFINGERPRINT	runtime/nsd_gtls.h	/^		GTLS_AUTH_CERTFINGERPRINT = 1,$/;"	e	enum:nsd_gtls_s::__anon43
GTLS_AUTH_CERTNAME	runtime/nsd_gtls.h	/^		GTLS_AUTH_CERTNAME = 0,$/;"	e	enum:nsd_gtls_s::__anon43
GTLS_AUTH_CERTVALID	runtime/nsd_gtls.h	/^		GTLS_AUTH_CERTVALID = 2,$/;"	e	enum:nsd_gtls_s::__anon43
GatherStats	runtime/statsobj.c	/^int GatherStats = 0;$/;"	v
GenFingerprintStr	runtime/nsd_gtls.c	/^GenFingerprintStr(uchar *pFingerprint, size_t sizeFingerprint, cstr_t **ppStr)$/;"	f	file:
GenerateLocalHostNameProperty	runtime/glbl.c	/^GenerateLocalHostNameProperty(void)$/;"	f	file:
GenerateLocalHostNameProperty	runtime/glbl.h	/^	rsRetVal (*GenerateLocalHostNameProperty)(void);$/;"	v
GetAllStatsLines	runtime/statsobj.h	/^	rsRetVal (*GetAllStatsLines)(rsRetVal(*cb)(void*, cstr_t*), void *usrptr, statsFmtType_t fmt, int8_t bResetCtr);$/;"	v
GetBytesLeftInBlock	runtime/cryprov.h	/^	rsRetVal (*GetBytesLeftInBlock)(void *pFileInstData, ssize_t *left);$/;"	v
GetBytesLeftInBlock	runtime/lmcry_gcry.c	/^GetBytesLeftInBlock(void *pF, ssize_t *left)$/;"	f	file:
GetCurrOffset	runtime/stream.h	/^	rsRetVal (*GetCurrOffset)(strm_t *pThis, int64 *pOffs);$/;"	v
GetCurrent	runtime/ruleset.c	/^GetCurrent(rsconf_t *conf)$/;"	f	file:
GetCurrent	runtime/ruleset.h	/^	ruleset_t* (*GetCurrent)(rsconf_t *conf);$/;"	v
GetDeqBatchSize	runtime/queue.c	/^GetDeqBatchSize(qqueue_t *pThis, int *pVal)$/;"	f	file:
GetDfltNetstrmDrvr	runtime/glbl.c	/^GetDfltNetstrmDrvr(void)$/;"	f	file:
GetDfltNetstrmDrvrCAF	runtime/glbl.c	/^GetDfltNetstrmDrvrCAF(void)$/;"	f	file:
GetDfltNetstrmDrvrCertFile	runtime/glbl.c	/^GetDfltNetstrmDrvrCertFile(void)$/;"	f	file:
GetDfltNetstrmDrvrKeyFile	runtime/glbl.c	/^GetDfltNetstrmDrvrKeyFile(void)$/;"	f	file:
GetDrvrAuthMode	runtime/netstrms.c	/^GetDrvrAuthMode(netstrms_t *pThis)$/;"	f	file:
GetDrvrAuthMode	runtime/netstrms.h	/^	uchar*   (*GetDrvrAuthMode)(netstrms_t *pThis);$/;"	v
GetDrvrMode	runtime/netstrms.c	/^GetDrvrMode(netstrms_t *pThis)$/;"	f	file:
GetDrvrMode	runtime/netstrms.h	/^	int      (*GetDrvrMode)(netstrms_t *pThis);$/;"	v
GetDrvrPermPeers	runtime/netstrms.c	/^GetDrvrPermPeers(netstrms_t *pThis)$/;"	f	file:
GetDrvrPermPeers	runtime/netstrms.h	/^	permittedPeers_t* (*GetDrvrPermPeers)(netstrms_t *pThis);$/;"	v
GetGlobalInputTermState	runtime/glbl.c	/^static int GetGlobalInputTermState(void)$/;"	f	file:
GetGlobalInputTermState	runtime/glbl.h	/^	int (*GetGlobalInputTermState)(void);$/;"	v
GetGnuTLSLoglevel	runtime/glbl.c	/^GetGnuTLSLoglevel(void)$/;"	f
GetIFIPAddr	runtime/net.h	/^	rsRetVal (*GetIFIPAddr)(uchar *szif, int family, uchar *pszbuf, int lenBuf);$/;"	v
GetLocalDomain	runtime/glbl.c	/^GetLocalDomain(void)$/;"	f	file:
GetLocalFQDNName	runtime/glbl.c	/^GetLocalFQDNName(void)$/;"	f	file:
GetLocalHostIP	runtime/glbl.c	/^GetLocalHostIP(void)$/;"	f	file:
GetLocalHostIP	runtime/glbl.h	/^	prop_t* (*GetLocalHostIP)(void);$/;"	v
GetLocalHostName	runtime/glbl.c	/^GetLocalHostName(void)$/;"	f	file:
GetLocalHostNameProp	runtime/glbl.c	/^GetLocalHostNameProp(void)$/;"	f	file:
GetLocalHostNameProp	runtime/glbl.h	/^	prop_t* (*GetLocalHostNameProp)(void);$/;"	v
GetMaxLine	runtime/glbl.c	/^GetMaxLine(void)$/;"	f	file:
GetMaxLine	runtime/glbl.h	/^	int (*GetMaxLine)(void);$/;"	v
GetName	runtime/modules.h	/^	uchar *(*GetName)(modInfo_t *pThis);$/;"	v
GetName	runtime/obj.c	/^GetName(obj_t *pThis)$/;"	f	file:
GetName	runtime/obj.h	/^	uchar *  (*GetName)(obj_t *pThis);$/;"	v
GetNbrActActions	runtime/conf.c	/^GetNbrActActions(rsconf_t *conf, int *piNbrActions)$/;"	f	file:
GetNbrActActions	runtime/conf.h	/^	rsRetVal (*GetNbrActActions)(rsconf_t *conf, int *);$/;"	v
GetNxt	runtime/modules.c	/^static modInfo_t *GetNxt(modInfo_t *pThis)$/;"	f	file:
GetNxt	runtime/modules.h	/^	modInfo_t *(*GetNxt)(modInfo_t *pThis);$/;"	v
GetNxtCnfType	runtime/modules.c	/^*GetNxtCnfType(rsconf_t *cnf, cfgmodules_etry_t *node, eModType_t rqtdType)$/;"	f	file:
GetNxtCnfType	runtime/modules.h	/^	cfgmodules_etry_t *(*GetNxtCnfType)(rsconf_t *cnf, cfgmodules_etry_t *pThis, eModType_t rqtdType);$/;"	v
GetParserList	runtime/ruleset.c	/^GetParserList(rsconf_t *conf, msg_t *pMsg)$/;"	f	file:
GetParserList	runtime/ruleset.h	/^	parserList_t* (*GetParserList)(rsconf_t *conf, msg_t *);$/;"	v
GetPath	plugins/imklog/bsd.c	/^static uchar *GetPath(modConfData_t *pModConf)$/;"	f	file:
GetPath	plugins/imklog/solaris.c	/^static uchar *GetPath(void)$/;"	f	file:
GetRemAddr	runtime/netstrm.c	/^GetRemAddr(netstrm_t *pThis, struct sockaddr_storage **ppAddr)$/;"	f	file:
GetRemAddr	runtime/netstrm.h	/^	rsRetVal (*GetRemAddr)(netstrm_t *pThis, struct sockaddr_storage **ppAddr);$/;"	v
GetRemAddr	runtime/nsd.h	/^	rsRetVal (*GetRemAddr)(nsd_t *pThis, struct sockaddr_storage **ppAddr);$/;"	v
GetRemAddr	runtime/nsd_gtls.c	/^GetRemAddr(nsd_t *pNsd, struct sockaddr_storage **ppAddr)$/;"	f	file:
GetRemAddr	runtime/nsd_ptcp.c	/^GetRemAddr(nsd_t *pNsd, struct sockaddr_storage **ppAddr)$/;"	f	file:
GetRemoteHName	runtime/netstrm.c	/^GetRemoteHName(netstrm_t *pThis, uchar **ppsz)$/;"	f	file:
GetRemoteHName	runtime/netstrm.h	/^	rsRetVal (*GetRemoteHName)(netstrm_t *pThis, uchar **pszName);$/;"	v
GetRemoteHName	runtime/nsd.h	/^	rsRetVal (*GetRemoteHName)(nsd_t *pThis, uchar **pszName);$/;"	v
GetRemoteHName	runtime/nsd_gtls.c	/^GetRemoteHName(nsd_t *pNsd, uchar **ppszHName)$/;"	f	file:
GetRemoteHName	runtime/nsd_ptcp.c	/^GetRemoteHName(nsd_t *pNsd, uchar **ppszHName)$/;"	f	file:
GetRemoteIP	runtime/netstrm.c	/^GetRemoteIP(netstrm_t *pThis, prop_t **ip)$/;"	f	file:
GetRemoteIP	runtime/netstrm.h	/^	rsRetVal (*GetRemoteIP)(netstrm_t *pThis, prop_t **ip);$/;"	v
GetRemoteIP	runtime/nsd.h	/^	rsRetVal (*GetRemoteIP)(nsd_t *pThis, prop_t **ip);$/;"	v
GetRemoteIP	runtime/nsd_gtls.c	/^GetRemoteIP(nsd_t *pNsd, prop_t **ip)$/;"	f	file:
GetRemoteIP	runtime/nsd_ptcp.c	/^GetRemoteIP(nsd_t *pNsd, prop_t **ip)$/;"	f	file:
GetRuleset	runtime/ruleset.h	/^	rsRetVal (*GetRuleset)(rsconf_t *conf, ruleset_t **ppThis, uchar*);$/;"	v
GetRulesetQueue	runtime/ruleset.c	/^GetRulesetQueue(ruleset_t *pThis)$/;"	f	file:
GetRulesetQueue	runtime/ruleset.h	/^	qqueue_t* (*GetRulesetQueue)(ruleset_t*);$/;"	v
GetSock	runtime/netstrm.c	/^GetSock(netstrm_t *pThis, int *pSock)$/;"	f	file:
GetSock	runtime/netstrm.h	/^	rsRetVal (*GetSock)(netstrm_t *pThis, int *pSock);$/;"	v
GetSock	runtime/nsd.h	/^	rsRetVal (*GetSock)(nsd_t *pThis, int *pSock);$/;"	v
GetSock	runtime/nsd_ptcp.c	/^GetSock(nsd_t *pNsd, int *pSock)$/;"	f	file:
GetSourceIPofLocalClient	runtime/glbl.c	/^GetSourceIPofLocalClient(void)$/;"	f	file:
GetSourceIPofLocalClient	runtime/glbl.h	/^	uchar* (*GetSourceIPofLocalClient)(void);		\/* [ar] *\/$/;"	v
GetStateName	runtime/modules.h	/^	uchar *(*GetStateName)(modInfo_t *pThis);$/;"	v
GetString	runtime/prop.c	/^rsRetVal GetString(prop_t *pThis, uchar **ppsz, int *plen)$/;"	f
GetString	runtime/prop.h	/^	rsRetVal (*GetString)(prop_t *pThis, uchar** ppsz, int *plen);$/;"	v
GetStringLen	runtime/prop.c	/^static int GetStringLen(prop_t *pThis)$/;"	f	file:
GetStringLen	runtime/prop.h	/^	int      (*GetStringLen)(prop_t *pThis);$/;"	v
GetTime	runtime/datetime.h	/^	time_t (*GetTime)(time_t *ttSeconds);$/;"	v
GetUsrP	runtime/strms_sess.c	/^GetUsrP(strms_sess_t *pThis)$/;"	f	file:
GetUsrP	runtime/strms_sess.h	/^	void*    (*GetUsrP)(strms_sess_t*);$/;"	v
GetWorkDir	runtime/glbl.c	/^GetWorkDir(void)$/;"	f	file:
GetWorkDir	runtime/glbl.h	/^	uchar* (*GetWorkDir)(void);$/;"	v
HAVE_DBI_TXSUPP	plugins/omlibdbi/omlibdbi.c	53;"	d	file:
HDFSFileExists	plugins/omhdfs/omhdfs.c	/^HDFSFileExists(hdfsFS fs, uchar *name)$/;"	f	file:
HDFSmkdir	plugins/omhdfs/omhdfs.c	/^HDFSmkdir(hdfsFS fs, uchar *name)$/;"	f	file:
HEADER	plugins/omelasticsearch/omelasticsearch.c	/^typedef struct curl_slist HEADER;$/;"	t	typeref:struct:curl_slist	file:
HN_COMP_MATCH	runtime/syslogd-types.h	/^	HN_COMP_MATCH = 1, \/* hostname must match *\/$/;"	e	enum:_EHostnameCmpMode
HN_COMP_NOMATCH	runtime/syslogd-types.h	/^	HN_COMP_NOMATCH = 2 \/* hostname must NOT match *\/$/;"	e	enum:_EHostnameCmpMode
HN_NO_COMP	runtime/syslogd-types.h	/^	HN_NO_COMP = 0, \/* do not compare hostname *\/$/;"	e	enum:_EHostnameCmpMode
HTTPFS_CONTENT_TYPE	contrib/omhttpfs/omhttpfs.c	68;"	d	file:
HTTPFS_CONTENT_TYPE_JSON	contrib/omhttpfs/omhttpfs.c	71;"	d	file:
HTTPFS_CURL_EXEC	contrib/omhttpfs/omhttpfs.c	398;"	d	file:
HTTPFS_CURL_VARS_INIT	contrib/omhttpfs/omhttpfs.c	381;"	d	file:
HTTPFS_CURL_VARS_RELEASE	contrib/omhttpfs/omhttpfs.c	391;"	d	file:
HTTPFS_FILEALREADYEXISTSEXCEPTION	contrib/omhttpfs/omhttpfs.c	74;"	d	file:
HTTPFS_JSON_BOOLEAN_TRUE	contrib/omhttpfs/omhttpfs.c	72;"	d	file:
HTTPFS_URL_BUFFER_LENGTH	contrib/omhttpfs/omhttpfs.c	76;"	d	file:
HTTPFS_URL_PREFIX_V1	contrib/omhttpfs/omhttpfs.c	66;"	d	file:
HTTPFS_URL_PREFIX_V1_SSL	contrib/omhttpfs/omhttpfs.c	67;"	d	file:
HTTPFS_USER_AGENT	contrib/omhttpfs/omhttpfs.c	69;"	d	file:
HasRestrictions	runtime/net.c	/^HasRestrictions(uchar *pszType, int *bHasRestrictions) {$/;"	f	file:
HasRestrictions	runtime/net.h	/^	rsRetVal (*HasRestrictions)(uchar *, int *bHasRestrictions);$/;"	v
HostWildcard	runtime/net.h	/^    char *HostWildcard;$/;"	m	union:NetAddr::__anon39
IGNDATE	runtime/msg.h	142;"	d
IMINTERNAL_H_INCLUDED	tools/iminternal.h	27;"	d
IMKLOG_H_INCLUDED	contrib/imkmsg/imkmsg.h	23;"	d
IMKLOG_H_INCLUDED	plugins/imklog/imklog.h	27;"	d
IMMARK_H_INCLUDED	plugins/immark/immark.h	26;"	d
IM_HELPER_H_INCLUDED	runtime/im-helper.h	29;"	d
INCLUDED_ATOMIC_H	runtime/atomic.h	33;"	d
INCLUDED_CONF_H	runtime/conf.h	22;"	d
INCLUDED_CRYPROV_H	runtime/cryprov.h	25;"	d
INCLUDED_DATETIME_H	runtime/datetime.h	22;"	d
INCLUDED_DNSCACHE_H	runtime/dnscache.h	23;"	d
INCLUDED_ERRMSG_H	runtime/errmsg.h	22;"	d
INCLUDED_JANITOR_H	runtime/janitor.h	22;"	d
INCLUDED_LIBGCRY_H	runtime/libgcry.h	22;"	d
INCLUDED_LIBRSGTCM_H	runtime/librsgt_common.h	22;"	d
INCLUDED_LIBRSGT_H	runtime/librsgt.h	22;"	d
INCLUDED_LIBRSKSI_H	runtime/librsksi.h	22;"	d
INCLUDED_LMCRY_GCRY_H	runtime/lmcry_gcry.h	22;"	d
INCLUDED_LMSIG_GT_H	runtime/lmsig_gt.h	22;"	d
INCLUDED_LMSIG_KSI_H	runtime/lmsig_ksi.h	22;"	d
INCLUDED_LOOKUP_H	runtime/lookup.h	22;"	d
INCLUDED_NETSTRMS_H	runtime/netstrms.h	25;"	d
INCLUDED_NETSTRM_H	runtime/netstrm.h	25;"	d
INCLUDED_NET_H	runtime/net.h	25;"	d
INCLUDED_NSDPOLL_PTCP_H	runtime/nsdpoll_ptcp.h	25;"	d
INCLUDED_NSDSEL_GTLS_H	runtime/nsdsel_gtls.h	23;"	d
INCLUDED_NSDSEL_PTCP_H	runtime/nsdsel_ptcp.h	25;"	d
INCLUDED_NSD_GTLS_H	runtime/nsd_gtls.h	23;"	d
INCLUDED_NSD_H	runtime/nsd.h	26;"	d
INCLUDED_NSD_PTCP_H	runtime/nsd_ptcp.h	23;"	d
INCLUDED_NSPOLL_H	runtime/nspoll.h	23;"	d
INCLUDED_NSSEL_H	runtime/nssel.h	23;"	d
INCLUDED_PARSER_H	runtime/parser.h	22;"	d
INCLUDED_PROP_H	runtime/prop.h	24;"	d
INCLUDED_RATELIMIT_H	runtime/ratelimit.h	22;"	d
INCLUDED_REGEXP_H	runtime/regexp.h	24;"	d
INCLUDED_RSCONF_H	runtime/rsconf.h	24;"	d
INCLUDED_RSYSLOG_H	runtime/rsyslog.h	27;"	d
INCLUDED_RULESET_H	runtime/ruleset.h	24;"	d
INCLUDED_SIGPROV_H	runtime/sigprov.h	25;"	d
INCLUDED_STATSOBJ_H	runtime/statsobj.h	22;"	d
INCLUDED_STRGEN_H	runtime/strgen.h	23;"	d
INCLUDED_STRMSRV_H	runtime/strmsrv.h	22;"	d
INCLUDED_STRMS_SESS_H	runtime/strms_sess.h	23;"	d
INCLUDED_TCPSRV_H	runtime/tcpsrv.h	22;"	d
INCLUDED_TCPS_SESS_H	runtime/tcps_sess.h	23;"	d
INCLUDED_TYPEDEFS_H	runtime/typedefs.h	27;"	d
INCLUDED_UNICODE_HELPER_H	runtime/unicode-helper.h	31;"	d
INCLUDED_VAR_H	runtime/var.h	22;"	d
INCLUDED_ZLIBW_H	runtime/zlibw.h	24;"	d
INC_UTILS_H	grammar/rainerscript.h	20;"	d
INITChkCoreFeature	runtime/module-template.h	797;"	d
INITLegCnfVars	runtime/module-template.h	780;"	d
INIT_ATOMIC_HELPER_MUT	runtime/atomic.h	185;"	d
INIT_ATOMIC_HELPER_MUT	runtime/atomic.h	60;"	d
INIT_ATOMIC_HELPER_MUT64	runtime/atomic.h	201;"	d
INIT_ATOMIC_HELPER_MUT64	runtime/atomic.h	225;"	d
INIT_FILE_IN_DIR_TAB_SIZE	plugins/imfile/imfile.c	83;"	d	file:
INIT_FILE_TAB_SIZE	plugins/imfile/imfile.c	82;"	d	file:
INIT_WDMAP_TAB_SIZE	plugins/imfile/imfile.c	84;"	d	file:
INPUT_JSON	plugins/mmexternal/mmexternal.c	65;"	d	file:
INPUT_MSG	plugins/mmexternal/mmexternal.c	63;"	d	file:
INPUT_RAWMSG	plugins/mmexternal/mmexternal.c	64;"	d	file:
INTERFACEObjDebugPrint	runtime/obj-types.h	320;"	d
INTERFACEpropSetMeth	runtime/obj-types.h	164;"	d
INTERNAL_MSG	runtime/msg.h	140;"	d
INTERNAL_NOPRI	runtime/srUtils.h	35;"	d
INVALID_SOCKET	tests/nettester.c	55;"	d	file:
INVALID_SOCKET	tests/tcpflood.c	108;"	d	file:
INVLD_SOCK	plugins/omuxsock/omuxsock.c	57;"	d	file:
IOBUF_DFLT_SIZE	tools/omfile.c	129;"	d	file:
IPv4Only	tests/nettester.c	/^static int IPv4Only = 0;	\/* use only IPv4 in rsyslogd call? *\/$/;"	v	file:
ISOBJ_TYPE_assert	runtime/obj-types.h	103;"	d
ISOBJ_TYPE_assert	runtime/obj-types.h	116;"	d
ISOBJ_assert	runtime/obj-types.h	117;"	d
ISOBJ_assert	runtime/obj-types.h	98;"	d
IS_FLUSH	tools/omfwd.c	75;"	d	file:
ITEM_COUNT	runtime/hashtable/tester.c	/^static const int ITEM_COUNT = 4000;$/;"	v	file:
IV	runtime/librsgt.h	/^	uint8_t *IV; \/* initial value for blinding masks *\/$/;"	m	struct:gtfile_s
IV	runtime/librsksi.h	/^	uint8_t *IV; \/* initial value for blinding masks *\/$/;"	m	struct:ksifile_s
InfoConstruct	runtime/obj.c	/^InfoConstruct(objInfo_t **ppThis, uchar *pszID, int iObjVers,$/;"	f	file:
InfoConstruct	runtime/obj.h	/^	rsRetVal (*InfoConstruct)(objInfo_t **ppThis, uchar *pszID, int iObjVers,$/;"	v
InfoDestruct	runtime/obj.c	/^InfoDestruct(objInfo_t **ppThis)$/;"	f	file:
InfoSetMethod	runtime/obj.c	/^InfoSetMethod(objInfo_t *pThis, objMethod_t objMethod, rsRetVal (*pHandler)(void*))$/;"	f	file:
InfoSetMethod	runtime/obj.h	/^	rsRetVal (*InfoSetMethod)(objInfo_t *pThis, objMethod_t objMethod, rsRetVal (*pHandler)(void*));$/;"	v
InitDA	runtime/queue.c	/^InitDA(qqueue_t *pThis, int bLockMutex)$/;"	f	file:
InitParserList	runtime/parser.c	/^InitParserList(parserList_t **pListRoot)$/;"	f	file:
InitParserList	runtime/parser.h	/^	rsRetVal (*InitParserList)(parserList_t **pListRoot);$/;"	v
InitStrgenList	runtime/strgen.c	/^InitStrgenList(strgenList_t **pListRoot)$/;"	f	file:
InitStrgenList	runtime/strgen.h	/^	rsRetVal (*InitStrgenList)(strgenList_t **pListRoot);$/;"	v
IsEPollSupported	runtime/nspoll.h	/^	rsRetVal (*IsEPollSupported)(void); \/* static method *\/$/;"	v
IsReady	runtime/nsd.h	/^	rsRetVal (*IsReady)(nsdsel_t *pNsdsel, nsd_t *pNsd, nsdsel_waitOp_t waitOp, int *pbIsReady);$/;"	v
IsReady	runtime/nsdsel_gtls.c	/^IsReady(nsdsel_t *pNsdsel, nsd_t *pNsd, nsdsel_waitOp_t waitOp, int *pbIsReady)$/;"	f	file:
IsReady	runtime/nsdsel_ptcp.c	/^IsReady(nsdsel_t *pNsdsel, nsd_t *pNsd, nsdsel_waitOp_t waitOp, int *pbIsReady)$/;"	f	file:
IsReady	runtime/nssel.c	/^IsReady(nssel_t *pThis, netstrm_t *pStrm, nsdsel_waitOp_t waitOp, int *pbIsReady, int __attribute__((unused)) *piNumReady)$/;"	f	file:
IsReady	runtime/nssel.h	/^	rsRetVal (*IsReady)(nssel_t *pThis, netstrm_t *pStrm, nsdsel_waitOp_t waitOp, int *pbIsReady, int *piNumReady);$/;"	v
IterateAllActions	runtime/ruleset.h	/^	\/*TODO:REMOVE*\/rsRetVal (*IterateAllActions)(rsconf_t *conf, rsRetVal (*pFunc)(void*, void*), void* pParam);$/;"	v
JSON_COUNT_NAME	contrib/mmcount/mmcount.c	43;"	d	file:
JSON_ESCAPE	template.h	52;"	d
JSON_VAR_NAME	contrib/mmsequence/mmsequence.c	48;"	d	file:
KSI_HashAlgorithm	runtime/librsksi.h	/^typedef enum KSI_HashAlgorithm_en KSI_HashAlgorithm;$/;"	t	typeref:enum:KSI_HashAlgorithm_en
LIFC_ENABLED	compat/getifaddrs.c	42;"	d	file:
LINKEDLIST_H_INCLUDED	runtime/linkedlist.h	23;"	d
LIST_DELIMITER	tools/syslogd.c	126;"	d	file:
LM_GSSUTIL_FILENAME	runtime/gss-misc.h	42;"	d
LM_NETSTRMS_FILENAME	runtime/netstrms.h	62;"	d
LM_NETSTRM_FILENAME	runtime/netstrm.h	91;"	d
LM_NET_FILENAME	runtime/net.h	167;"	d
LM_NSD_GTLS_FILENAME	runtime/nsd_gtls.h	88;"	d
LM_NSD_PTCP_FILENAME	runtime/nsd_ptcp.h	49;"	d
LM_NSPOLL_FILENAME	runtime/nspoll.h	64;"	d
LM_NSSEL_FILENAME	runtime/nssel.h	54;"	d
LM_REGEXP_FILENAME	runtime/regexp.h	42;"	d
LM_STRMSRV_FILENAME	runtime/strmsrv.h	115;"	d
LM_TCPCLT_FILENAME	runtime/tcpclt.h	69;"	d
LM_TCPSRV_FILENAME	runtime/tcpsrv.h	185;"	d
LM_ZLIBW_FILENAME	runtime/zlibw.h	42;"	d
LN_DATA	plugins/impstats/statslog-analyzer.py	/^LN_DATA = 3$/;"	v
LN_DATE	plugins/impstats/statslog-analyzer.py	/^LN_DATE = 0 $/;"	v
LN_HOST	plugins/impstats/statslog-analyzer.py	/^LN_HOST = 1$/;"	v
LN_LINENUM	plugins/impstats/statslog-analyzer.py	/^LN_LINENUM = 2$/;"	v
LOCK_MUTEX	runtime/rsyslog.h	580;"	d
LOGSIGHDR	runtime/librsgt_common.h	30;"	d
LOG_ALERT	runtime/rsyslog.h	89;"	d
LOG_AUTH	runtime/rsyslog.h	101;"	d
LOG_AUTHPRIV	runtime/rsyslog.h	107;"	d
LOG_AUTHPRIV	runtime/srutils.c	76;"	d	file:
LOG_CRIT	runtime/rsyslog.h	90;"	d
LOG_CRON	runtime/rsyslog.h	106;"	d
LOG_DAEMON	runtime/rsyslog.h	100;"	d
LOG_DEBUG	runtime/rsyslog.h	95;"	d
LOG_EMERG	runtime/rsyslog.h	88;"	d
LOG_ERR	runtime/rsyslog.h	91;"	d
LOG_FAC_INVLD	runtime/rsyslog.h	117;"	d
LOG_FTP	runtime/rsyslog.h	108;"	d
LOG_INFO	runtime/rsyslog.h	94;"	d
LOG_INVLD	runtime/rsyslog.h	118;"	d
LOG_KERN	runtime/rsyslog.h	97;"	d
LOG_LOCAL0	runtime/rsyslog.h	109;"	d
LOG_LOCAL1	runtime/rsyslog.h	110;"	d
LOG_LOCAL2	runtime/rsyslog.h	111;"	d
LOG_LOCAL3	runtime/rsyslog.h	112;"	d
LOG_LOCAL4	runtime/rsyslog.h	113;"	d
LOG_LOCAL5	runtime/rsyslog.h	114;"	d
LOG_LOCAL6	runtime/rsyslog.h	115;"	d
LOG_LOCAL7	runtime/rsyslog.h	116;"	d
LOG_LPR	runtime/rsyslog.h	103;"	d
LOG_MAIL	runtime/rsyslog.h	99;"	d
LOG_MAKEPRI	runtime/rsyslog.h	85;"	d
LOG_MAKEPRI	runtime/srUtils.h	33;"	d
LOG_MARK	runtime/srUtils.h	38;"	d
LOG_MAXPRI	runtime/rsyslog.h	84;"	d
LOG_NEWS	runtime/rsyslog.h	104;"	d
LOG_NFACILITIES	grammar/rainerscript.h	28;"	d
LOG_NFACILITIES	runtime/rsyslog.h	83;"	d
LOG_NOTICE	runtime/rsyslog.h	93;"	d
LOG_PRI_INVLD	runtime/rsyslog.h	86;"	d
LOG_SYSLOG	runtime/rsyslog.h	102;"	d
LOG_USER	runtime/rsyslog.h	98;"	d
LOG_UUCP	runtime/rsyslog.h	105;"	d
LOG_WARNING	runtime/rsyslog.h	92;"	d
Load	runtime/modules.c	/^Load(uchar *pModName, sbool bConfLoad, struct nvlst *lst)$/;"	f	file:
Load	runtime/modules.h	/^	rsRetVal (*Load)(uchar *name, sbool bConfLoad, struct nvlst *lst);$/;"	v
Load	runtime/rsconf.h	/^	rsRetVal (*Load)(rsconf_t **ppThis, uchar *confFile);$/;"	v
LocalDomain	runtime/glbl.c	/^	free(LocalDomain);$/;"	v
LocalDomain	runtime/glbl.c	/^static uchar *LocalDomain = NULL;\/* our local domain name  - read-only after startup, except HUP *\/$/;"	v	file:
LocalFQDNName	runtime/glbl.c	/^	free(LocalFQDNName);$/;"	v
LocalFQDNName	runtime/glbl.c	/^static uchar *LocalFQDNName = NULL;\/* our hostname as FQDN - read-only after startup, except HUP *\/$/;"	v	file:
LocalHostName	runtime/glbl.c	/^	free(LocalHostName);$/;"	v
LocalHostName	runtime/glbl.c	/^static uchar *LocalHostName = NULL;\/* our hostname  - read-only after startup, except HUP *\/$/;"	v	file:
LocalHostNameOverride	runtime/glbl.c	/^	free(LocalHostNameOverride);$/;"	v
LocalHostNameOverride	runtime/glbl.c	/^static uchar *LocalHostNameOverride = NULL;\/* user-overridden hostname - read-only after startup *\/$/;"	v	file:
LocalHosts	runtime/glbl.c	/^static char **LocalHosts = NULL;\/* these hosts are logged with their hostname  - read-only after startup, never touched by init *\/$/;"	v	file:
LogError	runtime/errmsg.c	/^LogError(const int iErrno, const int iErrCode, const char *fmt, ... )$/;"	f	file:
LogError	runtime/errmsg.h	/^	void  __attribute__((format(printf, 3, 4))) (*LogError)(const int iErrno, const int iErrCode, const char *pszErrFmt, ... );$/;"	v
LogMsg	runtime/errmsg.c	/^LogMsg(const int iErrno, const int iErrCode, const int severity, const char *fmt, ... )$/;"	f	file:
LogMsg	runtime/errmsg.h	/^	void  __attribute__((format(printf, 4, 5))) (*LogMsg)(const int iErrno, const int iErrCode, const int severity, const char *pszErrFmt, ... );$/;"	v
LogName	plugins/imsolaris/imsolaris.c	/^	free(LogName);	$/;"	v
LogName	plugins/imsolaris/imsolaris.c	/^static char *LogName = NULL;	\/* the log socket name TODO: make configurable! *\/$/;"	v	file:
LstnInit	runtime/netstrm.c	/^LstnInit(netstrms_t *pNS, void *pUsr, rsRetVal(*fAddLstn)(void*,netstrm_t*),$/;"	f	file:
LstnInit	runtime/netstrm.h	/^	rsRetVal (*LstnInit)(netstrms_t *pNS, void *pUsr, rsRetVal(*)(void*,netstrm_t*),$/;"	v
LstnInit	runtime/nsd.h	/^	rsRetVal (*LstnInit)(netstrms_t *pNS, void *pUsr, rsRetVal(*fAddLstn)(void*,netstrm_t*),$/;"	v
LstnInit	runtime/nsd_gtls.c	/^LstnInit(netstrms_t *pNS, void *pUsr, rsRetVal(*fAddLstn)(void*,netstrm_t*),$/;"	f	file:
LstnInit	runtime/nsd_ptcp.c	/^LstnInit(netstrms_t *pNS, void *pUsr, rsRetVal(*fAddLstn)(void*,netstrm_t*),$/;"	f	file:
MALLOC	runtime/debug.h	148;"	d
MALLOC	runtime/debug.h	150;"	d
MARK	runtime/msg.h	143;"	d
MAXFNAME	runtime/librsgt.c	51;"	d	file:
MAXFNAME	runtime/librsgt_read.c	51;"	d	file:
MAXFNAME	runtime/librsksi.c	51;"	d	file:
MAXFNAME	runtime/librsksi_read.c	51;"	d	file:
MAXFNAME	runtime/syslogd-types.h	41;"	d
MAXLINE	plugins/imklog/solaris_cddl.c	63;"	d	file:
MAXUNAMES	runtime/syslogd-types.h	40;"	d
MAX_DOOR_SERVER_THR	plugins/imsolaris/sun_cddl.c	79;"	d	file:
MAX_ERRMSG	plugins/omkafka/omkafka.c	62;"	d	file:
MAX_EXTRADATA_LEN	tests/tcpflood.c	112;"	d	file:
MAX_LOAD_FACTOR	runtime/hashtable.c	27;"	d	file:
MAX_RANDOM_NUMBER	runtime/srUtils.h	97;"	d
MAX_ROOTS	runtime/librsgt_common.h	29;"	d
MAX_SENDBUF	tests/tcpflood.c	113;"	d	file:
MAX_VARIABLE_NAME_LEN	runtime/msg.h	154;"	d
MAX_WRKR_THREADS	plugins/imudp/imudp.c	65;"	d	file:
MD_ALWAYS_SUSPEND	plugins/omtesting/omtesting.c	/^	enum { MD_SLEEP, MD_FAIL, MD_RANDFAIL, MD_ALWAYS_SUSPEND }$/;"	e	enum:_instanceData::__anon25	file:
MD_CONVERT	tools/rsgtutil.c	/^              MD_VERIFY, MD_EXTEND, MD_CONVERT$/;"	e	enum:__anon77	file:
MD_DECRYPT	tools/rscryutil.c	/^static enum { MD_DECRYPT, MD_WRITE_KEYFILE$/;"	e	enum:__anon76	file:
MD_DETECT_FILE_TYPE	tools/rsgtutil.c	/^static enum { MD_DUMP, MD_DETECT_FILE_TYPE, MD_SHOW_SIGBLK_PARAMS,$/;"	e	enum:__anon77	file:
MD_DUMP	tools/rsgtutil.c	/^static enum { MD_DUMP, MD_DETECT_FILE_TYPE, MD_SHOW_SIGBLK_PARAMS,$/;"	e	enum:__anon77	file:
MD_EXTEND	tools/rsgtutil.c	/^              MD_VERIFY, MD_EXTEND, MD_CONVERT$/;"	e	enum:__anon77	file:
MD_FAIL	plugins/omtesting/omtesting.c	/^	enum { MD_SLEEP, MD_FAIL, MD_RANDFAIL, MD_ALWAYS_SUSPEND }$/;"	e	enum:_instanceData::__anon25	file:
MD_RANDFAIL	plugins/omtesting/omtesting.c	/^	enum { MD_SLEEP, MD_FAIL, MD_RANDFAIL, MD_ALWAYS_SUSPEND }$/;"	e	enum:_instanceData::__anon25	file:
MD_SHOW_SIGBLK_PARAMS	tools/rsgtutil.c	/^static enum { MD_DUMP, MD_DETECT_FILE_TYPE, MD_SHOW_SIGBLK_PARAMS,$/;"	e	enum:__anon77	file:
MD_SLEEP	plugins/omtesting/omtesting.c	/^	enum { MD_SLEEP, MD_FAIL, MD_RANDFAIL, MD_ALWAYS_SUSPEND }$/;"	e	enum:_instanceData::__anon25	file:
MD_VERIFY	tools/rsgtutil.c	/^              MD_VERIFY, MD_EXTEND, MD_CONVERT$/;"	e	enum:__anon77	file:
MD_WRITE_KEYFILE	tools/rscryutil.c	/^static enum { MD_DECRYPT, MD_WRITE_KEYFILE$/;"	e	enum:__anon76	file:
META_END	plugins/omelasticsearch/omelasticsearch.c	466;"	d	file:
META_ID	plugins/omelasticsearch/omelasticsearch.c	465;"	d	file:
META_PARENT	plugins/omelasticsearch/omelasticsearch.c	464;"	d	file:
META_STRT	plugins/omelasticsearch/omelasticsearch.c	462;"	d	file:
META_TYPE	plugins/omelasticsearch/omelasticsearch.c	463;"	d	file:
MODE_CC	plugins/mmutf8fix/mmutf8fix.c	54;"	d	file:
MODE_UTF8	plugins/mmutf8fix/mmutf8fix.c	55;"	d	file:
MODULES_H_INCLUDED	runtime/modules.h	36;"	d
MODULE_CNFNAME	runtime/module-template.h	113;"	d
MODULE_KEEP_TYPE	runtime/module-template.h	80;"	d
MODULE_TEMPLATE_H_INCLUDED	runtime/module-template.h	26;"	d
MODULE_TYPE	runtime/module-template.h	63;"	d
MODULE_TYPE_INPUT	runtime/module-template.h	70;"	d
MODULE_TYPE_KEEP	runtime/module-template.h	87;"	d
MODULE_TYPE_LIB	runtime/module-template.h	74;"	d
MODULE_TYPE_NOKEEP	runtime/module-template.h	86;"	d
MODULE_TYPE_OUTPUT	runtime/module-template.h	71;"	d
MODULE_TYPE_PARSER	runtime/module-template.h	72;"	d
MODULE_TYPE_STRGEN	runtime/module-template.h	73;"	d
MODULE_TYPE_TESTBENCH	tests/testbench.h	27;"	d
MSG1	tools/rsyslogd.c	1462;"	d	file:
MSG1	tools/rsyslogd.c	1483;"	d	file:
MSG2	tools/rsyslogd.c	1463;"	d	file:
MSG2	tools/rsyslogd.c	1484;"	d	file:
MSG_H_INCLUDED	runtime/msg.h	29;"	d
MSG_LEGACY_PROTOCOL	runtime/msg.h	151;"	d
MSG_RFC5424_PROTOCOL	runtime/msg.h	152;"	d
MUTEX_ALREADY_LOCKED	runtime/rsyslog.h	579;"	d
MUTOP_LOCK	runtime/debug.h	155;"	d
MUTOP_LOCKWAIT	runtime/debug.h	154;"	d
MUTOP_TRYLOCK	runtime/debug.h	157;"	d
MUTOP_UNLOCK	runtime/debug.h	156;"	d
MainMsgQueType	runtime/rsconf.h	/^	queueType_t MainMsgQueType;	\/* type of the main message queue above *\/$/;"	m	struct:queuecnf_s
MarkInterval	plugins/immark/immark.c	/^	MarkInterval = pModConf->iMarkMessagePeriod;$/;"	v
MarkInterval	tests/runtime-dummy.c	/^int MarkInterval = 30;$/;"	v
MarkInterval	tools/rsyslogd.c	/^int MarkInterval = 20 * 60;	\/* interval between marks in seconds - read-only after startup *\/$/;"	v
MaskCmp	runtime/net.c	/^MaskCmp(struct NetAddr *pAllow, uint8_t bits, struct sockaddr *pFrom, const char *pszFromHost, int bChkDNS)$/;"	f	file:
MaskIP4	runtime/net.c	/^static inline void MaskIP4 (struct in_addr  *addr, uint8_t bits) {$/;"	f	file:
MaskIP6	runtime/net.c	/^static inline void MaskIP6 (struct in6_addr *addr, uint8_t bits) {$/;"	f	file:
MotifyLine	contrib/mmgrok/mmgrok.c	/^MotifyLine(char *line,grok_t *grok,instanceData *pData)$/;"	f	file:
MotifyMessage	contrib/mmgrok/mmgrok.c	/^MotifyMessage(instanceData *pData)$/;"	f	file:
MsgAddRef	runtime/msg.c	/^msg_t *MsgAddRef(msg_t * const pM)$/;"	f
MsgAddToStructuredData	runtime/msg.c	/^MsgAddToStructuredData(msg_t * const pMsg, uchar *toadd, rs_size_t len)$/;"	f
MsgDeserialize	runtime/msg.c	/^MsgDeserialize(msg_t * const pMsg, strm_t *pStrm)$/;"	f
MsgGetProp	runtime/msg.c	/^uchar *MsgGetProp(msg_t *__restrict__ const pMsg, struct templateEntry *__restrict__ const pTpe,$/;"	f
MsgGetRuleset	runtime/msg.h	/^MsgGetRuleset(msg_t *pMsg)$/;"	f
MsgGetSeverity	runtime/msg.c	/^MsgGetSeverity(msg_t * const pMsg, int *piSeverity)$/;"	f
MsgGetStructuredData	runtime/msg.c	/^MsgGetStructuredData(msg_t * const pM, uchar **pBuf, rs_size_t *len)$/;"	f
MsgHasStructuredData	runtime/msg.h	/^MsgHasStructuredData(msg_t *pM)$/;"	f
MsgLock	runtime/msg.c	/^MsgLock(msg_t *pThis)$/;"	f	file:
MsgOut	plugins/external/skeletons/java/SimplePlugin.java	/^	public static void MsgOut (String msg, BufferedWriter writerMsg)  throws IOException {$/;"	m	class:SimplePlugin
MsgReplaceMSG	runtime/msg.c	/^rsRetVal MsgReplaceMSG(msg_t *pThis, const uchar* pszMSG, int lenMSG)$/;"	f
MsgSerialize	runtime/msg.c	/^static rsRetVal MsgSerialize(msg_t *pThis, strm_t *pStrm)$/;"	f	file:
MsgSetAPPNAME	runtime/msg.c	/^rsRetVal MsgSetAPPNAME(msg_t *__restrict__ const pMsg, const char* pszAPPNAME)$/;"	f
MsgSetAfterPRIOffs	runtime/msg.c	/^MsgSetAfterPRIOffs(msg_t * const pMsg, short offs)$/;"	f
MsgSetDfltTZ	runtime/msg.c	/^void MsgSetDfltTZ(msg_t *pThis, char *tz)$/;"	f
MsgSetFlowControlType	runtime/msg.c	/^MsgSetFlowControlType(msg_t * const pMsg, flowControl_t eFlowCtl)$/;"	f
MsgSetHOSTNAME	runtime/msg.c	/^void MsgSetHOSTNAME(msg_t *pThis, const uchar* pszHOSTNAME, const int lenHOSTNAME)$/;"	f
MsgSetInputName	runtime/msg.c	/^void MsgSetInputName(msg_t *pThis, prop_t *inputName)$/;"	f
MsgSetMSGID	runtime/msg.c	/^rsRetVal MsgSetMSGID(msg_t * const pMsg, const char* pszMSGID)$/;"	f
MsgSetMSGoffs	runtime/msg.c	/^void MsgSetMSGoffs(msg_t * const pMsg, short offs)$/;"	f
MsgSetPROCID	runtime/msg.c	/^rsRetVal MsgSetPROCID(msg_t *__restrict__ const pMsg, const char* pszPROCID)$/;"	f
MsgSetParseSuccess	runtime/msg.c	/^void MsgSetParseSuccess(msg_t * const pMsg, int bSuccess)$/;"	f
MsgSetPropsViaJSON	runtime/msg.c	/^MsgSetPropsViaJSON(msg_t *__restrict__ const pMsg, const uchar *__restrict__ const jsonstr)$/;"	f
MsgSetRawMsg	runtime/msg.c	/^void MsgSetRawMsg(msg_t *pThis, const char* pszRawMsg, size_t lenMsg)$/;"	f
MsgSetRawMsgSize	runtime/msg.h	/^MsgSetRawMsgSize(msg_t *pMsg, size_t newLen)$/;"	f
MsgSetRawMsgWOSize	runtime/msg.c	/^void MsgSetRawMsgWOSize(msg_t * const pMsg, char* pszRawMsg)$/;"	f
MsgSetRcvFrom	runtime/msg.c	/^void MsgSetRcvFrom(msg_t *pThis, prop_t *new)$/;"	f
MsgSetRcvFromIP	runtime/msg.c	/^rsRetVal MsgSetRcvFromIP(msg_t *pThis, prop_t *new)$/;"	f
MsgSetRcvFromIPStr	runtime/msg.c	/^rsRetVal MsgSetRcvFromIPStr(msg_t *const pThis, const uchar *psz, const int len, prop_t **ppProp)$/;"	f
MsgSetRcvFromIPWithoutAddRef	runtime/msg.c	/^MsgSetRcvFromIPWithoutAddRef(msg_t *pThis, prop_t *new)$/;"	f	file:
MsgSetRcvFromStr	runtime/msg.c	/^void MsgSetRcvFromStr(msg_t * const pThis, const uchar *psz, const int len, prop_t **ppProp)$/;"	f
MsgSetRcvFromWithoutAddRef	runtime/msg.c	/^void MsgSetRcvFromWithoutAddRef(msg_t *pThis, prop_t *new)$/;"	f
MsgSetRuleset	runtime/msg.c	/^void MsgSetRuleset(msg_t * const pMsg, ruleset_t *pRuleset)$/;"	f
MsgSetRulesetByName	runtime/msg.c	/^MsgSetRulesetByName(msg_t * const pMsg, cstr_t *rulesetName)$/;"	f	file:
MsgSetStructuredData	runtime/msg.c	/^rsRetVal MsgSetStructuredData(msg_t * const pMsg, const char* pszStrucData)$/;"	f
MsgSetTAG	runtime/msg.c	/^void MsgSetTAG(msg_t *__restrict__ const pMsg, const uchar* pszBuf, const size_t lenBuf)$/;"	f
MsgToSend	tests/tcpflood.c	/^static char *MsgToSend = NULL; \/* if non-null, this is the actual message to send *\/$/;"	v	file:
MsgUnlock	runtime/msg.c	/^MsgUnlock(msg_t *pThis)$/;"	f	file:
MultiEnq	runtime/queue.h	/^	rsRetVal (*MultiEnq)(qqueue_t *pThis, multi_submit_t *pMultiSub);$/;"	m	struct:queue_s
N	tools/logctl.c	53;"	d	file:
NAME_MAX	runtime/conf.c	70;"	d	file:
NEEDS_ACLCHK_U	runtime/msg.h	147;"	d
NEEDS_DNSRESOL	runtime/msg.h	146;"	d
NEEDS_PARSING	runtime/msg.h	144;"	d
NETTEST_INPUT_CONF_FILE	tests/nettester.c	57;"	d	file:
NETTEST_INPUT_CONF_FILE	tests/tcpflood.c	110;"	d	file:
NEXTC	runtime/librsgt_read.c	61;"	d	file:
NEXTC	runtime/librsksi_read.c	61;"	d	file:
NEXTC	runtime/obj.c	1070;"	d	file:
NEXTC	runtime/obj.c	426;"	d	file:
NOFLAG	runtime/msg.h	139;"	d
NOW_DAY	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	e	enum:ENOWType	file:
NOW_HHOUR	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	e	enum:ENOWType	file:
NOW_HOUR	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	e	enum:ENOWType	file:
NOW_MINUTE	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	e	enum:ENOWType	file:
NOW_MONTH	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	e	enum:ENOWType	file:
NOW_NOW	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	e	enum:ENOWType	file:
NOW_QHOUR	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	e	enum:ENOWType	file:
NOW_YEAR	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	e	enum:ENOWType	file:
NO_ERRCODE	runtime/datetime.h	25;"	d
NO_ERRCODE	runtime/errmsg.h	26;"	d
NO_ESCAPE	template.h	49;"	d
NO_FIXED_PARTITION	plugins/omkafka/omkafka.c	64;"	d	file:
NO_FLUSH	tools/omfwd.c	76;"	d	file:
NO_HUP_FORWARD	plugins/omprog/omprog.c	62;"	d	file:
NO_MODIFY	plugins/imdiag/imdiag.c	155;"	d	file:
NO_PARSE3164_TZSTRING	runtime/datetime.h	66;"	d
NO_PERMIT_YEAR_AFTER_TIME	runtime/datetime.h	69;"	d
NO_PRI_IN_RAW	runtime/msg.h	148;"	d
NO_TIME_PROVIDED	action.c	114;"	d	file:
NSDPOLL_ADD	runtime/nspoll.h	28;"	d
NSDPOLL_DEL	runtime/nspoll.h	29;"	d
NSDPOLL_IN	runtime/nspoll.h	32;"	d
NSDPOLL_OUT	runtime/nspoll.h	33;"	d
NSDSEL_RD	runtime/nsd.h	/^	NSDSEL_RD = 1,$/;"	e	enum:nsdsel_waitOp_e
NSDSEL_RDWR	runtime/nsd.h	/^	NSDSEL_RDWR = 3$/;"	e	enum:nsdsel_waitOp_e
NSDSEL_WR	runtime/nsd.h	/^	NSDSEL_WR = 2,$/;"	e	enum:nsdsel_waitOp_e
NSD_GTLS_MAX_RCVBUF	runtime/nsd_gtls.h	27;"	d
NUM_EPOLL_EVENTS	plugins/imudp/imudp.c	727;"	d	file:
NUM_LOG_TYPES	contrib/pmpanngfw/pmpanngfw.c	70;"	d	file:
NUM_MULTISUB	plugins/imfile/imfile.c	79;"	d	file:
NUM_MULTISUB	runtime/tcps_sess.c	464;"	d	file:
NUM_MULTISUB	runtime/tcps_sess.c	495;"	d	file:
NetAddr	runtime/net.h	/^    struct sockaddr *NetAddr;$/;"	m	union:NetAddr::__anon39	typeref:struct:NetAddr::__anon39::sockaddr
NetAddr	runtime/net.h	/^struct NetAddr {$/;"	s
NotImplementedDummy	runtime/wtp.c	/^static rsRetVal NotImplementedDummy() { return RS_RET_NOT_IMPLEMENTED; }$/;"	f	file:
OBJCONSTRUCT_CHECK_SUCCESS_AND_CLEANUP	runtime/obj.h	54;"	d
OBJOMSR_H_INCLUDED	runtime/objomsr.h	23;"	d
OBJSetMethodHandler	runtime/obj.h	88;"	d
OBJSetMethodHandler	runtime/prop.c	/^	OBJSetMethodHandler(objMethod_CONSTRUCTION_FINALIZER, propConstructFinalize);$/;"	v
OBJSetMethodHandler	runtime/ruleset.c	/^	OBJSetMethodHandler(objMethod_DEBUGPRINT, rulesetDebugPrint);$/;"	v
OBJSetMethodHandler	runtime/statsobj.c	/^	OBJSetMethodHandler(objMethod_CONSTRUCTION_FINALIZER, statsobjConstructFinalize);$/;"	v
OBJSetMethodHandler	runtime/stream.c	/^	OBJSetMethodHandler(objMethod_SETPROPERTY, strmSetProperty);$/;"	v
OBJSetMethodHandler	runtime/var.c	/^	OBJSetMethodHandler(objMethod_CONSTRUCTION_FINALIZER, varConstructFinalize);$/;"	v
OBJ_H_INCLUDED	runtime/obj.h	44;"	d
OBJ_IS_CORE_MODULE	runtime/obj-types.h	172;"	d
OBJ_IS_LOADABLE_MODULE	runtime/obj-types.h	173;"	d
OBJ_NUM_IDS	runtime/obj.c	79;"	d	file:
OBJ_NUM_METHODS	runtime/obj-types.h	59;"	d
OBJ_TYPES_H_INCLUDED	runtime/obj-types.h	28;"	d
OID	parse.h	/^	rsObjID OID;			\/**< object ID *\/$/;"	m	struct:rsParsObject
OID	runtime/stringbuf.h	/^	rsObjID OID;		\/**< object ID *\/$/;"	m	struct:cstr_s
OIDrsCStr	runtime/rsyslog.h	/^	OIDrsCStr = 0x34120001,$/;"	e	enum:rsObjectID
OIDrsFreed	runtime/rsyslog.h	/^	OIDrsFreed = -1,		\/**< assigned, when an object is freed. If this$/;"	e	enum:rsObjectID
OIDrsInvalid	runtime/rsyslog.h	/^	OIDrsInvalid = 0,	\/**< value created by calloc(), so do not use ;) *\/$/;"	e	enum:rsObjectID
OIDrsPars	runtime/rsyslog.h	/^	OIDrsPars = 0x34120002$/;"	e	enum:rsObjectID
OLD_DOORFILE	plugins/imsolaris/sun_cddl.c	70;"	d	file:
OMDISCARD_H_INCLUDED	tools/omdiscard.h	25;"	d
OMFILE_H_INCLUDED	tools/omfile.h	25;"	d
OMFWD_H_INCLUDED	tools/omfwd.h	25;"	d
OMHIREDIS_MODE_PUBLISH	contrib/omhiredis/omhiredis.c	54;"	d	file:
OMHIREDIS_MODE_QUEUE	contrib/omhiredis/omhiredis.c	53;"	d	file:
OMHIREDIS_MODE_TEMPLATE	contrib/omhiredis/omhiredis.c	52;"	d	file:
OMHTTPFS_DEFAULT_HOST	contrib/omhttpfs/omhttpfs.c	64;"	d	file:
OMHTTPFS_DEFAULT_PORT	contrib/omhttpfs/omhttpfs.c	62;"	d	file:
OMHTTPFS_DEFAULT_USER	contrib/omhttpfs/omhttpfs.c	63;"	d	file:
OMHTTPFS_VERSION	contrib/omhttpfs/omhttpfs.c	61;"	d	file:
OMPIPE_H_INCLUDED	tools/ompipe.h	23;"	d
OMSNMP_H_INCLUDED	plugins/omsnmp/omsnmp.h	23;"	d
OMSNMP_MAXCOMMUNITYLENGHT	plugins/omsnmp/omsnmp.h	27;"	d
OMSNMP_MAXOIDLENGHT	plugins/omsnmp/omsnmp.h	28;"	d
OMSNMP_MAXPORTLENGHT	plugins/omsnmp/omsnmp.h	26;"	d
OMSNMP_MAXTRANSPORLENGTH	plugins/omsnmp/omsnmp.h	25;"	d
OMSR_NO_RQD_TPL_OPTS	runtime/objomsr.h	26;"	d
OMSR_NO_RQD_TPL_OPTS	tools/ompipe.c	/^	CHKiRet(cflineParseFileName(p, (uchar*) pData->pipe, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS,$/;"	v
OMSR_RQD_TPL_OPT_SQL	runtime/objomsr.h	27;"	d
OMSR_TPL_AS_ARRAY	runtime/objomsr.h	31;"	d
OMSR_TPL_AS_JSON	runtime/objomsr.h	33;"	d
OMSR_TPL_AS_MSG	runtime/objomsr.h	32;"	d
OMSRconstruct	runtime/objomsr.c	/^rsRetVal OMSRconstruct(omodStringRequest_t **ppThis, int iNumEntries)$/;"	f
OMSRdestruct	runtime/objomsr.c	/^rsRetVal OMSRdestruct(omodStringRequest_t *pThis)$/;"	f
OMSRgetEntry	runtime/objomsr.c	/^int OMSRgetEntry(omodStringRequest_t *pThis, int iEntry, uchar **ppTplName, int *piTplOpts)$/;"	f
OMSRgetEntryCount	runtime/objomsr.c	/^int OMSRgetEntryCount(omodStringRequest_t *pThis)$/;"	f
OMSRgetSupportedTplOpts	runtime/objomsr.c	/^OMSRgetSupportedTplOpts(unsigned long *pOpts)$/;"	f
OMSRsetEntry	contrib/mmcount/mmcount.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	contrib/mmgrok/mmgrok.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	contrib/mmsequence/mmsequence.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	contrib/omhttpfs/omhttpfs.c	/^    CHKiRet(OMSRsetEntry(*ppOMSR, 0, tplToUse, OMSR_NO_RQD_TPL_OPTS));$/;"	v
OMSRsetEntry	contrib/omrabbitmq/omrabbitmq.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, (uchar*)strdup((pData->tplName == NULL) ?$/;"	v
OMSRsetEntry	plugins/mmanon/mmanon.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	plugins/mmexternal/mmexternal.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	plugins/mmfields/mmfields.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	plugins/mmjsonparse/mmjsonparse.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	plugins/mmnormalize/mmnormalize.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	plugins/mmpstrucdata/mmpstrucdata.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	plugins/mmutf8fix/mmutf8fix.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	plugins/omjournal/omjournal.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, NULL, OMSR_TPL_AS_MSG));$/;"	v
OMSRsetEntry	plugins/omkafka/omkafka.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, (uchar*)strdup((pData->tplName == NULL) ? $/;"	v
OMSRsetEntry	plugins/omlibdbi/omlibdbi.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, tplToUse, OMSR_RQD_TPL_OPT_SQL));$/;"	v
OMSRsetEntry	plugins/omprog/omprog.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, (uchar*)strdup((pData->tplName == NULL) ? $/;"	v
OMSRsetEntry	plugins/omrelp/omrelp.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, (uchar*)strdup((pData->tplName == NULL) ?$/;"	v
OMSRsetEntry	plugins/omsnmp/omsnmp.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, (uchar*)strdup((pData->tplName == NULL) ? $/;"	v
OMSRsetEntry	plugins/omudpspoof/omudpspoof.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, tplToUse, OMSR_NO_RQD_TPL_OPTS));$/;"	v
OMSRsetEntry	plugins/omudpspoof/omudpspoof.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 1, ustrdup(pData->sourceTpl), OMSR_NO_RQD_TPL_OPTS));$/;"	v
OMSRsetEntry	plugins/omudpspoof/omudpspoof.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 1, ustrdup(sourceTpl), OMSR_NO_RQD_TPL_OPTS));$/;"	v
OMSRsetEntry	runtime/objomsr.c	/^rsRetVal OMSRsetEntry(omodStringRequest_t *pThis, int iEntry, uchar *pTplName, int iTplOpts)$/;"	f
OMSRsetEntry	tools/omfile.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, tplToUse, OMSR_NO_RQD_TPL_OPTS));$/;"	v
OMSRsetEntry	tools/omfwd.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, tplToUse, OMSR_NO_RQD_TPL_OPTS));$/;"	v
OMSRsetEntry	tools/ompipe.c	/^	CHKiRet(OMSRsetEntry(*ppOMSR, 0, (uchar*)strdup((pData->tplName == NULL) ? $/;"	v
OMUSRMSG_H_INCLUDED	tools/omusrmsg.h	25;"	d
OPMODE_INOTIFY	plugins/imfile/imfile.c	162;"	d	file:
OPMODE_POLLING	plugins/imfile/imfile.c	161;"	d	file:
O_CLOEXEC	runtime/librsgt.c	389;"	d	file:
O_CLOEXEC	runtime/librsksi.c	408;"	d	file:
O_CLOEXEC	runtime/rsyslog.h	575;"	d
O_LARGEFILE	plugins/omelasticsearch/omelasticsearch.c	56;"	d	file:
O_LARGEFILE	runtime/stream.c	67;"	d	file:
OffsetHour	runtime/syslogd-types.h	/^	intTiny OffsetHour;	\/* UTC offset in hours$/;"	m	struct:syslogTime
OffsetMinute	runtime/syslogd-types.h	/^	intTiny OffsetMinute;	\/* UTC offset in minutes *\/$/;"	m	struct:syslogTime
OffsetMode	runtime/syslogd-types.h	/^	char OffsetMode;	\/* UTC offset + or - *\/$/;"	m	struct:syslogTime
OnCharRcvd	runtime/strmsrv.h	/^	rsRetVal (*OnCharRcvd)(strms_sess_t*, uchar);$/;"	m	struct:strmsrv_s
OnDestruct	runtime/strmsrv.h	/^	rsRetVal (*OnDestruct)(void*);$/;"	m	struct:strmsrv_s
OnDestruct	runtime/tcpsrv.h	/^	rsRetVal (*OnDestruct)(void*);$/;"	m	struct:tcpsrv_s
OnFileClose	runtime/cryprov.h	/^	rsRetVal (*OnFileClose)(void *pFileInstData, off64_t offsLogfile);$/;"	v
OnFileClose	runtime/lmcry_gcry.c	/^OnFileClose(void *pF, off64_t offsLogfile)$/;"	f	file:
OnFileClose	runtime/lmsig_gt.c	/^OnFileClose(void *pF)$/;"	f	file:
OnFileClose	runtime/lmsig_ksi.c	/^OnFileClose(void *pF)$/;"	f	file:
OnFileClose	runtime/sigprov.h	/^	rsRetVal (*OnFileClose)(void *pFileInstData);$/;"	v
OnFileOpen	runtime/cryprov.h	/^	rsRetVal (*OnFileOpen)(void *pThis, uchar *fn, void *pFileInstData, char openMode);$/;"	v
OnFileOpen	runtime/lmcry_gcry.c	/^OnFileOpen(void *pT, uchar *fn, void *pGF, char openMode)$/;"	f	file:
OnFileOpen	runtime/lmsig_gt.c	/^OnFileOpen(void *pT, uchar *fn, void *pGF)$/;"	f	file:
OnFileOpen	runtime/lmsig_ksi.c	/^OnFileOpen(void *pT, uchar *fn, void *pGF)$/;"	f	file:
OnFileOpen	runtime/sigprov.h	/^	rsRetVal (*OnFileOpen)(void *pThis, uchar *fn, void *pFileInstData);$/;"	v
OnMsgReceive	runtime/tcpsrv.h	/^	rsRetVal (*OnMsgReceive)(tcps_sess_t *, uchar *pszMsg, int iLenMsg); \/* submit message callback *\/$/;"	m	struct:tcpsrv_s
OnMsgReceived	plugins/imdiag/imdiag.c	/^OnMsgReceived(tcps_sess_t *pSess, uchar *pRcv, int iLenMsg)$/;"	f	file:
OnReceive	plugins/im3195/im3195.c	/^void OnReceive(srAPIObj __attribute__((unused)) *pMyAPI, srSLMGObj* pSLMG)$/;"	f
OnRecordWrite	runtime/lmsig_gt.c	/^OnRecordWrite(void *pF, uchar *rec, rs_size_t lenRec)$/;"	f	file:
OnRecordWrite	runtime/lmsig_ksi.c	/^OnRecordWrite(void *pF, uchar *rec, rs_size_t lenRec)$/;"	f	file:
OnRecordWrite	runtime/sigprov.h	/^	rsRetVal (*OnRecordWrite)(void *pFileInstData, uchar *rec, rs_size_t lenRec);$/;"	v
OnSessAcceptGSS	plugins/imgssapi/imgssapi.c	/^OnSessAcceptGSS(tcpsrv_t *pThis, tcps_sess_t *pSess)$/;"	f	file:
OnSessConstructFinalize	plugins/imgssapi/imgssapi.c	/^static rsRetVal OnSessConstructFinalize(void *ppUsr)$/;"	f	file:
OnSessConstructFinalize	runtime/strmsrv.h	/^	rsRetVal (*OnSessConstructFinalize)(void*);$/;"	m	struct:strmsrv_s
OnSessConstructFinalize	runtime/tcpsrv.h	/^	rsRetVal (*OnSessConstructFinalize)(void*);$/;"	m	struct:tcpsrv_s
OnSessDestruct	plugins/imgssapi/imgssapi.c	/^OnSessDestruct(void *ppUsr)$/;"	f	file:
OpenLstnSocks	runtime/strmsrv.h	/^	rsRetVal (*OpenLstnSocks)(struct strmsrv_s*);$/;"	m	struct:strmsrv_s
OpenLstnSocks	runtime/tcpsrv.h	/^	rsRetVal (*OpenLstnSocks)(struct tcpsrv_s*);$/;"	m	struct:tcpsrv_s
OpeningText	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	72;"	d	file:
OpeningText	contrib/pmcisconames/pmcisconames.c	71;"	d	file:
OpeningText	plugins/pmlastmsg/pmlastmsg.c	79;"	d	file:
OptimizeUniProc	runtime/glbl.c	/^	SIMP_PROP(OptimizeUniProc);$/;"	v
PARSE3164_TZSTRING	runtime/datetime.h	65;"	d
PARSERIF_H_DEFINED	grammar/parserif.h	20;"	d
PARSER_NAME	runtime/module-template.h	1174;"	d
PARSE_HOSTNAME	runtime/msg.h	145;"	d
PATHBUF_OVERHEAD	runtime/modules.c	1078;"	d	file:
PATH_LOG	plugins/imsolaris/imsolaris.c	92;"	d	file:
PATH_MAX	runtime/modules.c	54;"	d	file:
PATH_PIDFILE	tools/rsyslogd.c	89;"	d	file:
PEER_WILDCARD_AT_END	runtime/net.h	/^		PEER_WILDCARD_AT_END = 2,	\/**< wildcard at end of entry (name*) *\/$/;"	e	enum:permittedPeerWildcard_s::__anon40
PEER_WILDCARD_AT_START	runtime/net.h	/^		PEER_WILDCARD_AT_START = 1,	\/**< wildcard at start of entry (*name) *\/$/;"	e	enum:permittedPeerWildcard_s::__anon40
PEER_WILDCARD_EMPTY_COMPONENT	runtime/net.h	/^		PEER_WILDCARD_EMPTY_COMPONENT = 4\/**< special case: domain component empty (e.g. "..") *\/$/;"	e	enum:permittedPeerWildcard_s::__anon40
PEER_WILDCARD_MATCH_ALL	runtime/net.h	/^		PEER_WILDCARD_MATCH_ALL = 3,	\/**< only * wildcard, matches all values *\/$/;"	e	enum:permittedPeerWildcard_s::__anon40
PEER_WILDCARD_NONE	runtime/net.h	/^		PEER_WILDCARD_NONE = 0,		\/**< no wildcard in this entry *\/$/;"	e	enum:permittedPeerWildcard_s::__anon40
PERMIT_YEAR_AFTER_TIME	runtime/datetime.h	68;"	d
PERM_PEER_TYPE_PLAIN	runtime/net.h	/^		PERM_PEER_TYPE_PLAIN = 1,	\/**< just plain text contained *\/$/;"	e	enum:permittedPeers_s::__anon41
PERM_PEER_TYPE_UNDECIDED	runtime/net.h	/^		PERM_PEER_TYPE_UNDECIDED = 0,	\/**< we have not yet decided the type (fine in some auth modes) *\/$/;"	e	enum:permittedPeers_s::__anon41
PERM_PEER_TYPE_WILDCARD	runtime/net.h	/^		PERM_PEER_TYPE_WILDCARD = 2,	\/**< wildcards are contained, wildcard struture is filled *\/$/;"	e	enum:permittedPeers_s::__anon41
PMRFC3164_H_INCLUDED	tools/pmrfc3164.h	25;"	d
PMRFC54254_H_INCLUDED	tools/pmrfc5424.h	25;"	d
PREFER_ATOMIC_INC	runtime/atomic.h	188;"	d
PREFER_ATOMIC_INC	runtime/atomic.h	67;"	d
PREP_TWO_STRINGS	grammar/rainerscript.c	1954;"	d	file:
PROGNAME	runtime/msg.h	/^	} PROGNAME;$/;"	m	struct:msg	typeref:union:msg::__anon37
PROPTYPE_CSTR	runtime/obj-types.h	/^	PROPTYPE_CSTR = 6,$/;"	e	enum:__anon44
PROPTYPE_INT	runtime/obj-types.h	/^	PROPTYPE_INT = 3,$/;"	e	enum:__anon44
PROPTYPE_INT64	runtime/obj-types.h	/^	PROPTYPE_INT64 = 5,$/;"	e	enum:__anon44
PROPTYPE_LONG	runtime/obj-types.h	/^	PROPTYPE_LONG = 4,$/;"	e	enum:__anon44
PROPTYPE_NONE	runtime/obj-types.h	/^	PROPTYPE_NONE = 0, \/* currently no value set *\/$/;"	e	enum:__anon44
PROPTYPE_PSZ	runtime/obj-types.h	/^	PROPTYPE_PSZ = 1,$/;"	e	enum:__anon44
PROPTYPE_SHORT	runtime/obj-types.h	/^	PROPTYPE_SHORT = 2,$/;"	e	enum:__anon44
PROPTYPE_SYSLOGTIME	runtime/obj-types.h	/^	PROPTYPE_SYSLOGTIME = 7$/;"	e	enum:__anon44
PROP_APP_NAME	runtime/typedefs.h	192;"	d
PROP_CEE	runtime/typedefs.h	210;"	d
PROP_CEE_ALL_JSON	runtime/typedefs.h	211;"	d
PROP_CEE_ALL_JSON_PLAIN	runtime/typedefs.h	214;"	d
PROP_FROMHOST	runtime/typedefs.h	179;"	d
PROP_FROMHOST_IP	runtime/typedefs.h	180;"	d
PROP_GLOBAL_VAR	runtime/typedefs.h	213;"	d
PROP_HOSTNAME	runtime/typedefs.h	175;"	d
PROP_INPUTNAME	runtime/typedefs.h	178;"	d
PROP_INVALID	runtime/typedefs.h	172;"	d
PROP_IUT	runtime/typedefs.h	183;"	d
PROP_JSONMESG	runtime/typedefs.h	196;"	d
PROP_LOCAL_VAR	runtime/typedefs.h	212;"	d
PROP_MSG	runtime/typedefs.h	173;"	d
PROP_MSGID	runtime/typedefs.h	194;"	d
PROP_PARSESUCCESS	runtime/typedefs.h	195;"	d
PROP_PRI	runtime/typedefs.h	181;"	d
PROP_PRI_TEXT	runtime/typedefs.h	182;"	d
PROP_PROCID	runtime/typedefs.h	193;"	d
PROP_PROGRAMNAME	runtime/typedefs.h	189;"	d
PROP_PROTOCOL_VERSION	runtime/typedefs.h	190;"	d
PROP_RAWMSG	runtime/typedefs.h	177;"	d
PROP_RAWMSG_AFTER_PRI	runtime/typedefs.h	197;"	d
PROP_STRUCTURED_DATA	runtime/typedefs.h	191;"	d
PROP_SYSLOGFACILITY	runtime/typedefs.h	184;"	d
PROP_SYSLOGFACILITY_TEXT	runtime/typedefs.h	185;"	d
PROP_SYSLOGSEVERITY	runtime/typedefs.h	186;"	d
PROP_SYSLOGSEVERITY_TEXT	runtime/typedefs.h	187;"	d
PROP_SYSLOGTAG	runtime/typedefs.h	176;"	d
PROP_SYS_BOM	runtime/typedefs.h	207;"	d
PROP_SYS_DAY	runtime/typedefs.h	201;"	d
PROP_SYS_HHOUR	runtime/typedefs.h	203;"	d
PROP_SYS_HOUR	runtime/typedefs.h	202;"	d
PROP_SYS_MINUTE	runtime/typedefs.h	205;"	d
PROP_SYS_MONTH	runtime/typedefs.h	200;"	d
PROP_SYS_MYHOSTNAME	runtime/typedefs.h	206;"	d
PROP_SYS_NOW	runtime/typedefs.h	198;"	d
PROP_SYS_QHOUR	runtime/typedefs.h	204;"	d
PROP_SYS_UPTIME	runtime/typedefs.h	208;"	d
PROP_SYS_YEAR	runtime/typedefs.h	199;"	d
PROP_TIMEGENERATED	runtime/typedefs.h	188;"	d
PROP_TIMESTAMP	runtime/typedefs.h	174;"	d
PROP_UUID	runtime/typedefs.h	209;"	d
PROTOTYPEObj	runtime/obj-types.h	409;"	d
PROTOTYPEObjClassExit	runtime/obj-types.h	218;"	d
PROTOTYPEObjClassInit	runtime/obj-types.h	167;"	d
PROTOTYPEObjDebugPrint	runtime/obj-types.h	319;"	d
PROTOTYPEpropSetMeth	runtime/obj-types.h	162;"	d
PROTOTYPEpropSetMethFP	runtime/obj-types.h	153;"	d
PROTOTYPEpropSetMethPTR	runtime/obj-types.h	137;"	d
ParseMsg	runtime/parser.c	/^ParseMsg(msg_t *pMsg)$/;"	f	file:
ParseMsg	runtime/parser.h	/^	rsRetVal (*ParseMsg)(msg_t *pMsg);$/;"	v
ParsePRI	runtime/parser.c	/^ParsePRI(msg_t *pMsg)$/;"	f	file:
ParseTIMESTAMP3164	runtime/datetime.c	/^ParseTIMESTAMP3164(struct syslogTime *pTime, uchar** ppszTS, int *pLenStr,$/;"	f	file:
ParseTIMESTAMP3164	runtime/datetime.h	/^	rsRetVal (*ParseTIMESTAMP3164)(struct syslogTime *pTime, uchar** pszTS, int*, const int bParseTZ, const int bDetectYearAfterTime);$/;"	v
ParseTIMESTAMP3339	runtime/datetime.c	/^ParseTIMESTAMP3339(struct syslogTime *pTime, uchar** ppszTS, int *pLenStr)$/;"	f	file:
ParseTIMESTAMP3339	runtime/datetime.h	/^	rsRetVal (*ParseTIMESTAMP3339)(struct syslogTime *pTime, uchar** ppszTS, int*);$/;"	v
PerformTest	tests/rscript.c	/^PerformTest(cstr_t *pstrIn, rsRetVal iRetExpected, cstr_t *pstrOut)$/;"	f	file:
PermittedPeerWildcardCompile	runtime/net.c	/^PermittedPeerWildcardCompile(permittedPeers_t *pPeer)$/;"	f	file:
PermittedPeerWildcardMatch	runtime/net.c	/^PermittedPeerWildcardMatch(permittedPeers_t *pPeer, uchar *pszNameToMatch, int *pbIsMatching)$/;"	f	file:
PermittedPeerWildcardMatch	runtime/net.h	/^	rsRetVal (*PermittedPeerWildcardMatch)(permittedPeers_t *pPeer, uchar *pszNameToMatch, int *pbIsMatching);$/;"	v
Pfd	plugins/imklog/solaris_cddl.c	/^static struct pollfd Pfd;		\/* Pollfd for local the log device *\/$/;"	v	typeref:struct:pollfd	file:
PidFile	tools/rsyslogd.c	/^uchar *PidFile = (uchar*) PATH_PIDFILE;$/;"	v
PrepareClose	runtime/tcps_sess.c	/^PrepareClose(tcps_sess_t *pThis)$/;"	f	file:
PrepareClose	runtime/tcps_sess.h	/^	rsRetVal (*PrepareClose)(tcps_sess_t *pThis);$/;"	v
PreserveFQDN	runtime/glbl.c	/^	SIMP_PROP(PreserveFQDN);$/;"	v
PrintAllowedSenders	runtime/net.c	/^void PrintAllowedSenders(int iListToPrint)$/;"	f
PrintAllowedSenders	runtime/net.h	/^	void (*PrintAllowedSenders)(int iListToPrint);$/;"	v
PrintList	runtime/modules.h	/^	void (*PrintList)(void);$/;"	v
ProcessBatch	runtime/ruleset.h	/^	rsRetVal (*ProcessBatch)(batch_t*, wti_t *);$/;"	v
ProcessTestFile	tests/rscript.c	/^ProcessTestFile(uchar *pszFileName)$/;"	f	file:
QUEUETYPE_DIRECT	runtime/queue.h	/^	QUEUETYPE_DIRECT = 3 	  \/* no queuing happens, consumer is directly called *\/$/;"	e	enum:__anon47
QUEUETYPE_DISK	runtime/queue.h	/^	QUEUETYPE_DISK = 2, 	  \/* disk files used as buffer *\/$/;"	e	enum:__anon47
QUEUETYPE_FIXED_ARRAY	runtime/queue.h	/^	QUEUETYPE_FIXED_ARRAY = 0,\/* a simple queue made out of a fixed (initially malloced) array fast but memoryhog *\/$/;"	e	enum:__anon47
QUEUETYPE_LINKEDLIST	runtime/queue.h	/^	QUEUETYPE_LINKEDLIST = 1, \/* linked list used as buffer, lower fixed memory overhead but slower *\/$/;"	e	enum:__anon47
QUEUE_CHECKPOINT	runtime/queue.c	98;"	d	file:
QUEUE_H_INCLUDED	runtime/queue.h	25;"	d
QUEUE_NO_CHECKPOINT	runtime/queue.c	99;"	d	file:
QUEUE_TIMEOUT_ETERNAL	runtime/queue.h	193;"	d
QueryIF	runtime/obj-types.h	/^	rsRetVal (*QueryIF)(interface_t*);$/;"	m	struct:objInfo_s
RABBITMQ_CHANNEL	contrib/omrabbitmq/omrabbitmq.c	46;"	d	file:
READBUF_SIZE	runtime/libgcry.c	55;"	d	file:
RELATIVE_DOORFILE	plugins/imsolaris/sun_cddl.c	69;"	d	file:
RET_OUT_OF_MEMORY	runtime/msg.c	3205;"	d	file:
RETiRet	contrib/imczmq/imczmq.c	/^	RETiRet;$/;"	v
RETiRet	contrib/imzmq3/imzmq3.c	/^    RETiRet;$/;"	v
RETiRet	plugins/imsolaris/imsolaris.c	/^	RETiRet;$/;"	v
RETiRet	runtime/rsyslog.h	476;"	d
REWRITE_MODE	plugins/mmanon/mmanon.c	65;"	d	file:
REWRITE_MODE	plugins/mmfields/mmfields.c	53;"	d	file:
RSFALSE	runtime/syslogd-types.h	32;"	d
RSFREEOBJ	runtime/rsyslog.h	522;"	d
RSFREEOBJ	runtime/rsyslog.h	524;"	d
RSGCRYE_EI_OPEN	runtime/libgcry.h	69;"	d
RSGCRYE_OOM	runtime/libgcry.h	70;"	d
RSGCRY_FILETYPE_NAME	runtime/libgcry.h	74;"	d
RSGTE2String	runtime/librsgt.h	/^RSGTE2String(int err)$/;"	f
RSGTE_END_OF_LOG	runtime/librsgt.h	142;"	d
RSGTE_END_OF_LOG	runtime/librsksi.h	144;"	d
RSGTE_END_OF_SIG	runtime/librsgt.h	141;"	d
RSGTE_END_OF_SIG	runtime/librsksi.h	143;"	d
RSGTE_EOF	runtime/librsgt.h	129;"	d
RSGTE_EOF	runtime/librsksi.h	131;"	d
RSGTE_FMT	runtime/librsgt.h	121;"	d
RSGTE_FMT	runtime/librsksi.h	123;"	d
RSGTE_HASH_CREATE	runtime/librsgt.h	140;"	d
RSGTE_HASH_CREATE	runtime/librsksi.h	142;"	d
RSGTE_INVLD_RECCNT	runtime/librsgt.h	126;"	d
RSGTE_INVLD_RECCNT	runtime/librsksi.h	128;"	d
RSGTE_INVLD_REC_HASH	runtime/librsgt.h	132;"	d
RSGTE_INVLD_REC_HASH	runtime/librsksi.h	134;"	d
RSGTE_INVLD_REC_HASHID	runtime/librsgt.h	134;"	d
RSGTE_INVLD_REC_HASHID	runtime/librsksi.h	136;"	d
RSGTE_INVLD_SIGNATURE	runtime/librsksi.h	139;"	d
RSGTE_INVLD_TIMESTAMP	runtime/librsgt.h	137;"	d
RSGTE_INVLD_TREE_HASH	runtime/librsgt.h	133;"	d
RSGTE_INVLD_TREE_HASH	runtime/librsksi.h	135;"	d
RSGTE_INVLD_TREE_HASHID	runtime/librsgt.h	135;"	d
RSGTE_INVLD_TREE_HASHID	runtime/librsksi.h	137;"	d
RSGTE_INVLHDR	runtime/librsgt.h	128;"	d
RSGTE_INVLHDR	runtime/librsksi.h	130;"	d
RSGTE_INVLTYP	runtime/librsgt.h	122;"	d
RSGTE_INVLTYP	runtime/librsksi.h	124;"	d
RSGTE_IO	runtime/librsgt.h	120;"	d
RSGTE_IO	runtime/librsksi.h	122;"	d
RSGTE_LEN	runtime/librsgt.h	124;"	d
RSGTE_LEN	runtime/librsksi.h	126;"	d
RSGTE_MISS_BLOCKSIG	runtime/librsgt.h	136;"	d
RSGTE_MISS_BLOCKSIG	runtime/librsksi.h	138;"	d
RSGTE_MISS_REC_HASH	runtime/librsgt.h	130;"	d
RSGTE_MISS_REC_HASH	runtime/librsksi.h	132;"	d
RSGTE_MISS_TREE_HASH	runtime/librsgt.h	131;"	d
RSGTE_MISS_TREE_HASH	runtime/librsksi.h	133;"	d
RSGTE_OOM	runtime/librsgt.h	123;"	d
RSGTE_OOM	runtime/librsksi.h	125;"	d
RSGTE_SIG_EXTEND	runtime/librsksi.h	127;"	d
RSGTE_TS_CREATEHASH	runtime/librsksi.h	140;"	d
RSGTE_TS_DERDECODE	runtime/librsgt.h	138;"	d
RSGTE_TS_DERENCODE	runtime/librsgt.h	139;"	d
RSGTE_TS_DERENCODE	runtime/librsksi.h	141;"	d
RSGTE_TS_EXTEND	runtime/librsgt.h	125;"	d
RSGT_FLAG_FORWARD	runtime/librsgt_common.h	84;"	d
RSGT_FLAG_NONCRIT	runtime/librsgt_common.h	83;"	d
RSGT_FLAG_NONCRIT_RUNTIME	runtime/librsgt.c	/^int RSGT_FLAG_NONCRIT_RUNTIME = RSGT_FLAG_NONCRIT; $/;"	v
RSGT_FLAG_TLV16	runtime/librsgt_common.h	86;"	d
RSGT_FLAG_TLV16_RUNTIME	runtime/librsgt.c	/^int RSGT_FLAG_TLV16_RUNTIME = RSGT_FLAG_TLV16;$/;"	v
RSGT_TYPE_MASK	runtime/librsgt_common.h	85;"	d
RSKSIE2String	runtime/librsksi.h	/^RSKSIE2String(int err)$/;"	f
RSKSI_FLAG_NONCRIT_RUNTIME	runtime/librsksi.c	/^int RSKSI_FLAG_NONCRIT_RUNTIME = RSGT_FLAG_NONCRIT; $/;"	v
RSKSI_FLAG_TLV16_RUNTIME	runtime/librsksi.c	/^int RSKSI_FLAG_TLV16_RUNTIME = RSGT_FLAG_TLV16;$/;"	v
RSTRUE	runtime/syslogd-types.h	33;"	d
RS_RET_ACCEPT_ERR	runtime/rsyslog.h	/^	RS_RET_ACCEPT_ERR = -2106, \/**< error during accept() system call *\/$/;"	e	enum:rsRetVal_
RS_RET_ACTION_FAILED	runtime/rsyslog.h	/^	RS_RET_ACTION_FAILED = -2123, \/**< action failed and is now suspended *\/$/;"	e	enum:rsRetVal_
RS_RET_ADDRESS_UNKNOWN	runtime/rsyslog.h	/^	RS_RET_ADDRESS_UNKNOWN = -2020, \/**< an address is unknown - not necessarily an error *\/$/;"	e	enum:rsRetVal_
RS_RET_ALREADY_STARTING	runtime/rsyslog.h	/^	RS_RET_ALREADY_STARTING = -2043, \/**< something (a thread?) is already starting - not necessarily an error *\/$/;"	e	enum:rsRetVal_
RS_RET_BSD_BLOCKS_UNSUPPORTED	runtime/rsyslog.h	/^	RS_RET_BSD_BLOCKS_UNSUPPORTED = -2304, \/**< BSD-style config blocks are no longer supported *\/$/;"	e	enum:rsRetVal_
RS_RET_CA_CERT_MISSING	runtime/rsyslog.h	/^	RS_RET_CA_CERT_MISSING = -2329,\/**< a CA cert is missing where one is required (e.g. TLS) *\/$/;"	e	enum:rsRetVal_
RS_RET_CERTKEY_MISSING	runtime/rsyslog.h	/^	RS_RET_CERTKEY_MISSING = -2331,\/**< a cert (private) key is missing where one is required (e.g. TLS) *\/$/;"	e	enum:rsRetVal_
RS_RET_CERTLESS	runtime/rsyslog.h	/^	RS_RET_CERTLESS = -2102, \/**< state: we run without machine cert (this may be OK) *\/$/;"	e	enum:rsRetVal_
RS_RET_CERT_EXPIRED	runtime/rsyslog.h	/^	RS_RET_CERT_EXPIRED = -2092, \/**< we are past a x.509 cert's expiration time *\/$/;"	e	enum:rsRetVal_
RS_RET_CERT_INVALID	runtime/rsyslog.h	/^	RS_RET_CERT_INVALID = -2090, \/**< a x509 certificate failed validation *\/$/;"	e	enum:rsRetVal_
RS_RET_CERT_INVALID_DN	runtime/rsyslog.h	/^	RS_RET_CERT_INVALID_DN = -2091, \/**< distinguised name in x509 certificate is invalid (e.g. wrong escaping) *\/$/;"	e	enum:rsRetVal_
RS_RET_CERT_MISSING	runtime/rsyslog.h	/^	RS_RET_CERT_MISSING = -2330,\/**< a cert is missing where one is required (e.g. TLS) *\/$/;"	e	enum:rsRetVal_
RS_RET_CERT_NOT_YET_ACTIVE	runtime/rsyslog.h	/^	RS_RET_CERT_NOT_YET_ACTIVE = -2094, \/**< x.509 cert's activation time not yet reached *\/$/;"	e	enum:rsRetVal_
RS_RET_CHAIN_NOT_PERMITTED	runtime/rsyslog.h	/^	RS_RET_CHAIN_NOT_PERMITTED = -2015, \/**< chaining (e.g. of config command handlers) not permitted *\/$/;"	e	enum:rsRetVal_
RS_RET_CLOSED	runtime/rsyslog.h	/^	RS_RET_CLOSED = -2099, \/**< connection was closed *\/$/;"	e	enum:rsRetVal_
RS_RET_CMD_GONE_AWAY	runtime/rsyslog.h	/^	RS_RET_CMD_GONE_AWAY = -2204,\/**< config directive existed, but no longer supported *\/$/;"	e	enum:rsRetVal_
RS_RET_CNF_INVLD_FRAMING	runtime/rsyslog.h	/^	RS_RET_CNF_INVLD_FRAMING = -2214, \/**< invalid framing specified in config file *\/$/;"	e	enum:rsRetVal_
RS_RET_CODE_ERR	runtime/rsyslog.h	/^	RS_RET_CODE_ERR = -2109, \/**< program code (internal) error *\/$/;"	e	enum:rsRetVal_
RS_RET_CONFIG_ERROR	runtime/rsyslog.h	/^	RS_RET_CONFIG_ERROR = -2046, \/**< there is a problem with the user-provided config settigs *\/$/;"	e	enum:rsRetVal_
RS_RET_CONFLINE_UNPROCESSED	contrib/mmcount/mmcount.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	contrib/mmsequence/mmsequence.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	contrib/omczmq/omczmq.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	contrib/omhiredis/omhiredis.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	contrib/omrabbitmq/omrabbitmq.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	contrib/omzmq3/omzmq3.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	plugins/mmanon/mmanon.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	plugins/mmexternal/mmexternal.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	plugins/mmfields/mmfields.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	plugins/mmpstrucdata/mmpstrucdata.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	plugins/mmutf8fix/mmutf8fix.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	plugins/omelasticsearch/omelasticsearch.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	plugins/omjournal/omjournal.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	plugins/ommongodb/ommongodb.c	/^	ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	runtime/rsyslog.h	/^	RS_RET_CONFLINE_UNPROCESSED = -2001,\/**< config line was not processed, pass to other module *\/$/;"	e	enum:rsRetVal_
RS_RET_CONFLINE_UNPROCESSED	tools/omfile.c	/^		ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFLINE_UNPROCESSED	tools/omfwd.c	/^		ABORT_FINALIZE(RS_RET_CONFLINE_UNPROCESSED);$/;"	v
RS_RET_CONFOBJ_UNSUPPORTED	runtime/rsyslog.h	/^	RS_RET_CONFOBJ_UNSUPPORTED = -2210,\/**< config objects (v6 conf) are not supported here *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_END_NO_ACT	runtime/rsyslog.h	/^	RS_RET_CONF_END_NO_ACT = -2171,	\/**< end of action block, but no actual action specified *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_FILE_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_CONF_FILE_NOT_FOUND = -2104, \/**< config file or directory not found *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_INVLD_END	runtime/rsyslog.h	/^	RS_RET_CONF_INVLD_END = -2169,	\/**< $End for wrong conf object (probably nesting error) *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_INVLD_SCOPE	runtime/rsyslog.h	/^	RS_RET_CONF_INVLD_SCOPE = -2170,\/**< config statement not valid in current scope (e.g. global stmt in action block) *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_IN_GLBL	runtime/rsyslog.h	/^	RS_RET_CONF_IN_GLBL = -2168,	\/**< $End when in global scope *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_NOT_GLBL	runtime/rsyslog.h	/^	RS_RET_CONF_NOT_GLBL = -2167,	\/**< $Begin not in global scope *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_PARAM_INVLD	runtime/rsyslog.h	/^	RS_RET_CONF_PARAM_INVLD = -2425,\/**< config parameter is invalid *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_PARSE_ERROR	runtime/rsyslog.h	/^	RS_RET_CONF_PARSE_ERROR = -2207,\/**< (fatal) error parsing config file *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_PARSE_WARNING	runtime/rsyslog.h	/^	RS_RET_CONF_PARSE_WARNING = -2357,\/**< warning parsing config file *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_RQRD_PARAM_MISSING	runtime/rsyslog.h	/^	RS_RET_CONF_RQRD_PARAM_MISSING = -2208,\/**< required parameter in config object is missing *\/$/;"	e	enum:rsRetVal_
RS_RET_CONF_WRN_FULLDLY_BELOW_HIGHWTR	runtime/rsyslog.h	/^	RS_RET_CONF_WRN_FULLDLY_BELOW_HIGHWTR = -2358,\/**< warning queue full delay mark below high wtr mark *\/$/;"	e	enum:rsRetVal_
RS_RET_CONNECTION_ABORTREQ	runtime/rsyslog.h	/^	RS_RET_CONNECTION_ABORTREQ = -2089, \/**< connection was abort requested due to previous error *\/$/;"	e	enum:rsRetVal_
RS_RET_COULD_NOT_BIND	runtime/rsyslog.h	/^	RS_RET_COULD_NOT_BIND = -2077, \/**< could not bind socket, defunct *\/$/;"	e	enum:rsRetVal_
RS_RET_COULD_NOT_PARSE	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	/^	ABORT_FINALIZE(RS_RET_COULD_NOT_PARSE);$/;"	v
RS_RET_COULD_NOT_PARSE	contrib/pmcisconames/pmcisconames.c	/^	ABORT_FINALIZE(RS_RET_COULD_NOT_PARSE);$/;"	v
RS_RET_COULD_NOT_PARSE	contrib/pmpanngfw/pmpanngfw.c	/^    ABORT_FINALIZE(RS_RET_COULD_NOT_PARSE);$/;"	v
RS_RET_COULD_NOT_PARSE	contrib/pmsnare/pmsnare.c	/^	ABORT_FINALIZE(RS_RET_COULD_NOT_PARSE);$/;"	v
RS_RET_COULD_NOT_PARSE	runtime/rsyslog.h	/^	RS_RET_COULD_NOT_PARSE = -2160,\/**< (this) parser could not parse the message (no error, means try next one) *\/$/;"	e	enum:rsRetVal_
RS_RET_CRYPROV_ERR	runtime/rsyslog.h	/^	RS_RET_CRYPROV_ERR = -2321,\/**< error in cryptography encryption provider *\/$/;"	e	enum:rsRetVal_
RS_RET_CRY_INVLD_ALGO	runtime/rsyslog.h	/^	RS_RET_CRY_INVLD_ALGO = -2326,\/**< user specified invalid (unkonwn) crypto algorithm *\/$/;"	e	enum:rsRetVal_
RS_RET_CRY_INVLD_MODE	runtime/rsyslog.h	/^	RS_RET_CRY_INVLD_MODE = -2327,\/**< user specified invalid (unkonwn) crypto mode *\/$/;"	e	enum:rsRetVal_
RS_RET_DATAFAIL	runtime/rsyslog.h	/^	RS_RET_DATAFAIL = -2218,	\/**< data passed to action caused failure *\/$/;"	e	enum:rsRetVal_
RS_RET_DEFER_COMMIT	runtime/rsyslog.h	/^	RS_RET_DEFER_COMMIT = -2121, \/**< output plugin status: not yet committed (an OK state!) *\/$/;"	e	enum:rsRetVal_
RS_RET_DEPRECATED	runtime/rsyslog.h	/^	RS_RET_DEPRECATED = -2307,\/**< deprecated functionality is used *\/$/;"	e	enum:rsRetVal_
RS_RET_DISABLE_ACTION	runtime/rsyslog.h	/^	RS_RET_DISABLE_ACTION = -2006,  \/**< action requests that it be disabled *\/$/;"	e	enum:rsRetVal_
RS_RET_DISCARDMSG	runtime/rsyslog.h	/^	RS_RET_DISCARDMSG = -2002,	\/**< discard message (no error state, processing request!) *\/$/;"	e	enum:rsRetVal_
RS_RET_DRVRNAME_TOO_LONG	runtime/rsyslog.h	/^	RS_RET_DRVRNAME_TOO_LONG = -2082, \/**< driver name too long - should never happen *\/$/;"	e	enum:rsRetVal_
RS_RET_DS_PROP_SEQ_ERR	runtime/rsyslog.h	/^	RS_RET_DS_PROP_SEQ_ERR = -2308,\/**< property sequence error deserializing object *\/$/;"	e	enum:rsRetVal_
RS_RET_DUP_FUNC_NAME	runtime/rsyslog.h	/^	RS_RET_DUP_FUNC_NAME = -2114, \/**< duplicate function name (rainerscript) *\/$/;"	e	enum:rsRetVal_
RS_RET_DUP_PARAM	runtime/rsyslog.h	/^	RS_RET_DUP_PARAM = -2220, \/**< config parameter is given more than once *\/$/;"	e	enum:rsRetVal_
RS_RET_EINTR	runtime/rsyslog.h	/^	RS_RET_EINTR = -2161,		\/**< EINTR occured during a system call (not necessarily an error) *\/$/;"	e	enum:rsRetVal_
RS_RET_EI_INVLD_FILE	runtime/rsyslog.h	/^	RS_RET_EI_INVLD_FILE = -2325,\/**< header indicates the file is no .encinfo file *\/$/;"	e	enum:rsRetVal_
RS_RET_EI_NO_EXISTS	runtime/rsyslog.h	/^	RS_RET_EI_NO_EXISTS = -2323,\/**< .encinfo file does not exist (status, not necessarily error!)*\/$/;"	e	enum:rsRetVal_
RS_RET_EI_OPN_ERR	runtime/rsyslog.h	/^	RS_RET_EI_OPN_ERR = -2322,\/**< error opening an .encinfo file *\/$/;"	e	enum:rsRetVal_
RS_RET_EI_WR_ERR	runtime/rsyslog.h	/^	RS_RET_EI_WR_ERR = -2324,\/**< error writing an .encinfo file *\/$/;"	e	enum:rsRetVal_
RS_RET_EMPTY_LIST	runtime/rsyslog.h	/^	RS_RET_EMPTY_LIST = -2017, \/**< linked list is empty *\/$/;"	e	enum:rsRetVal_
RS_RET_EMPTY_MSG	runtime/rsyslog.h	/^	RS_RET_EMPTY_MSG = -2143, \/**< provided (raw) MSG is empty *\/$/;"	e	enum:rsRetVal_
RS_RET_END_OF_LINKEDLIST	runtime/rsyslog.h	/^	RS_RET_END_OF_LINKEDLIST = -2014,	\/**< end of linked list, not an error, but a status *\/$/;"	e	enum:rsRetVal_
RS_RET_ENTRY_POINT_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_ENTRY_POINT_NOT_FOUND = -1003,\/**< a requested entry point was not found *\/$/;"	e	enum:rsRetVal_
RS_RET_EOF	runtime/rsyslog.h	/^	RS_RET_EOF = -2026, \/**< end of file reached, not necessarily an error *\/$/;"	e	enum:rsRetVal_
RS_RET_EOS	runtime/rsyslog.h	/^	RS_RET_EOS = -2050, \/**< end of stream (of whatever) *\/$/;"	e	enum:rsRetVal_
RS_RET_EPOLL_CR_FAILED	runtime/rsyslog.h	/^	RS_RET_EPOLL_CR_FAILED = -2173, \/**< epoll_create() failed *\/$/;"	e	enum:rsRetVal_
RS_RET_EPOLL_CTL_FAILED	runtime/rsyslog.h	/^	RS_RET_EPOLL_CTL_FAILED = -2174, \/**< epoll_ctl() failed *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR	runtime/rsyslog.h	/^	RS_RET_ERR = -3000,	\/**< generic failure *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_AQ_CONLOG	runtime/rsyslog.h	/^	RS_RET_ERR_AQ_CONLOG = -2146, \/**< error aquiring console log (on solaris) *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_CREAT_PIPE	runtime/rsyslog.h	/^	RS_RET_ERR_CREAT_PIPE = -2117, \/**< error during pipe creation *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_CRE_AFUX	runtime/rsyslog.h	/^	RS_RET_ERR_CRE_AFUX = -2176, \/**< error creating AF_UNIX socket (and binding it) *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_DOOR	runtime/rsyslog.h	/^	RS_RET_ERR_DOOR = -2147, \/**< some problems with handling the Solaris door functionality *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_EPOLL	runtime/rsyslog.h	/^	RS_RET_ERR_EPOLL = -2162,	\/**< epoll() returned with an unexpected error code *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_EPOLL_CTL	runtime/rsyslog.h	/^	RS_RET_ERR_EPOLL_CTL = -2163,	\/**< epol_ctll() returned with an unexpected error code *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_FORK	runtime/rsyslog.h	/^	RS_RET_ERR_FORK = -2118, \/**< error during fork() *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_HDFS_OPEN	runtime/rsyslog.h	/^	RS_RET_ERR_HDFS_OPEN = -2179, \/**< error during hdfsOpen (e.g. file does not exist) *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_HDFS_WRITE	runtime/rsyslog.h	/^	RS_RET_ERR_HDFS_WRITE = -2178, \/**< error writing to HDFS *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_LIBEE_INIT	runtime/rsyslog.h	/^	RS_RET_ERR_LIBEE_INIT = -2201,	\/**< cannot obtain libee ctx *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_LIBLOGNORM	runtime/rsyslog.h	/^	RS_RET_ERR_LIBLOGNORM = -2427,\/**< cannot obtain liblognorm ctx *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_LIBLOGNORM_INIT	runtime/rsyslog.h	/^	RS_RET_ERR_LIBLOGNORM_INIT = -2202,\/**< cannot obtain liblognorm ctx *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_LIBLOGNORM_SAMPDB_LOAD	runtime/rsyslog.h	/^	RS_RET_ERR_LIBLOGNORM_SAMPDB_LOAD = -2203,\/**< liblognorm sampledb load failed *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_LIBNET_INIT	runtime/rsyslog.h	/^	RS_RET_ERR_LIBNET_INIT = -2152, \/**< error initializing libnet, e.g. because not running as root *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_OPEN_KLOG	runtime/rsyslog.h	/^	RS_RET_ERR_OPEN_KLOG = -2145, \/**< error opening or reading the kernel log socket *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_QUEUE_EMERGENCY	runtime/rsyslog.h	/^	RS_RET_ERR_QUEUE_EMERGENCY = -2183, \/**<  some fatal error caused queue to switch to emergency mode *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_RLIM_NOFILE	runtime/rsyslog.h	/^	RS_RET_ERR_RLIM_NOFILE = -2116, \/**< error setting max. nbr open files process limit *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_SCHED_PARAMS	runtime/rsyslog.h	/^	RS_RET_ERR_SCHED_PARAMS = -2205,\/**< there is a problem with configured thread scheduling params *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_UDPSEND	runtime/rsyslog.h	/^	RS_RET_ERR_UDPSEND = -2354,\/**< sending msg via UDP failed *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_WRITE_PIPE	runtime/rsyslog.h	/^	RS_RET_ERR_WRITE_PIPE = -2119, \/**< error writing to pipe *\/$/;"	e	enum:rsRetVal_
RS_RET_ERR_WRKDIR	runtime/rsyslog.h	/^	RS_RET_ERR_WRKDIR = -2181, \/**< problems with the rsyslog working directory *\/$/;"	e	enum:rsRetVal_
RS_RET_FALSE	runtime/rsyslog.h	/^	RS_RET_FALSE = -2,		\/**< to indicate a false state (can be used as FALSE, legacy) *\/$/;"	e	enum:rsRetVal_
RS_RET_FIELD_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_FIELD_NOT_FOUND = 1002, \/**< field() function did not find requested field *\/$/;"	e	enum:rsRetVal_
RS_RET_FILENAME_INVALID	runtime/rsyslog.h	/^	RS_RET_FILENAME_INVALID = -2140, \/**< filename invalid, not found, no access, ... *\/$/;"	e	enum:rsRetVal_
RS_RET_FILE_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_FILE_NOT_FOUND = -2040, \/**< file not found *\/$/;"	e	enum:rsRetVal_
RS_RET_FILE_NOT_SPECIFIED	runtime/rsyslog.h	/^	RS_RET_FILE_NOT_SPECIFIED = -2180, \/**< file name not configured where this was required *\/$/;"	e	enum:rsRetVal_
RS_RET_FILE_NO_STAT	runtime/rsyslog.h	/^	RS_RET_FILE_NO_STAT = -2096, \/**< can not stat() a file *\/$/;"	e	enum:rsRetVal_
RS_RET_FILE_PREFIX_MISSING	runtime/rsyslog.h	/^	RS_RET_FILE_PREFIX_MISSING = -2036, \/**< a required file prefix (parameter?) is missing *\/$/;"	e	enum:rsRetVal_
RS_RET_FILE_TOO_LARGE	runtime/rsyslog.h	/^	RS_RET_FILE_TOO_LARGE = -2097, \/**< a file is larger than permitted *\/$/;"	e	enum:rsRetVal_
RS_RET_FINISHED	runtime/rsyslog.h	/^	RS_RET_FINISHED = -2018, \/**< some opertion is finished, not an error state *\/$/;"	e	enum:rsRetVal_
RS_RET_FOPEN_FAILURE	runtime/rsyslog.h	/^	RS_RET_FOPEN_FAILURE = -2013,	\/**< failure during fopen, for example file not found - see errno *\/$/;"	e	enum:rsRetVal_
RS_RET_FORCE_TERM	runtime/rsyslog.h	/^	RS_RET_FORCE_TERM = -2153,	\/**< thread was forced to terminate by bShallShutdown, a state, not an error *\/$/;"	e	enum:rsRetVal_
RS_RET_FOUND_AT_STRING_END	runtime/rsyslog.h	/^	RS_RET_FOUND_AT_STRING_END = -3002, \/**< some value found, but at the last pos of string *\/$/;"	e	enum:rsRetVal_
RS_RET_FUNC_MISSING_EXPR	runtime/rsyslog.h	/^	RS_RET_FUNC_MISSING_EXPR = -2111, \/**< no expression after comma in function call (rainerscript) *\/$/;"	e	enum:rsRetVal_
RS_RET_FUNC_NO_LPAREN	runtime/rsyslog.h	/^	RS_RET_FUNC_NO_LPAREN = -2110, \/**< left parenthesis missing after function call (rainerscript) *\/$/;"	e	enum:rsRetVal_
RS_RET_GNUTLS_ERR	runtime/rsyslog.h	/^	RS_RET_GNUTLS_ERR = -2078, \/**< (unexpected) error in GnuTLS call *\/$/;"	e	enum:rsRetVal_
RS_RET_GSS_ERR	runtime/rsyslog.h	/^	RS_RET_GSS_ERR = -2101, \/**< generic error occured in GSSAPI subsystem *\/$/;"	e	enum:rsRetVal_
RS_RET_GSS_SENDINIT_ERROR	runtime/rsyslog.h	/^	RS_RET_GSS_SENDINIT_ERROR = -2024, \/**< error during GSS (via TCP) send initialization process *\/$/;"	e	enum:rsRetVal_
RS_RET_GSS_SEND_ERROR	runtime/rsyslog.h	/^	RS_RET_GSS_SEND_ERROR = -2024, \/**< error during GSS (via TCP) send process *\/$/;"	e	enum:rsRetVal_
RS_RET_HOST_NOT_PERMITTED	runtime/rsyslog.h	/^	RS_RET_HOST_NOT_PERMITTED = -2063, \/**< a host is not permitted to perform an action it requested *\/$/;"	e	enum:rsRetVal_
RS_RET_HOST_NOT_SPECIFIED	runtime/rsyslog.h	/^	RS_RET_HOST_NOT_SPECIFIED = -2151, \/**< (target) host was not specified where it was needed *\/$/;"	e	enum:rsRetVal_
RS_RET_IDLE	runtime/rsyslog.h	/^	RS_RET_IDLE = 4,		\/**< operation successful, but callee is idle (e.g. because queue is empty) *\/$/;"	e	enum:rsRetVal_
RS_RET_IMFILE_WILDCARD	runtime/rsyslog.h	/^	RS_RET_IMFILE_WILDCARD = -2420, \/**< imfile file name contains wildcard, which may be problematic *\/$/;"	e	enum:rsRetVal_
RS_RET_INCLUDE_ERRNO	runtime/rsyslog.h	/^	RS_RET_INCLUDE_ERRNO = 1073741824, \/* 2**30  - do NOT use error codes above this! *\/$/;"	e	enum:rsRetVal_
RS_RET_INCOMPATIBLE	runtime/rsyslog.h	/^	RS_RET_INCOMPATIBLE = -2003,	\/**< function not compatible with requested feature *\/$/;"	e	enum:rsRetVal_
RS_RET_INTERFACE_NOT_SUPPORTED	runtime/rsyslog.h	/^	RS_RET_INTERFACE_NOT_SUPPORTED = -2054, \/**< interface not supported *\/$/;"	e	enum:rsRetVal_
RS_RET_INTERNAL_ERROR	runtime/rsyslog.h	/^	RS_RET_INTERNAL_ERROR = -2175, \/**< rsyslogd internal error, unexpected code path reached *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_CMD	runtime/rsyslog.h	/^	RS_RET_INVALID_CMD = -2011,\/**< invalid command *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_CORE_INTERFACE	runtime/rsyslog.h	/^	RS_RET_INVALID_CORE_INTERFACE = -1002,\/**< interface provided by host invalid, can not be used *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_DELIMITER	runtime/rsyslog.h	/^	RS_RET_INVALID_DELIMITER = -2031, \/**< invalid delimiter, e.g. between params *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_DRVR_MODE	runtime/rsyslog.h	/^	RS_RET_INVALID_DRVR_MODE = -2081, \/**< tried to set mode not supported by driver *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_FINGERPRINT	runtime/rsyslog.h	/^	RS_RET_INVALID_FINGERPRINT = -2088, \/**< a fingerprint is not valid for this use case *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_HEADER	runtime/rsyslog.h	/^	RS_RET_INVALID_HEADER = -2029, \/**< invalid header *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_HEADER_RECTYPE	runtime/rsyslog.h	/^	RS_RET_INVALID_HEADER_RECTYPE = -2037, \/**< invalid record type in header or invalid header *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_HEADER_VERS	runtime/rsyslog.h	/^	RS_RET_INVALID_HEADER_VERS = -2030, \/**< invalid header version *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_HEX_DIGIT	runtime/rsyslog.h	/^	RS_RET_INVALID_HEX_DIGIT = -2053, \/**< invalid hex digit during parsing *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_HNAME	runtime/rsyslog.h	/^	RS_RET_INVALID_HNAME = -2075, \/**< remote peer's hostname invalid or unobtainable *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_INT	runtime/rsyslog.h	/^	RS_RET_INVALID_INT = -2010,\/**< invalid integer *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_IP	runtime/rsyslog.h	/^	RS_RET_INVALID_IP = -3007,	\/**< invalid ip found where valid was expected *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_NUMBER	runtime/rsyslog.h	/^	RS_RET_INVALID_NUMBER = -2059, \/**< number invalid during parsing *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_OCTAL_DIGIT	runtime/rsyslog.h	/^	RS_RET_INVALID_OCTAL_DIGIT = -2052, \/**< invalid octal digit during parsing *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_OID	runtime/rsyslog.h	/^	RS_RET_INVALID_OID = -2028, \/**< invalid object ID *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_PARAMS	runtime/rsyslog.h	/^	RS_RET_INVALID_PARAMS = -2016,\/**< supplied parameters are invalid *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_PORT	runtime/rsyslog.h	/^	RS_RET_INVALID_PORT = -2076, \/**< invalid port value *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_PRI	runtime/rsyslog.h	/^	RS_RET_INVALID_PRI = -2073, \/**< PRI value is invalid *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_PROPFRAME	runtime/rsyslog.h	/^	RS_RET_INVALID_PROPFRAME = -2032, \/**< invalid framing in serialized property *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_SOURCE	runtime/rsyslog.h	/^	RS_RET_INVALID_SOURCE = -2019, \/**< source (address) invalid for some reason *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_TRAILER	runtime/rsyslog.h	/^	RS_RET_INVALID_TRAILER = -2034, \/**< invalid trailer *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_VALUE	runtime/rsyslog.h	/^	RS_RET_INVALID_VALUE = -2009,\/**< some value is invalid (e.g. user-supplied data) *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_VAR	runtime/rsyslog.h	/^	RS_RET_INVALID_VAR = -2058, \/**< a var_t or its content is unsuitable, eg. VARTYPE_NONE *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_VMOP	runtime/rsyslog.h	/^	RS_RET_INVALID_VMOP = -2057, \/**< invalid virtual machine instruction *\/$/;"	e	enum:rsRetVal_
RS_RET_INVALID_WILDCARD	runtime/rsyslog.h	/^	RS_RET_INVALID_WILDCARD = -2098, \/**< a wildcard entry is invalid *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_ANON_BITS	runtime/rsyslog.h	/^	RS_RET_INVLD_ANON_BITS = -2312,\/**< mmanon: invalid number of bits to anonymize specified *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_CONF_OBJ	runtime/rsyslog.h	/^	RS_RET_INVLD_CONF_OBJ= -2200,	\/**< invalid config object (e.g. $Begin conf statement) *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_FUNC	runtime/rsyslog.h	/^	RS_RET_INVLD_FUNC = -2113, \/**< invalid function name for function call (rainerscript) *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_INTERFACE_INPUT	runtime/rsyslog.h	/^	RS_RET_INVLD_INTERFACE_INPUT = -2401, \/**< invalid value for "interface.input" parameter (ext progs) *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_MODE	runtime/rsyslog.h	/^	RS_RET_INVLD_MODE = -2311,\/**< invalid mode specified in configuration *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_NBR_ARGUMENTS	runtime/rsyslog.h	/^	RS_RET_INVLD_NBR_ARGUMENTS = -2112, \/**< invalid number of arguments for function call (rainerscript) *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_OMOD	runtime/rsyslog.h	/^	RS_RET_INVLD_OMOD = -2400, \/**< invalid output module, does not provide proper interfaces *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_PROP	runtime/rsyslog.h	/^	RS_RET_INVLD_PROP = -2309,\/**< property name error (unknown name) *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_PROTOCOL	runtime/rsyslog.h	/^	RS_RET_INVLD_PROTOCOL = -2213, \/**< invalid protocol specified in config file *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_SETOP	runtime/rsyslog.h	/^	RS_RET_INVLD_SETOP = -2305, \/**< invalid variable set operation, incompatible type *\/$/;"	e	enum:rsRetVal_
RS_RET_INVLD_TIME	runtime/rsyslog.h	/^	RS_RET_INVLD_TIME = -2107, \/**< invalid timestamp (e.g. could not be parsed) *\/$/;"	e	enum:rsRetVal_
RS_RET_IO_ERROR	runtime/rsyslog.h	/^	RS_RET_IO_ERROR = -2027, \/**< some kind of IO error happened *\/$/;"	e	enum:rsRetVal_
RS_RET_JNAME_INVALID	runtime/rsyslog.h	/^	RS_RET_JNAME_INVALID = -2302, \/**< JSON path is invalid *\/$/;"	e	enum:rsRetVal_
RS_RET_JNAME_NOTFOUND	runtime/rsyslog.h	/^	RS_RET_JNAME_NOTFOUND = -2305, \/**< JSON name not found (does not exist) *\/$/;"	e	enum:rsRetVal_
RS_RET_JNAME_NO_ROOT	runtime/rsyslog.h	/^	RS_RET_JNAME_NO_ROOT = -2301, \/**< root element is missing in JSON path *\/$/;"	e	enum:rsRetVal_
RS_RET_JSON_PARSE_ERR	runtime/rsyslog.h	/^	RS_RET_JSON_PARSE_ERR = -2303, \/**< we had a problem parsing JSON (or extra data) *\/$/;"	e	enum:rsRetVal_
RS_RET_KAFKA_ERROR	runtime/rsyslog.h	/^	RS_RET_KAFKA_ERROR = -2422,\/**< error reported by Apache Kafka subsystem. See message for details. *\/$/;"	e	enum:rsRetVal_
RS_RET_KAFKA_NO_VALID_BROKERS	runtime/rsyslog.h	/^	RS_RET_KAFKA_NO_VALID_BROKERS = -2423,\/**< no valid Kafka brokers configured\/available *\/$/;"	e	enum:rsRetVal_
RS_RET_KAFKA_PRODUCE_ERR	runtime/rsyslog.h	/^	RS_RET_KAFKA_PRODUCE_ERR = -2424,\/**< error during Kafka produce function *\/$/;"	e	enum:rsRetVal_
RS_RET_KSI_ERR	runtime/rsyslog.h	/^	RS_RET_KSI_ERR = -2426,\/**< error in KSI subsystem *\/$/;"	e	enum:rsRetVal_
RS_RET_LAST_ERRREPORT	runtime/rsyslog.h	/^	RS_RET_LAST_ERRREPORT = -2355,\/**< module does not emit more error messages as limit is reached *\/$/;"	e	enum:rsRetVal_
RS_RET_LEGA_ACT_NOT_SUPPORTED	plugins/omkafka/omkafka.c	/^	ABORT_FINALIZE(RS_RET_LEGA_ACT_NOT_SUPPORTED);$/;"	v
RS_RET_LEGA_ACT_NOT_SUPPORTED	runtime/rsyslog.h	/^	RS_RET_LEGA_ACT_NOT_SUPPORTED = -2215, \/**< the module (no longer) supports legacy action syntax *\/$/;"	e	enum:rsRetVal_
RS_RET_LOAD_ERROR	runtime/rsyslog.h	/^	RS_RET_LOAD_ERROR = -1006,\/**< we had an error loading the object\/interface and can not continue *\/$/;"	e	enum:rsRetVal_
RS_RET_MAIL_NO_FROM	runtime/rsyslog.h	/^	RS_RET_MAIL_NO_FROM = -2072, \/**< sender for mail destination is missing *\/$/;"	e	enum:rsRetVal_
RS_RET_MAIL_NO_TO	runtime/rsyslog.h	/^	RS_RET_MAIL_NO_TO = -2071, \/**< recipient for mail destination is missing *\/$/;"	e	enum:rsRetVal_
RS_RET_MALICIOUS_ENTITY	runtime/rsyslog.h	/^	RS_RET_MALICIOUS_ENTITY = -2021, \/**< there is an malicious entity involved *\/$/;"	e	enum:rsRetVal_
RS_RET_MALICIOUS_HNAME	runtime/rsyslog.h	/^	RS_RET_MALICIOUS_HNAME = -2074, \/**< remote peer is trying malicious things with its hostname *\/$/;"	e	enum:rsRetVal_
RS_RET_MAX_LSTN_REACHED	runtime/rsyslog.h	/^	RS_RET_MAX_LSTN_REACHED = -2080, \/**< max nbr of listeners reached, can not create more *\/$/;"	e	enum:rsRetVal_
RS_RET_MAX_OMSR_REACHED	runtime/rsyslog.h	/^	RS_RET_MAX_OMSR_REACHED = -2216, \/**< max nbr of string requests reached, not supported by core *\/$/;"	e	enum:rsRetVal_
RS_RET_MAX_SESS_REACHED	runtime/rsyslog.h	/^	RS_RET_MAX_SESS_REACHED = -2079, \/**< max nbr of sessions reached, can not create more *\/$/;"	e	enum:rsRetVal_
RS_RET_MISSING_CNFPARAMS	runtime/rsyslog.h	/^	RS_RET_MISSING_CNFPARAMS = -2211, \/**< missing configuration parameters *\/$/;"	e	enum:rsRetVal_
RS_RET_MISSING_INTERFACE	runtime/rsyslog.h	/^	RS_RET_MISSING_INTERFACE = -1001,\/**< interface version mismatch, required missing *\/$/;"	e	enum:rsRetVal_
RS_RET_MISSING_TRAIL_QUOTE	runtime/rsyslog.h	/^	RS_RET_MISSING_TRAIL_QUOTE = -3004, \/**< an expected trailing quote is missing *\/$/;"	e	enum:rsRetVal_
RS_RET_MISSING_WHITESPACE	runtime/rsyslog.h	/^	RS_RET_MISSING_WHITESPACE = -2185, \/**<  whitespace is missing in some config construct *\/$/;"	e	enum:rsRetVal_
RS_RET_MODULE_ALREADY_IN_CONF	runtime/rsyslog.h	/^	RS_RET_MODULE_ALREADY_IN_CONF = -2221, \/**< module already in current configuration *\/$/;"	e	enum:rsRetVal_
RS_RET_MODULE_ENTRY_POINT_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_MODULE_ENTRY_POINT_NOT_FOUND = -1004,\/**< a entry point requested from a module was not present in it *\/$/;"	e	enum:rsRetVal_
RS_RET_MODULE_LOAD_ERR	runtime/rsyslog.h	/^	RS_RET_MODULE_LOAD_ERR = -2064, \/**< module could not be loaded *\/$/;"	e	enum:rsRetVal_
RS_RET_MODULE_LOAD_ERR_DLOPEN	runtime/rsyslog.h	/^	RS_RET_MODULE_LOAD_ERR_DLOPEN = -2066, \/**< module could not be loaded - problem in dlopen() *\/$/;"	e	enum:rsRetVal_
RS_RET_MODULE_LOAD_ERR_INIT_FAILED	runtime/rsyslog.h	/^	RS_RET_MODULE_LOAD_ERR_INIT_FAILED = -2068, \/**< module could not be loaded - init() failed *\/$/;"	e	enum:rsRetVal_
RS_RET_MODULE_LOAD_ERR_NO_INIT	runtime/rsyslog.h	/^	RS_RET_MODULE_LOAD_ERR_NO_INIT = -2067, \/**< module could not be loaded - init() missing *\/$/;"	e	enum:rsRetVal_
RS_RET_MODULE_LOAD_ERR_PATHLEN	runtime/rsyslog.h	/^	RS_RET_MODULE_LOAD_ERR_PATHLEN = -2065, \/**< module could not be loaded - path to long *\/$/;"	e	enum:rsRetVal_
RS_RET_MODULE_STILL_REFERENCED	runtime/rsyslog.h	/^	RS_RET_MODULE_STILL_REFERENCED = -1007,\/**< module could not be unloaded because it still is referenced by someone *\/$/;"	e	enum:rsRetVal_
RS_RET_MOD_NO_INPUT_STMT	runtime/rsyslog.h	/^	RS_RET_MOD_NO_INPUT_STMT = -2224, \/**< (input) module does not support input() statement *\/$/;"	e	enum:rsRetVal_
RS_RET_MOD_NO_PARSER_STMT	runtime/rsyslog.h	/^	RS_RET_MOD_NO_PARSER_STMT = -2403, \/**< (parser) module does not support parser() statement *\/$/;"	e	enum:rsRetVal_
RS_RET_MOD_UNKNOWN	runtime/rsyslog.h	/^	RS_RET_MOD_UNKNOWN = -2209,\/**< module (config name) is unknown *\/$/;"	e	enum:rsRetVal_
RS_RET_NAME_INVALID	runtime/rsyslog.h	/^	RS_RET_NAME_INVALID = -2362, \/**< invalid name (in RainerScript) *\/$/;"	e	enum:rsRetVal_
RS_RET_NOENTRY	runtime/rsyslog.h	/^	RS_RET_NOENTRY = -2004,		\/**< do not create an entry for (whatever) - not necessary an error *\/$/;"	e	enum:rsRetVal_
RS_RET_NONE	runtime/rsyslog.h	/^	RS_RET_NONE = -2000,		\/**< some value is not available - not necessarily an error *\/$/;"	e	enum:rsRetVal_
RS_RET_NON_SIZELIMITCMD	runtime/rsyslog.h	/^	RS_RET_NON_SIZELIMITCMD = -2125, \/**< size limit for file defined, but no size limit command given *\/$/;"	e	enum:rsRetVal_
RS_RET_NOT_A_NUMBER	runtime/rsyslog.h	/^	RS_RET_NOT_A_NUMBER = -2060, \/**< e.g. conversion impossible because the string is not a number *\/$/;"	e	enum:rsRetVal_
RS_RET_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_NOT_FOUND = -3003, \/**< some requested value not found *\/$/;"	e	enum:rsRetVal_
RS_RET_NOT_IMPLEMENTED	runtime/rsyslog.h	/^	RS_RET_NOT_IMPLEMENTED = -7,	\/**< implementation is missing (probably internal error or lazyness ;)) *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_ACTIONS	runtime/rsyslog.h	/^	RS_RET_NO_ACTIONS = -2103, \/**< no active actions are configured (no output will be created) *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_CEE_MSG	runtime/rsyslog.h	/^	RS_RET_NO_CEE_MSG = -2225, \/**< the message being processed is NOT CEE-enhanced *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_CURR_RULESET	runtime/rsyslog.h	/^	RS_RET_NO_CURR_RULESET = -2155,\/**< no current ruleset exists (but one is required) *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_DATA	runtime/rsyslog.h	/^	RS_RET_NO_DATA = -2352,\/**< file has no data; more a state than a real error *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_DIGIT	runtime/rsyslog.h	/^	RS_RET_NO_DIGIT = -3005,	\/**< an digit was expected, but none found (mostly parsing) *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_DRIVERNAME	runtime/rsyslog.h	/^	RS_RET_NO_DRIVERNAME = -2049, \/**< driver name missing where one was required *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_DRIVERS	runtime/rsyslog.h	/^	RS_RET_NO_DRIVERS = -2048, \/**< a required drivers missing *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_ERRCODE	runtime/rsyslog.h	/^	RS_RET_NO_ERRCODE = -1,		\/**< RESERVED for NO_ERRCODE errmsg.logError status name *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_FILEPREFIX	runtime/rsyslog.h	/^	RS_RET_NO_FILEPREFIX = -2045, \/**< file prefix is not specified where one is needed *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_FILE_ACCESS	runtime/rsyslog.h	/^	RS_RET_NO_FILE_ACCESS = -2039, \/**< covers EACCES error on file open() *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_IRET	runtime/rsyslog.h	/^	RS_RET_NO_IRET = -8,	\/**< This is a trick for the debuging system - it means no iRet is provided  *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_JSON_PASSING	runtime/rsyslog.h	/^	RS_RET_NO_JSON_PASSING = -2223, \/**< rsyslog core does not support JSON-passing plugin API *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_KERNEL_LOGSRC	runtime/rsyslog.h	/^	RS_RET_NO_KERNEL_LOGSRC = -2022, \/**< no source for kernel logs can be obtained *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_LISTNERS	runtime/rsyslog.h	/^	RS_RET_NO_LISTNERS = -2212, \/**< module loaded, but no listeners are defined *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_LSTN_DEFINED	runtime/rsyslog.h	/^	RS_RET_NO_LSTN_DEFINED = -2172, \/**< no listener defined (e.g. inside an input module) *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_MORE_DATA	runtime/rsyslog.h	/^	RS_RET_NO_MORE_DATA = -3006,	\/**< insufficient data, e.g. end of string during parsing *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_MORE_THREADS	runtime/rsyslog.h	/^	RS_RET_NO_MORE_THREADS = -2044, \/**< no more threads available, not necessarily an error *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_MSG_PASSING	runtime/rsyslog.h	/^	RS_RET_NO_MSG_PASSING = -2156,\/**< output module interface parameter passing mode "MSG" is not available but required *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_PROPLINE	runtime/rsyslog.h	/^	RS_RET_NO_PROPLINE = -2033, \/**< line is not a property line *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_RULEBASE	runtime/rsyslog.h	/^	RS_RET_NO_RULEBASE = -2310,\/**< mmnormalize: rulebase can not be found or otherwise invalid *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_RULESET	runtime/rsyslog.h	/^	RS_RET_NO_RULESET= -2158,\/**< no ruleset name as specified where one was needed *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_RUN	plugins/imtcp/imtcp.c	/^		ABORT_FINALIZE(RS_RET_NO_RUN);$/;"	v
RS_RET_NO_RUN	runtime/rsyslog.h	/^	RS_RET_NO_RUN = 3,		\/**< operation successful, but function does not like to be executed *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_SOCKET	runtime/rsyslog.h	/^	RS_RET_NO_SOCKET = -2069, \/**< socket could not be obtained or was not provided *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_SOCK_CONFIGURED	runtime/rsyslog.h	/^	RS_RET_NO_SOCK_CONFIGURED = -2166, \/**< no socket (name) was configured where one is required *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_SQL_STRING	runtime/rsyslog.h	/^	RS_RET_NO_SQL_STRING = -2005,	\/**< string is not suitable for use as SQL *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_SRCNAME_TPL	runtime/rsyslog.h	/^	RS_RET_NO_SRCNAME_TPL = -2150, \/**< sourcename template was not specified where one was needed (omudpspoof spoof addr) *\/$/;"	e	enum:rsRetVal_
RS_RET_NO_ZIP	runtime/rsyslog.h	/^	RS_RET_NO_ZIP = -2108, \/**< ZIP functionality is not present *\/$/;"	e	enum:rsRetVal_
RS_RET_OBJ_ALREADY_REGISTERED	runtime/rsyslog.h	/^	RS_RET_OBJ_ALREADY_REGISTERED = -2061, \/**< object (name) is already registered *\/$/;"	e	enum:rsRetVal_
RS_RET_OBJ_CREATION_FAILED	runtime/rsyslog.h	/^	RS_RET_OBJ_CREATION_FAILED = - 3008, \/**< the creation of an object failed (no details available) *\/$/;"	e	enum:rsRetVal_
RS_RET_OBJ_NOT_AVAILABLE	runtime/rsyslog.h	/^	RS_RET_OBJ_NOT_AVAILABLE = -1005,\/**< something could not be completed because the required object is not available*\/$/;"	e	enum:rsRetVal_
RS_RET_OBJ_NOT_REGISTERED	runtime/rsyslog.h	/^	RS_RET_OBJ_NOT_REGISTERED = -1009,\/**< tried to unregister an object that is not registered *\/$/;"	e	enum:rsRetVal_
RS_RET_OBJ_REGISTRY_OUT_OF_SPACE	runtime/rsyslog.h	/^	RS_RET_OBJ_REGISTRY_OUT_OF_SPACE = -2062, \/**< the object registry has run out of space *\/$/;"	e	enum:rsRetVal_
RS_RET_OBJ_UNKNOWN	runtime/rsyslog.h	/^	RS_RET_OBJ_UNKNOWN = -1008,\/**< object is unknown where required *\/$/;"	e	enum:rsRetVal_
RS_RET_OK	runtime/rsyslog.h	/^	RS_RET_OK = 0,			\/**< operation successful *\/$/;"	e	enum:rsRetVal_
RS_RET_OK_DELETE_LISTENTRY	runtime/rsyslog.h	/^	RS_RET_OK_DELETE_LISTENTRY = 1,	\/**< operation successful, but callee requested the deletion of an entry (special state) *\/$/;"	e	enum:rsRetVal_
RS_RET_OK_WARN	runtime/rsyslog.h	/^	RS_RET_OK_WARN = -2186, \/**<  config part: everything was OK, but a warning message was emitted *\/$/;"	e	enum:rsRetVal_
RS_RET_OUTDATED_STMT	runtime/rsyslog.h	/^	RS_RET_OUTDATED_STMT = -2184, \/**<  some outdated statement\/functionality is being used in conf file *\/$/;"	e	enum:rsRetVal_
RS_RET_OUT_OF_DESRIPTORS	runtime/rsyslog.h	/^	RS_RET_OUT_OF_DESRIPTORS = -2047, \/**< a descriptor table's space has been exhausted *\/$/;"	e	enum:rsRetVal_
RS_RET_OUT_OF_MEMORY	plugins/omlibdbi/omlibdbi.c	/^	if((pData->drvrName = (uchar*) strdup((char*)cs.drvrName)) == NULL) ABORT_FINALIZE(RS_RET_OUT_OF_MEMORY);$/;"	v
RS_RET_OUT_OF_MEMORY	runtime/rsyslog.h	/^	RS_RET_OUT_OF_MEMORY = -6,	\/**< memory allocation failed *\/$/;"	e	enum:rsRetVal_
RS_RET_OUT_OF_STACKSPACE	runtime/rsyslog.h	/^	RS_RET_OUT_OF_STACKSPACE = -2055, \/**< a stack data structure is exhausted and can not be grown *\/$/;"	e	enum:rsRetVal_
RS_RET_PARAM_ERROR	runtime/rsyslog.h	/^	RS_RET_PARAM_ERROR = -1000,	\/**< invalid parameter in call to function *\/$/;"	e	enum:rsRetVal_
RS_RET_PARAM_NOT_PERMITTED	runtime/rsyslog.h	/^	RS_RET_PARAM_NOT_PERMITTED = -2222, \/**< legacy parameter no longer permitted (usally already set by v2) *\/$/;"	e	enum:rsRetVal_
RS_RET_PARSER_NAME_EXISTS	runtime/rsyslog.h	/^	RS_RET_PARSER_NAME_EXISTS = -2402, \/**< parser name already exists *\/$/;"	e	enum:rsRetVal_
RS_RET_PARSER_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_PARSER_NOT_FOUND = -2159,\/**< parser with the specified name was not found *\/$/;"	e	enum:rsRetVal_
RS_RET_PEER_CLOSED_CONN	runtime/rsyslog.h	/^	RS_RET_PEER_CLOSED_CONN = -2144, \/**< remote peer closed connection (information, no error) *\/$/;"	e	enum:rsRetVal_
RS_RET_PREVIOUS_COMMITTED	runtime/rsyslog.h	/^	RS_RET_PREVIOUS_COMMITTED = -2122, \/**< output plugin status: previous record was committed (an OK state!) *\/$/;"	e	enum:rsRetVal_
RS_RET_PROVIDED_BUFFER_TOO_SMALL	runtime/rsyslog.h	/^	RS_RET_PROVIDED_BUFFER_TOO_SMALL = -50,\/**< the caller provided a buffer, but the called function sees the size of this buffer is too small - operation not carried out *\/$/;"	e	enum:rsRetVal_
RS_RET_QSIZE_ZERO	runtime/rsyslog.h	/^	RS_RET_QSIZE_ZERO = -2042, \/**< queue size is zero where this is not supported *\/$/;"	e	enum:rsRetVal_
RS_RET_QTYPE_MISMATCH	runtime/rsyslog.h	/^	RS_RET_QTYPE_MISMATCH = -2038, \/**< different qType when reading back a property type *\/$/;"	e	enum:rsRetVal_
RS_RET_QUEUE_CRY_DISK_ONLY	runtime/rsyslog.h	/^	RS_RET_QUEUE_CRY_DISK_ONLY = -2351,\/**< crypto provider only supported for disk-associated queues *\/$/;"	e	enum:rsRetVal_
RS_RET_QUEUE_DISK_NO_FN	runtime/rsyslog.h	/^	RS_RET_QUEUE_DISK_NO_FN = -2328,\/**< disk queue configured, but filename not set *\/$/;"	e	enum:rsRetVal_
RS_RET_QUEUE_FULL	runtime/rsyslog.h	/^	RS_RET_QUEUE_FULL = -2105, \/**< queue is full, operation could not be completed *\/$/;"	e	enum:rsRetVal_
RS_RET_RATE_LIMITED	runtime/rsyslog.h	/^	RS_RET_RATE_LIMITED = -2177, \/**< some messages discarded due to exceeding a rate limit *\/$/;"	e	enum:rsRetVal_
RS_RET_RCV_ERR	runtime/rsyslog.h	/^	RS_RET_RCV_ERR = -2165,		\/**< error occured during socket rcv operation *\/$/;"	e	enum:rsRetVal_
RS_RET_READ_ERR	runtime/rsyslog.h	/^	RS_RET_READ_ERR = -2356,\/**< read error occured (file i\/o) *\/$/;"	e	enum:rsRetVal_
RS_RET_RELP_AUTH_FAIL	runtime/rsyslog.h	/^	RS_RET_RELP_AUTH_FAIL = -2353,\/**< RELP peer authentication failed *\/$/;"	e	enum:rsRetVal_
RS_RET_RELP_ERR	runtime/rsyslog.h	/^	RS_RET_RELP_ERR = -2291,	\/**<< error in RELP processing *\/$/;"	e	enum:rsRetVal_
RS_RET_RELP_NO_TLS	runtime/rsyslog.h	/^	RS_RET_RELP_NO_TLS = -2360,\/**< librel does not support TLS (but TLS requested) *\/$/;"	e	enum:rsRetVal_
RS_RET_RELP_NO_TLS_AUTH	runtime/rsyslog.h	/^	RS_RET_RELP_NO_TLS_AUTH = -2421,\/**< librel does not support TLS authentication (but was requested) *\/$/;"	e	enum:rsRetVal_
RS_RET_REPLCHAR_IGNORED	runtime/rsyslog.h	/^	RS_RET_REPLCHAR_IGNORED = -2313,\/**< mmanon: replacementChar parameter is ignored *\/$/;"	e	enum:rsRetVal_
RS_RET_RESUMED	runtime/rsyslog.h	/^	RS_RET_RESUMED = -2359,\/**< status: action was resumed (used for reporting) *\/$/;"	e	enum:rsRetVal_
RS_RET_RETRY	runtime/rsyslog.h	/^	RS_RET_RETRY = -2100, \/**< call should be retried (e.g. EGAIN on recv) *\/$/;"	e	enum:rsRetVal_
RS_RET_RQD_TPLOPT_MISSING	runtime/rsyslog.h	/^	RS_RET_RQD_TPLOPT_MISSING = -2008,\/**< a required template option is missing *\/$/;"	e	enum:rsRetVal_
RS_RET_RSCORE_TOO_OLD	runtime/rsyslog.h	/^	RS_RET_RSCORE_TOO_OLD = -2120, \/**< rsyslog core is too old for ... (eg this plugin) *\/$/;"	e	enum:rsRetVal_
RS_RET_RULESET_EXISTS	runtime/rsyslog.h	/^	RS_RET_RULESET_EXISTS = -2306,\/**< ruleset already exists *\/$/;"	e	enum:rsRetVal_
RS_RET_RULESET_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_RULESET_NOT_FOUND = -2157,\/**< a required ruleset could not be found *\/$/;"	e	enum:rsRetVal_
RS_RET_RULES_QUEUE_EXISTS	runtime/rsyslog.h	/^	RS_RET_RULES_QUEUE_EXISTS = -2154,\/**< we were instructed to create a new ruleset queue, but one already exists *\/$/;"	e	enum:rsRetVal_
RS_RET_SIGPROV_ERR	runtime/rsyslog.h	/^	RS_RET_SIGPROV_ERR = -2320,\/**< error in signature provider *\/$/;"	e	enum:rsRetVal_
RS_RET_SIZELIMITCMD_DIDNT_RESOLVE	runtime/rsyslog.h	/^	RS_RET_SIZELIMITCMD_DIDNT_RESOLVE = -2126, \/**< size limit command did not resolve situation *\/$/;"	e	enum:rsRetVal_
RS_RET_SMTP_ERROR	runtime/rsyslog.h	/^	RS_RET_SMTP_ERROR = -2070, \/**< error during SMTP transation *\/$/;"	e	enum:rsRetVal_
RS_RET_SOCKNAME_MISSING	runtime/rsyslog.h	/^	RS_RET_SOCKNAME_MISSING = -2206,\/**< no socket name configured where one is required *\/$/;"	e	enum:rsRetVal_
RS_RET_STACK_EMPTY	runtime/rsyslog.h	/^	RS_RET_STACK_EMPTY = -2056, \/**< a pop was requested on a stack, but the stack was already empty *\/$/;"	e	enum:rsRetVal_
RS_RET_STATEFILE_WRONG_FNAME	runtime/rsyslog.h	/^	RS_RET_STATEFILE_WRONG_FNAME  = -2361,\/**< state file is for wrong file *\/$/;"	e	enum:rsRetVal_
RS_RET_STREAM_DISABLED	runtime/rsyslog.h	/^	RS_RET_STREAM_DISABLED = -2127, \/**< a file has been disabled (e.g. by size limit restriction) *\/$/;"	e	enum:rsRetVal_
RS_RET_STRUC_DATA_INVLD	runtime/rsyslog.h	/^	RS_RET_STRUC_DATA_INVLD = -2349,\/**< structured data is malformed *\/$/;"	e	enum:rsRetVal_
RS_RET_SUSPENDED	runtime/rsyslog.h	/^	RS_RET_SUSPENDED = -2007,  \/**< something was suspended, not neccesarily an error *\/$/;"	e	enum:rsRetVal_
RS_RET_SYNTAX_ERROR	runtime/rsyslog.h	/^	RS_RET_SYNTAX_ERROR = -2051, \/**< syntax error, eg. during parsing *\/$/;"	e	enum:rsRetVal_
RS_RET_SYSVAR_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_SYSVAR_NOT_FOUND = 1001, \/**< system variable could not be found (maybe misspelled) *\/$/;"	e	enum:rsRetVal_
RS_RET_SYS_ERR	runtime/rsyslog.h	/^	RS_RET_SYS_ERR = -2095, \/**< system error occured (e.g. time() returned -1, quite unexpected) *\/$/;"	e	enum:rsRetVal_
RS_RET_TCP_SEND_ERROR	runtime/rsyslog.h	/^	RS_RET_TCP_SEND_ERROR = -2023, \/**< error during TCP send process *\/$/;"	e	enum:rsRetVal_
RS_RET_TCP_SOCKCREATE_ERR	runtime/rsyslog.h	/^	RS_RET_TCP_SOCKCREATE_ERR = -2025, \/**< error during creation of TCP socket *\/$/;"	e	enum:rsRetVal_
RS_RET_TERMINATE_NOW	runtime/rsyslog.h	/^	RS_RET_TERMINATE_NOW = 2,	\/**< operation successful, function is requested to terminate (mostly used with threads) *\/$/;"	e	enum:rsRetVal_
RS_RET_TERMINATE_WHEN_IDLE	runtime/rsyslog.h	/^	RS_RET_TERMINATE_WHEN_IDLE = 5	\/**< operation successful, function is requested to terminate when idle *\/$/;"	e	enum:rsRetVal_
RS_RET_TIMED_OUT	runtime/rsyslog.h	/^	RS_RET_TIMED_OUT = -2041, \/**< timeout occured (not necessarily an error) *\/$/;"	e	enum:rsRetVal_
RS_RET_TIMEOUT	runtime/rsyslog.h	/^	RS_RET_TIMEOUT = -2164,		\/**< timeout occured during operation *\/$/;"	e	enum:rsRetVal_
RS_RET_TLS_CERT_ERR	runtime/rsyslog.h	/^	RS_RET_TLS_CERT_ERR = -2084, \/**< generic TLS certificate error *\/$/;"	e	enum:rsRetVal_
RS_RET_TLS_HANDSHAKE_ERR	runtime/rsyslog.h	/^	RS_RET_TLS_HANDSHAKE_ERR = -2083, \/**< TLS handshake failed *\/$/;"	e	enum:rsRetVal_
RS_RET_TLS_NO_CERT	runtime/rsyslog.h	/^	RS_RET_TLS_NO_CERT = -2085, \/**< no TLS certificate available where one was expected *\/$/;"	e	enum:rsRetVal_
RS_RET_TRUE	runtime/rsyslog.h	/^	RS_RET_TRUE = -3,		\/**< to indicate a true state (can be used as TRUE, legacy) *\/$/;"	e	enum:rsRetVal_
RS_RET_UID_MISSING	runtime/rsyslog.h	/^	RS_RET_UID_MISSING = -2217,	\/**< a user id is missing (but e.g. a password provided) *\/$/;"	e	enum:rsRetVal_
RS_RET_UNKNW_FUNC	runtime/rsyslog.h	/^	RS_RET_UNKNW_FUNC = -2115, \/**< unkown function name (rainerscript) *\/$/;"	e	enum:rsRetVal_
RS_RET_VALIDATION_RUN	runtime/rsyslog.h	/^	RS_RET_VALIDATION_RUN = -9,	\/**< indicates a (config) validation run, processing not carried out *\/$/;"	e	enum:rsRetVal_
RS_RET_VALUE_NOT_IN_THIS_MODE	runtime/rsyslog.h	/^	RS_RET_VALUE_NOT_IN_THIS_MODE = -2087, \/**< a provided value is invalid for the curret mode *\/$/;"	e	enum:rsRetVal_
RS_RET_VALUE_NOT_SUPPORTED	runtime/rsyslog.h	/^	RS_RET_VALUE_NOT_SUPPORTED = -2086, \/**< a provided value is not supported *\/$/;"	e	enum:rsRetVal_
RS_RET_VALUE_TOO_LOW	runtime/rsyslog.h	/^	RS_RET_VALUE_TOO_LOW = -2035, \/**< a provided value is too low *\/$/;"	e	enum:rsRetVal_
RS_RET_VAL_OUT_OF_RANGE	runtime/rsyslog.h	/^	RS_RET_VAL_OUT_OF_RANGE = -2012, \/**< value out of range *\/$/;"	e	enum:rsRetVal_
RS_RET_VAR_NOT_FOUND	runtime/rsyslog.h	/^	RS_RET_VAR_NOT_FOUND = -2142, \/**< variable not found *\/$/;"	e	enum:rsRetVal_
RS_RET_WRN_WRKDIR	runtime/rsyslog.h	/^	RS_RET_WRN_WRKDIR = -2182, \/**< correctable problems with the rsyslog working directory *\/$/;"	e	enum:rsRetVal_
RS_RET_ZLIB_ERR	runtime/rsyslog.h	/^	RS_RET_ZLIB_ERR = -2141, \/**< error during zlib call *\/$/;"	e	enum:rsRetVal_
RS_STRINGBUF_ALLOC_INCREMENT	runtime/rsyslog.h	40;"	d
RS_TRUNCAT_TOO_LARGE	runtime/rsyslog.h	/^	RS_TRUNCAT_TOO_LARGE = -3001, \/**< truncation operation where too many chars should be truncated *\/$/;"	e	enum:rsRetVal_
RS_json_object_object_get_ex	runtime/rsyslog.h	610;"	d
RS_json_object_object_get_ex	runtime/rsyslog.h	613;"	d
RS_json_object_to_json_string_ext	runtime/rsyslog.h	623;"	d
RS_json_object_to_json_string_ext	runtime/rsyslog.h	626;"	d
RUNLOG	runtime/debug.h	136;"	d
RUNLOG	runtime/debug.h	142;"	d
RUNLOG_STR	runtime/debug.h	139;"	d
RUNLOG_STR	runtime/debug.h	144;"	d
RUNLOG_VAR	runtime/debug.h	137;"	d
RUNLOG_VAR	runtime/debug.h	143;"	d
RateLimiter	runtime/queue.c	/^RateLimiter(qqueue_t *pThis)$/;"	f	file:
Rcv	runtime/netstrm.c	/^Rcv(netstrm_t *pThis, uchar *pBuf, ssize_t *pLenBuf)$/;"	f	file:
Rcv	runtime/netstrm.h	/^	rsRetVal (*Rcv)(netstrm_t *pThis, uchar *pRcvBuf, ssize_t *pLenBuf);$/;"	v
Rcv	runtime/nsd.h	/^	rsRetVal (*Rcv)(nsd_t *pThis, uchar *pRcvBuf, ssize_t *pLenBuf);$/;"	v
Rcv	runtime/nsd_gtls.c	/^Rcv(nsd_t *pNsd, uchar *pBuf, ssize_t *pLenBuf)$/;"	f	file:
Rcv	runtime/nsd_ptcp.c	/^Rcv(nsd_t *pNsd, uchar *pRcvBuf, ssize_t *pLenBuf)$/;"	f	file:
RcvBuf	plugins/ommail/ommail.c	/^			char RcvBuf[1024]; \/* buffer for receiving server responses *\/$/;"	m	struct:wrkrInstanceData::__anon22::__anon23	file:
ReadChar	runtime/stream.h	/^	rsRetVal (*ReadChar)(strm_t *pThis, uchar *pC);$/;"	v
ReadLine	runtime/stream.h	/^	rsRetVal (*ReadLine)(strm_t *pThis, cstr_t **ppCStr, uint8_t mode, sbool bEscapeLF);$/;"	v
RecordBegin	runtime/stream.h	/^	rsRetVal (*RecordBegin)(strm_t *pThis);$/;"	v
RecordEnd	runtime/stream.h	/^	rsRetVal (*RecordEnd)(strm_t *pThis);$/;"	v
RegisterObj	runtime/obj.c	/^RegisterObj(uchar *pszObjName, objInfo_t *pInfo)$/;"	f	file:
RegisterObj	runtime/obj.h	/^	rsRetVal (*RegisterObj)(uchar *pszObjName, objInfo_t *pInfo);$/;"	v
Release	runtime/modules.c	/^Release(char *srcFile, modInfo_t **ppThis)$/;"	f	file:
Release	runtime/modules.h	/^	rsRetVal (*Release)(char *srcFile, modInfo_t **ppThis);	\/**< release a module (ref counting) *\/$/;"	v
ReleaseObj	runtime/obj.c	/^ReleaseObj(char *srcFile, uchar *pObjName, uchar *pObjFile, interface_t *pIf)$/;"	f	file:
ReleaseObj	runtime/obj.h	/^	rsRetVal (*ReleaseObj)(char *srcFile, uchar *pObjName, uchar *pObjFile, interface_t *pIf);$/;"	v
Rsyslog::OPB	tools/recover_qi.pl	/^package Rsyslog::OPB;$/;"	p
Rsyslog::Obj	tools/recover_qi.pl	/^package Rsyslog::Obj;$/;"	p
Rsyslog::Serializable	tools/recover_qi.pl	/^package Rsyslog::Serializable;$/;"	p
Run	runtime/strmsrv.c	/^Run(strmsrv_t *pThis)$/;"	f	file:
Run	runtime/strmsrv.h	/^	rsRetVal (*Run)(strmsrv_t *pThis);$/;"	v
Run	runtime/tcpsrv.c	/^Run(tcpsrv_t *pThis)$/;"	f	file:
Run	runtime/tcpsrv.h	/^	rsRetVal (*Run)(tcpsrv_t *pThis);$/;"	v
RunCancelCleanup	runtime/strmsrv.c	/^RunCancelCleanup(void *arg)$/;"	f	file:
RunCancelCleanup	runtime/tcpsrv.c	/^RunCancelCleanup(void *arg)$/;"	f	file:
RunSelect	runtime/tcpsrv.c	/^RunSelect(tcpsrv_t *pThis, nsd_epworkset_t workset[], size_t sizeWorkset)$/;"	f	file:
SALEN	runtime/net.h	/^static inline size_t SALEN(struct sockaddr *sa) {$/;"	f
SALEN	runtime/net.h	76;"	d
SCHED_PRIO_UNSET	plugins/imudp/imudp.c	99;"	d	file:
SD_ALERT	runtime/sd-daemon.h	86;"	d
SD_CRIT	runtime/sd-daemon.h	87;"	d
SD_DEBUG	runtime/sd-daemon.h	92;"	d
SD_EMERG	runtime/sd-daemon.h	85;"	d
SD_ERR	runtime/sd-daemon.h	88;"	d
SD_INFO	runtime/sd-daemon.h	91;"	d
SD_LISTEN_FDS_START	runtime/sd-daemon.h	95;"	d
SD_NOTICE	runtime/sd-daemon.h	90;"	d
SD_WARNING	runtime/sd-daemon.h	89;"	d
SEVERITY_COUNT	contrib/mmcount/mmcount.c	44;"	d	file:
SIGID_RFC3161	runtime/librsgt_common.h	54;"	d
SIMPLE_MODE	plugins/mmanon/mmanon.c	64;"	d	file:
SIMPLE_MODE	plugins/mmfields/mmfields.c	52;"	d	file:
SIMP_PROP	runtime/glbl.c	198;"	d	file:
SIMP_PROP	runtime/glbl.c	235;"	d	file:
SIMP_PROP	runtime/glbl.c	719;"	d	file:
SIMP_PROP	runtime/glbl.c	745;"	d	file:
SIMP_PROP	runtime/glbl.h	103;"	d
SIMP_PROP	runtime/glbl.h	52;"	d
SIMP_PROP_GET	runtime/glbl.c	207;"	d	file:
SIMP_PROP_GET	runtime/glbl.c	237;"	d	file:
SIMP_PROP_SET	runtime/glbl.c	201;"	d	file:
SIMP_PROP_SET	runtime/glbl.c	236;"	d	file:
SIN	runtime/net.c	508;"	d	file:
SIN6	runtime/net.c	509;"	d	file:
SIZE_FUNCDB_MUTEX_TABLE	runtime/debug.c	181;"	d	file:
SKIP_NOTHING	grammar/rainerscript.c	/^int SKIP_NOTHING = 0x0;$/;"	v
SKIP_STRING	grammar/rainerscript.c	/^int SKIP_STRING = 0x1;$/;"	v
SMFILE_H_INCLUDED	tools/smfile.h	25;"	d
SMFWD_H_INCLUDED	tools/smfwd.h	24;"	d
SMTRADFILE_H_INCLUDED	tools/smtradfile.h	25;"	d
SMTRADFWD_H_INCLUDED	tools/smtradfwd.h	24;"	d
SO_BSDCOMPAT	runtime/net.c	1073;"	d	file:
SO_BSDCOMPAT	runtime/net.h	58;"	d
SQL_ESCAPE	template.h	50;"	d
STATE_FIELD_START	contrib/pmpanngfw/pmpanngfw.c	96;"	d	file:
STATE_IN_FIELD	contrib/pmpanngfw/pmpanngfw.c	97;"	d	file:
STATE_IN_QUOTE	contrib/pmpanngfw/pmpanngfw.c	98;"	d	file:
STATE_IN_QUOTE_QUOTE	contrib/pmpanngfw/pmpanngfw.c	99;"	d	file:
STATSCOUNTER_DEC	runtime/statsobj.h	155;"	d
STATSCOUNTER_DEF	runtime/statsobj.h	143;"	d
STATSCOUNTER_INC	runtime/statsobj.h	151;"	d
STATSCOUNTER_INIT	runtime/statsobj.h	147;"	d
STATSCOUNTER_SETMAX_NOMUT	runtime/statsobj.h	163;"	d
STDSQL_ESCAPE	template.h	51;"	d
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   NULL, &cs.bKeepAlive, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   NULL, &cs.bSuppOctetFram, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   NULL, &cs.iAddtlFrameDelim, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   NULL, &cs.iKeepAliveIntvl, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   NULL, &cs.iKeepAliveProbes, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   NULL, &cs.iKeepAliveTime, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   NULL, &cs.wrkrMax, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   eCmdHdlrBinary, NULL, &cs.bEmitMsgOnClose, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   eCmdHdlrGetWord, NULL, &cs.lstnIP, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   eCmdHdlrGetWord, NULL, &cs.pszBindRuleset, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imptcp/imptcp.c	/^				   eCmdHdlrGetWord, NULL, &cs.pszInputName, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^				   NULL, &cs.pszBindRuleset, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^				   NULL, &cs.pszInputName, STD_LOADABLE_MODULE_ID));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bDisableLFDelim, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bEmitMsgOnClose, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bKeepAlive, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bSuppOctetFram, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bUseFlowControl, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iAddtlFrameDelim, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iKeepAliveIntvl, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iKeepAliveProbes, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iKeepAliveTime, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iStrmDrvrMode, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iTCPLstnMax, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iTCPSessMax, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	plugins/imtcp/imtcp.c	/^			   NULL, &cs.pszStrmDrvrAuthMode, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
STD_LOADABLE_MODULE_ID	runtime/module-template.h	98;"	d
STREAMMMODE_INVALID	runtime/stream.h	/^	STREAMMMODE_INVALID = 0,$/;"	e	enum:__anon66
STREAMMODE_READ	runtime/stream.h	/^	STREAMMODE_READ = 1,$/;"	e	enum:__anon66
STREAMMODE_WRITE	runtime/stream.h	/^	STREAMMODE_WRITE = 2,$/;"	e	enum:__anon66
STREAMMODE_WRITE_APPEND	runtime/stream.h	/^	STREAMMODE_WRITE_APPEND = 4$/;"	e	enum:__anon66
STREAMMODE_WRITE_TRUNC	runtime/stream.h	/^	STREAMMODE_WRITE_TRUNC = 3,$/;"	e	enum:__anon66
STREAMTYPE_FILE_CIRCULAR	runtime/stream.h	/^	STREAMTYPE_FILE_CIRCULAR = 1,	\/**< circular files *\/$/;"	e	enum:__anon65
STREAMTYPE_FILE_MONITOR	runtime/stream.h	/^	STREAMTYPE_FILE_MONITOR = 2,	\/**< monitor a (third-party) file *\/$/;"	e	enum:__anon65
STREAMTYPE_FILE_SINGLE	runtime/stream.h	/^	STREAMTYPE_FILE_SINGLE = 0,	\/**< read a single file *\/$/;"	e	enum:__anon65
STREAMTYPE_NAMED_PIPE	runtime/stream.h	/^	STREAMTYPE_NAMED_PIPE = 3	\/**< file is a named pipe (so far, tested for output only) *\/$/;"	e	enum:__anon65
STREAM_ASYNC_NUMBUFS	runtime/stream.h	93;"	d
STREAM_H_INCLUDED	runtime/stream.h	66;"	d
STRGEN_NAME	runtime/module-template.h	1186;"	d
STRMLSTN_MAX_DEFAULT	runtime/strmsrv.c	81;"	d	file:
STRMSESS_MAX_DEFAULT	runtime/strmsrv.c	80;"	d	file:
STRMSessGetNxtSess	runtime/strmsrv.c	/^STRMSessGetNxtSess(strmsrv_t *pThis, int iCurr)$/;"	f	file:
STRMSessTblFindFreeSpot	runtime/strmsrv.c	/^STRMSessTblFindFreeSpot(strmsrv_t *pThis)$/;"	f	file:
STRMSessTblInit	runtime/strmsrv.c	/^STRMSessTblInit(strmsrv_t *pThis)$/;"	f	file:
STRUCTUTMP	tools/omusrmsg.c	41;"	d	file:
STRUCTUTMP	tools/omusrmsg.c	45;"	d	file:
SUN_LEN	plugins/imuxsock/imuxsock.c	90;"	d	file:
SYNCCALL	runtime/stream.c	1329;"	d	file:
SYNCCALL	runtime/stream.c	1331;"	d	file:
SYNCCALL	runtime/stream.c	1333;"	d	file:
SYNCCALL	runtime/stream.c	1362;"	d	file:
SYSLOGD_H_INCLUDED	tools/syslogd.h	21;"	d
SYSLOGD_TYPES_INCLUDED	runtime/syslogd-types.h	26;"	d
SYSLOG_NAMES	runtime/msg.c	34;"	d	file:
SYSTEMD_JOURNAL	plugins/imuxsock/imuxsock.c	73;"	d	file:
SYSTEMD_PATH_LOG	plugins/imuxsock/imuxsock.c	76;"	d	file:
S_ACT	grammar/rainerscript.h	150;"	d
S_CALL	grammar/rainerscript.h	154;"	d
S_FOREACH	grammar/rainerscript.h	155;"	d
S_IF	grammar/rainerscript.h	149;"	d
S_NOP	grammar/rainerscript.h	151;"	d
S_PRIFILT	grammar/rainerscript.h	147;"	d
S_PROPFILT	grammar/rainerscript.h	148;"	d
S_SET	grammar/rainerscript.h	152;"	d
S_STOP	grammar/rainerscript.h	146;"	d
S_UNSET	grammar/rainerscript.h	153;"	d
SanitizeMsg	runtime/parser.c	/^SanitizeMsg(msg_t *pMsg)$/;"	f	file:
SanitizeMsg	runtime/parser.h	/^	rsRetVal (*SanitizeMsg)(msg_t *pMsg);$/;"	v
SeekCurrOffs	runtime/stream.h	/^	rsRetVal (*SeekCurrOffs)(strm_t *pThis);$/;"	v
Select	runtime/nsd.h	/^	rsRetVal (*Select)(nsdsel_t *pNsdsel, int *piNumReady);$/;"	v
Select	runtime/nsdsel_gtls.c	/^Select(nsdsel_t *pNsdsel, int *piNumReady)$/;"	f	file:
Select	runtime/nsdsel_ptcp.c	/^Select(nsdsel_t *pNsdsel, int *piNumReady)$/;"	f	file:
Send	plugins/ommail/ommail.c	/^Send(int sock, char *msg, size_t len)$/;"	f	file:
Send	runtime/netstrm.c	/^Send(netstrm_t *pThis, uchar *pBuf, ssize_t *pLenBuf)$/;"	f	file:
Send	runtime/netstrm.h	/^	rsRetVal (*Send)(netstrm_t *pThis, uchar *pBuf, ssize_t *pLenBuf);$/;"	v
Send	runtime/nsd.h	/^	rsRetVal (*Send)(nsd_t *pThis, uchar *pBuf, ssize_t *pLenBuf);$/;"	v
Send	runtime/nsd_gtls.c	/^Send(nsd_t *pNsd, uchar *pBuf, ssize_t *pLenBuf)$/;"	f	file:
Send	runtime/nsd_ptcp.c	/^Send(nsd_t *pNsd, uchar *pBuf, ssize_t *pLenBuf)$/;"	f	file:
Send	runtime/tcpclt.c	/^Send(tcpclt_t *pThis, void *pData, char *msg, size_t len)$/;"	f	file:
Send	runtime/tcpclt.h	/^	int (*Send)(tcpclt_t *pThis, void*pData, char*msg, size_t len);$/;"	v
Serialize	runtime/stream.h	/^	rsRetVal (*Serialize)(strm_t *pThis, strm_t *pStrm);$/;"	v
SerializeProp	runtime/obj.c	/^SerializeProp(strm_t *pStrm, uchar *pszPropName, propType_t propType, void *pUsr)$/;"	f	file:
SerializeProp	runtime/obj.h	/^	rsRetVal (*SerializeProp)(strm_t *pStrm, uchar *pszPropName, propType_t propType, void *pUsr);$/;"	v
SessAccept	runtime/strmsrv.c	/^SessAccept(strmsrv_t *pThis, strmLstnPortList_t *pLstnInfo, strms_sess_t **ppSess, netstrm_t *pStrm)$/;"	f	file:
SessAccept	runtime/tcpsrv.c	/^SessAccept(tcpsrv_t *pThis, tcpLstnPortList_t *pLstnInfo, tcps_sess_t **ppSess, netstrm_t *pStrm)$/;"	f	file:
SetAddtlFrameDelim	runtime/strmsrv.h	/^	rsRetVal (*SetAddtlFrameDelim)(strmsrv_t*, int);$/;"	v
SetAddtlFrameDelim	runtime/tcpsrv.c	/^SetAddtlFrameDelim(tcpsrv_t *pThis, int iDelim)$/;"	f	file:
SetAddtlFrameDelim	runtime/tcpsrv.h	/^	rsRetVal (*SetAddtlFrameDelim)(tcpsrv_t*, int);$/;"	v
SetAuthMode	runtime/nsd.h	/^	rsRetVal (*SetAuthMode)(nsd_t *pThis, uchar*); \/* sets a driver specific mode - see driver doc for details *\/$/;"	v
SetAuthMode	runtime/nsd_gtls.c	/^SetAuthMode(nsd_t *pNsd, uchar *mode)$/;"	f	file:
SetAuthMode	runtime/nsd_ptcp.c	/^SetAuthMode(nsd_t __attribute__((unused)) *pNsd, uchar *mode)$/;"	f	file:
SetCBIsPermittedHost	runtime/strmsrv.c	/^SetCBIsPermittedHost(strmsrv_t *pThis, int (*pCB)(struct sockaddr *addr, char *fromHostFQDN, void*, void*))$/;"	f	file:
SetCBIsPermittedHost	runtime/strmsrv.h	/^	rsRetVal (*SetCBIsPermittedHost)(strmsrv_t*, int (*) (struct sockaddr *addr, char*, void*, void*));$/;"	v
SetCBIsPermittedHost	runtime/tcpsrv.c	/^SetCBIsPermittedHost(tcpsrv_t *pThis, int (*pCB)(struct sockaddr *addr, char *fromHostFQDN, void*, void*))$/;"	f	file:
SetCBIsPermittedHost	runtime/tcpsrv.h	/^	rsRetVal (*SetCBIsPermittedHost)(tcpsrv_t*, int (*) (struct sockaddr *addr, char*, void*, void*));$/;"	v
SetCBOnDestruct	runtime/strmsrv.c	/^SetCBOnDestruct(strmsrv_t *pThis, rsRetVal (*pCB)(void*))$/;"	f	file:
SetCBOnDestruct	runtime/strmsrv.h	/^	rsRetVal (*SetCBOnDestruct)(strmsrv_t*, rsRetVal (*) (void*));$/;"	v
SetCBOnDestruct	runtime/tcpsrv.c	/^SetCBOnDestruct(tcpsrv_t *pThis, rsRetVal (*pCB)(void*))$/;"	f	file:
SetCBOnDestruct	runtime/tcpsrv.h	/^	rsRetVal (*SetCBOnDestruct)(tcpsrv_t*, rsRetVal (*) (void*));$/;"	v
SetCBOnErrClose	runtime/strmsrv.c	/^SetCBOnErrClose(strmsrv_t *pThis, rsRetVal (*pCB)(strms_sess_t*))$/;"	f	file:
SetCBOnErrClose	runtime/strmsrv.h	/^	rsRetVal (*SetCBOnErrClose)(strmsrv_t*, rsRetVal (*) (strms_sess_t*));$/;"	v
SetCBOnErrClose	runtime/tcpsrv.c	/^SetCBOnErrClose(tcpsrv_t *pThis, rsRetVal (*pCB)(tcps_sess_t*))$/;"	f	file:
SetCBOnErrClose	runtime/tcpsrv.h	/^	rsRetVal (*SetCBOnErrClose)(tcpsrv_t*, rsRetVal (*) (tcps_sess_t*));$/;"	v
SetCBOnListenDeinit	runtime/tcpsrv.c	/^SetCBOnListenDeinit(tcpsrv_t *pThis, int (*pCB)(void*))$/;"	f	file:
SetCBOnListenDeinit	runtime/tcpsrv.h	/^	rsRetVal (*SetCBOnListenDeinit)(tcpsrv_t*, rsRetVal (*)(void*));$/;"	v
SetCBOnRegularClose	runtime/strmsrv.c	/^SetCBOnRegularClose(strmsrv_t *pThis, rsRetVal (*pCB)(strms_sess_t*))$/;"	f	file:
SetCBOnRegularClose	runtime/strmsrv.h	/^	rsRetVal (*SetCBOnRegularClose)(strmsrv_t*, rsRetVal (*) (strms_sess_t*));$/;"	v
SetCBOnRegularClose	runtime/tcpsrv.c	/^SetCBOnRegularClose(tcpsrv_t *pThis, rsRetVal (*pCB)(tcps_sess_t*))$/;"	f	file:
SetCBOnRegularClose	runtime/tcpsrv.h	/^	rsRetVal (*SetCBOnRegularClose)(tcpsrv_t*, rsRetVal (*) (tcps_sess_t*));$/;"	v
SetCBOnSessAccept	runtime/strmsrv.c	/^SetCBOnSessAccept(strmsrv_t *pThis, rsRetVal (*pCB)(strmsrv_t*, strms_sess_t*))$/;"	f	file:
SetCBOnSessAccept	runtime/strmsrv.h	/^	rsRetVal (*SetCBOnSessAccept)(strmsrv_t*, rsRetVal (*) (strmsrv_t*, strms_sess_t*));$/;"	v
SetCBOnSessAccept	runtime/tcpsrv.c	/^SetCBOnSessAccept(tcpsrv_t *pThis, rsRetVal (*pCB)(tcpsrv_t*, tcps_sess_t*))$/;"	f	file:
SetCBOnSessAccept	runtime/tcpsrv.h	/^	rsRetVal (*SetCBOnSessAccept)(tcpsrv_t*, rsRetVal (*) (tcpsrv_t*, tcps_sess_t*));$/;"	v
SetCBOnSessConstructFinalize	runtime/strmsrv.c	/^SetCBOnSessConstructFinalize(strmsrv_t *pThis, rsRetVal (*pCB)(void*))$/;"	f	file:
SetCBOnSessConstructFinalize	runtime/strmsrv.h	/^	rsRetVal (*SetCBOnSessConstructFinalize)(strmsrv_t*, rsRetVal (*) (void*));$/;"	v
SetCBOnSessConstructFinalize	runtime/tcpsrv.c	/^SetCBOnSessConstructFinalize(tcpsrv_t *pThis, rsRetVal (*pCB)(void*))$/;"	f	file:
SetCBOnSessConstructFinalize	runtime/tcpsrv.h	/^	rsRetVal (*SetCBOnSessConstructFinalize)(tcpsrv_t*, rsRetVal (*) (void*));$/;"	v
SetCBOnSessDestruct	runtime/strmsrv.c	/^SetCBOnSessDestruct(strmsrv_t *pThis, rsRetVal (*pCB)(void*))$/;"	f	file:
SetCBOnSessDestruct	runtime/strmsrv.h	/^	rsRetVal (*SetCBOnSessDestruct)(strmsrv_t*, rsRetVal (*) (void*));$/;"	v
SetCBOnSessDestruct	runtime/tcpsrv.c	/^SetCBOnSessDestruct(tcpsrv_t *pThis, rsRetVal (*pCB)(void*))$/;"	f	file:
SetCBOnSessDestruct	runtime/tcpsrv.h	/^	rsRetVal (*SetCBOnSessDestruct)(tcpsrv_t*, rsRetVal (*) (void*));$/;"	v
SetCBOpenLstnSocks	runtime/strmsrv.c	/^SetCBOpenLstnSocks(strmsrv_t *pThis, rsRetVal (*pCB)(strmsrv_t*))$/;"	f	file:
SetCBOpenLstnSocks	runtime/strmsrv.h	/^	rsRetVal (*SetCBOpenLstnSocks)(strmsrv_t *, rsRetVal (*)(strmsrv_t*));$/;"	v
SetCBOpenLstnSocks	runtime/tcpsrv.c	/^SetCBOpenLstnSocks(tcpsrv_t *pThis, rsRetVal (*pCB)(tcpsrv_t*))$/;"	f	file:
SetCBOpenLstnSocks	runtime/tcpsrv.h	/^	rsRetVal (*SetCBOpenLstnSocks)(tcpsrv_t *, rsRetVal (*)(tcpsrv_t*));$/;"	v
SetCBRcvData	runtime/tcpsrv.c	/^SetCBRcvData(tcpsrv_t *pThis, rsRetVal (*pRcvData)(tcps_sess_t*, char*, size_t, ssize_t*))$/;"	f	file:
SetCBRcvData	runtime/tcpsrv.h	/^	rsRetVal (*SetCBRcvData)(tcpsrv_t *pThis, rsRetVal (*pRcvData)(tcps_sess_t*, char*, size_t, ssize_t*));$/;"	v
SetCnfParam	runtime/cryprov.h	/^	rsRetVal (*SetCnfParam)(void *ppThis, struct nvlst *lst, int paramType);$/;"	v
SetCnfParam	runtime/lmcry_gcry.c	/^SetCnfParam(void *pT, struct nvlst *lst, int paramType)$/;"	f	file:
SetCnfParam	runtime/sigprov.h	/^	rsRetVal (*SetCnfParam)(void *ppThis, struct nvlst *lst);$/;"	v
SetCurrRuleset	runtime/ruleset.c	/^SetCurrRuleset(rsconf_t *conf, uchar *pszName)$/;"	f	file:
SetCurrRuleset	runtime/ruleset.h	/^	rsRetVal (*SetCurrRuleset)(rsconf_t *conf, uchar*);$/;"	v
SetDefaultRuleset	runtime/ruleset.c	/^SetDefaultRuleset(rsconf_t *conf, uchar *pszName)$/;"	f	file:
SetDefaultRuleset	runtime/ruleset.h	/^	rsRetVal (*SetDefaultRuleset)(rsconf_t *conf, uchar*);$/;"	v
SetDeleteOnClose	runtime/cryprov.h	/^	void (*SetDeleteOnClose)(void *pFileInstData, int val);$/;"	v
SetDeleteOnClose	runtime/lmcry_gcry.c	/^SetDeleteOnClose(void *pF, int val)$/;"	f	file:
SetDfltTZ	runtime/tcpsrv.c	/^SetDfltTZ(tcpsrv_t *pThis, uchar *tz)$/;"	f	file:
SetDfltTZ	runtime/tcpsrv.h	/^	rsRetVal (*SetDfltTZ)(tcpsrv_t *pThis, uchar *dfltTZ);$/;"	v
SetDir	runtime/stream.h	/^	rsRetVal (*SetDir)(strm_t *pThis, uchar *pszDir, size_t iLenDir);$/;"	v
SetDoPRIParsing	runtime/parser.c	/^SetDoPRIParsing(parser_t *pThis, int bDoIt)$/;"	f	file:
SetDoPRIParsing	runtime/parser.h	/^	rsRetVal (*SetDoPRIParsing)(parser_t *pThis, int);$/;"	v
SetDoSanitazion	runtime/parser.c	/^SetDoSanitazion(parser_t *pThis, int bDoIt)$/;"	f	file:
SetDoSanitazion	runtime/parser.h	/^	rsRetVal (*SetDoSanitazion)(parser_t *pThis, int);$/;"	v
SetDrvrAuthMode	runtime/netstrm.c	/^SetDrvrAuthMode(netstrm_t *pThis, uchar *mode)$/;"	f	file:
SetDrvrAuthMode	runtime/netstrm.h	/^	rsRetVal (*SetDrvrAuthMode)(netstrm_t *pThis, uchar*);$/;"	v
SetDrvrAuthMode	runtime/netstrms.c	/^SetDrvrAuthMode(netstrms_t *pThis, uchar *mode)$/;"	f	file:
SetDrvrAuthMode	runtime/netstrms.h	/^	rsRetVal (*SetDrvrAuthMode)(netstrms_t *pThis, uchar*);$/;"	v
SetDrvrAuthMode	runtime/strmsrv.c	/^SetDrvrAuthMode(strmsrv_t *pThis, uchar *mode)$/;"	f	file:
SetDrvrAuthMode	runtime/strmsrv.h	/^	rsRetVal (*SetDrvrAuthMode)(strmsrv_t *pThis, uchar *pszMode);$/;"	v
SetDrvrAuthMode	runtime/tcpsrv.c	/^SetDrvrAuthMode(tcpsrv_t *pThis, uchar *mode)$/;"	f	file:
SetDrvrAuthMode	runtime/tcpsrv.h	/^	rsRetVal (*SetDrvrAuthMode)(tcpsrv_t *pThis, uchar *pszMode);$/;"	v
SetDrvrMode	runtime/netstrm.c	/^SetDrvrMode(netstrm_t *pThis, int iMode)$/;"	f	file:
SetDrvrMode	runtime/netstrm.h	/^	rsRetVal (*SetDrvrMode)(netstrm_t *pThis, int iMode);$/;"	v
SetDrvrMode	runtime/netstrms.c	/^SetDrvrMode(netstrms_t *pThis, int iMode)$/;"	f	file:
SetDrvrMode	runtime/netstrms.h	/^	rsRetVal (*SetDrvrMode)(netstrms_t *pThis, int iMode);$/;"	v
SetDrvrMode	runtime/strmsrv.c	/^SetDrvrMode(strmsrv_t *pThis, int iMode)$/;"	f	file:
SetDrvrMode	runtime/strmsrv.h	/^	rsRetVal (*SetDrvrMode)(strmsrv_t *pThis, int iMode);$/;"	v
SetDrvrMode	runtime/tcpsrv.c	/^SetDrvrMode(tcpsrv_t *pThis, int iMode)$/;"	f	file:
SetDrvrMode	runtime/tcpsrv.h	/^	rsRetVal (*SetDrvrMode)(tcpsrv_t *pThis, int iMode);$/;"	v
SetDrvrName	runtime/netstrms.c	/^SetDrvrName(netstrms_t *pThis, uchar *pszName)$/;"	f	file:
SetDrvrName	runtime/netstrms.h	/^	rsRetVal (*SetDrvrName)(netstrms_t *pThis, uchar *pszName);$/;"	v
SetDrvrName	runtime/nspoll.c	/^SetDrvrName(nspoll_t *pThis, uchar *pszName)$/;"	f	file:
SetDrvrName	runtime/nspoll.h	/^	rsRetVal (*SetDrvrName)(nspoll_t *pThis, uchar *name);$/;"	v
SetDrvrName	runtime/nssel.c	/^SetDrvrName(nssel_t *pThis, uchar *pszName)$/;"	f	file:
SetDrvrName	runtime/nssel.h	/^	rsRetVal (*SetDrvrName)(nssel_t *pThis, uchar *name);$/;"	v
SetDrvrName	runtime/tcpsrv.c	/^SetDrvrName(tcpsrv_t *pThis, uchar *name)$/;"	f	file:
SetDrvrName	runtime/tcpsrv.h	/^	rsRetVal (*SetDrvrName)(tcpsrv_t *pThis, uchar *pszName);$/;"	v
SetDrvrPermPeers	runtime/netstrm.c	/^SetDrvrPermPeers(netstrm_t *pThis, permittedPeers_t *pPermPeers)$/;"	f	file:
SetDrvrPermPeers	runtime/netstrm.h	/^	rsRetVal (*SetDrvrPermPeers)(netstrm_t *pThis, permittedPeers_t*);$/;"	v
SetDrvrPermPeers	runtime/netstrms.c	/^SetDrvrPermPeers(netstrms_t *pThis, permittedPeers_t *pPermPeers)$/;"	f	file:
SetDrvrPermPeers	runtime/netstrms.h	/^	rsRetVal (*SetDrvrPermPeers)(netstrms_t *pThis, permittedPeers_t*);$/;"	v
SetDrvrPermPeers	runtime/strmsrv.c	/^SetDrvrPermPeers(strmsrv_t *pThis, permittedPeers_t *pPermPeers)$/;"	f	file:
SetDrvrPermPeers	runtime/strmsrv.h	/^	rsRetVal (*SetDrvrPermPeers)(strmsrv_t *pThis, permittedPeers_t*);$/;"	v
SetDrvrPermPeers	runtime/tcpsrv.c	/^SetDrvrPermPeers(tcpsrv_t *pThis, permittedPeers_t *pPermPeers)$/;"	f	file:
SetDrvrPermPeers	runtime/tcpsrv.h	/^	rsRetVal (*SetDrvrPermPeers)(tcpsrv_t *pThis, permittedPeers_t*);$/;"	v
SetFName	runtime/stream.h	/^	rsRetVal (*SetFName)(strm_t *pThis, uchar *pszPrefix, size_t iLenPrefix);$/;"	v
SetFileName	runtime/stream.h	/^	rsRetVal (*SetFileName)(strm_t *pThis, uchar *pszName, size_t iLenName);$/;"	v
SetFraming	runtime/tcpclt.c	/^SetFraming(tcpclt_t *pThis, TCPFRAMINGMODE framing)$/;"	f	file:
SetFraming	runtime/tcpclt.h	/^	rsRetVal (*SetFraming)(tcpclt_t*, TCPFRAMINGMODE framing);$/;"	v
SetGlobalInputTermination	runtime/glbl.c	/^static void SetGlobalInputTermination(void)$/;"	f	file:
SetGlobalInputTermination	runtime/glbl.h	/^	void (*SetGlobalInputTermination)(void);$/;"	v
SetHost	runtime/strms_sess.c	/^SetHost(strms_sess_t *pThis, uchar *pszHost)$/;"	f	file:
SetHost	runtime/strms_sess.h	/^	rsRetVal (*SetHost)(strms_sess_t *pThis, uchar*);$/;"	v
SetHost	runtime/tcps_sess.c	/^SetHost(tcps_sess_t *pThis, uchar *pszHost)$/;"	f	file:
SetHost	runtime/tcps_sess.h	/^	rsRetVal (*SetHost)(tcps_sess_t *pThis, uchar*);$/;"	v
SetHostIP	runtime/strms_sess.c	/^SetHostIP(strms_sess_t *pThis, prop_t *ip)$/;"	f	file:
SetHostIP	runtime/strms_sess.h	/^	rsRetVal (*SetHostIP)(strms_sess_t *pThis, prop_t*);$/;"	v
SetHostIP	runtime/tcps_sess.c	/^SetHostIP(tcps_sess_t *pThis, prop_t *ip)$/;"	f	file:
SetHostIP	runtime/tcps_sess.h	/^	rsRetVal (*SetHostIP)(tcps_sess_t *pThis, prop_t*);$/;"	v
SetInputName	runtime/strmsrv.c	/^SetInputName(strmsrv_t *pThis, uchar *name)$/;"	f	file:
SetInputName	runtime/strmsrv.h	/^	rsRetVal (*SetInputName)(strmsrv_t*, uchar*);$/;"	v
SetInputName	runtime/tcpsrv.c	/^SetInputName(tcpsrv_t *pThis, uchar *name)$/;"	f	file:
SetInputName	runtime/tcpsrv.h	/^	rsRetVal (*SetInputName)(tcpsrv_t*, uchar*);$/;"	v
SetKeepAlive	runtime/strmsrv.c	/^SetKeepAlive(strmsrv_t *pThis, int iVal)$/;"	f	file:
SetKeepAlive	runtime/strmsrv.h	/^	rsRetVal (*SetKeepAlive)(strmsrv_t*, int);$/;"	v
SetKeepAlive	runtime/tcpsrv.c	/^SetKeepAlive(tcpsrv_t *pThis, int iVal)$/;"	f	file:
SetKeepAlive	runtime/tcpsrv.h	/^	rsRetVal (*SetKeepAlive)(tcpsrv_t*, int);$/;"	v
SetKeepAliveIntvl	runtime/netstrm.c	/^SetKeepAliveIntvl(netstrm_t *pThis, int keepAliveIntvl)$/;"	f	file:
SetKeepAliveIntvl	runtime/netstrm.h	/^	rsRetVal (*SetKeepAliveIntvl)(netstrm_t *pThis, int keepAliveIntvl);$/;"	v
SetKeepAliveIntvl	runtime/nsd.h	/^	rsRetVal (*SetKeepAliveIntvl)(nsd_t *pThis, int keepAliveIntvl);$/;"	v
SetKeepAliveIntvl	runtime/nsd_gtls.c	/^SetKeepAliveIntvl(nsd_t *pNsd, int keepAliveIntvl)$/;"	f	file:
SetKeepAliveIntvl	runtime/nsd_ptcp.c	/^SetKeepAliveIntvl(nsd_t *pNsd, int keepAliveIntvl)$/;"	f	file:
SetKeepAliveIntvl	runtime/strmsrv.c	/^SetKeepAliveIntvl(strmsrv_t *pThis, int iVal)$/;"	f	file:
SetKeepAliveIntvl	runtime/strmsrv.h	/^	rsRetVal (*SetKeepAliveIntvl)(strmsrv_t *pThis, int keepAliveIntvl);$/;"	v
SetKeepAliveIntvl	runtime/tcpsrv.c	/^SetKeepAliveIntvl(tcpsrv_t *pThis, int iVal)$/;"	f	file:
SetKeepAliveIntvl	runtime/tcpsrv.h	/^	rsRetVal (*SetKeepAliveIntvl)(tcpsrv_t*, int);$/;"	v
SetKeepAliveProbes	runtime/netstrm.c	/^SetKeepAliveProbes(netstrm_t *pThis, int keepAliveProbes)$/;"	f	file:
SetKeepAliveProbes	runtime/netstrm.h	/^	rsRetVal (*SetKeepAliveProbes)(netstrm_t *pThis, int keepAliveProbes);$/;"	v
SetKeepAliveProbes	runtime/nsd.h	/^	rsRetVal (*SetKeepAliveProbes)(nsd_t *pThis, int keepAliveProbes);$/;"	v
SetKeepAliveProbes	runtime/nsd_gtls.c	/^SetKeepAliveProbes(nsd_t *pNsd, int keepAliveProbes)$/;"	f	file:
SetKeepAliveProbes	runtime/nsd_ptcp.c	/^SetKeepAliveProbes(nsd_t *pNsd, int keepAliveProbes)$/;"	f	file:
SetKeepAliveProbes	runtime/strmsrv.c	/^SetKeepAliveProbes(strmsrv_t *pThis, int iVal)$/;"	f	file:
SetKeepAliveProbes	runtime/strmsrv.h	/^	rsRetVal (*SetKeepAliveProbes)(strmsrv_t *pThis, int keepAliveProbes);$/;"	v
SetKeepAliveProbes	runtime/tcpsrv.c	/^SetKeepAliveProbes(tcpsrv_t *pThis, int iVal)$/;"	f	file:
SetKeepAliveProbes	runtime/tcpsrv.h	/^	rsRetVal (*SetKeepAliveProbes)(tcpsrv_t*, int);$/;"	v
SetKeepAliveTime	runtime/netstrm.c	/^SetKeepAliveTime(netstrm_t *pThis, int keepAliveTime)$/;"	f	file:
SetKeepAliveTime	runtime/netstrm.h	/^	rsRetVal (*SetKeepAliveTime)(netstrm_t *pThis, int keepAliveTime);$/;"	v
SetKeepAliveTime	runtime/nsd.h	/^	rsRetVal (*SetKeepAliveTime)(nsd_t *pThis, int keepAliveTime);$/;"	v
SetKeepAliveTime	runtime/nsd_gtls.c	/^SetKeepAliveTime(nsd_t *pNsd, int keepAliveTime)$/;"	f	file:
SetKeepAliveTime	runtime/nsd_ptcp.c	/^SetKeepAliveTime(nsd_t *pNsd, int keepAliveTime)$/;"	f	file:
SetKeepAliveTime	runtime/strmsrv.c	/^SetKeepAliveTime(strmsrv_t *pThis, int iVal)$/;"	f	file:
SetKeepAliveTime	runtime/strmsrv.h	/^	rsRetVal (*SetKeepAliveTime)(strmsrv_t *pThis, int keepAliveTime);$/;"	v
SetKeepAliveTime	runtime/tcpsrv.c	/^SetKeepAliveTime(tcpsrv_t *pThis, int iVal)$/;"	f	file:
SetKeepAliveTime	runtime/tcpsrv.h	/^	rsRetVal (*SetKeepAliveTime)(tcpsrv_t*, int);$/;"	v
SetLinuxLikeRatelimiters	runtime/tcpsrv.c	/^SetLinuxLikeRatelimiters(tcpsrv_t *pThis, int ratelimitInterval, int ratelimitBurst)$/;"	f	file:
SetLinuxLikeRatelimiters	runtime/tcpsrv.h	/^	rsRetVal (*SetLinuxLikeRatelimiters)(tcpsrv_t *pThis, int interval, int burst);$/;"	v
SetLocalDomain	runtime/glbl.c	/^SetLocalDomain(uchar *newname)$/;"	f	file:
SetLocalFQDNName	runtime/glbl.c	/^SetLocalFQDNName(uchar *newname)$/;"	f	file:
SetLocalHostName	runtime/glbl.c	/^SetLocalHostName(uchar *newname)$/;"	f	file:
SetLstnInfo	runtime/strms_sess.c	/^SetLstnInfo(strms_sess_t *pThis, strmLstnPortList_t *pLstnInfo)$/;"	f	file:
SetLstnInfo	runtime/strms_sess.h	/^	rsRetVal (*SetLstnInfo)(strms_sess_t *pThis, strmLstnPortList_t *pLstnInfo);$/;"	v
SetLstnInfo	runtime/tcps_sess.c	/^SetLstnInfo(tcps_sess_t *pThis, tcpLstnPortList_t *pLstnInfo)$/;"	f	file:
SetLstnInfo	runtime/tcps_sess.h	/^	rsRetVal (*SetLstnInfo)(tcps_sess_t *pThis, tcpLstnPortList_t *pLstnInfo);$/;"	v
SetLstnMax	runtime/tcpsrv.c	/^SetLstnMax(tcpsrv_t *pThis, int iMax)$/;"	f	file:
SetLstnMax	runtime/tcpsrv.h	/^	rsRetVal (*SetLstnMax)(tcpsrv_t *pThis, int iMaxLstn);	\/* 2009-08-17 *\/$/;"	v
SetModDir	runtime/modules.c	/^SetModDir(uchar *pszModDir)$/;"	f	file:
SetModDir	runtime/modules.h	/^	rsRetVal (*SetModDir)(uchar *name);$/;"	v
SetModPtr	runtime/parser.c	/^SetModPtr(parser_t *pThis, modInfo_t *pMod)$/;"	f	file:
SetModPtr	runtime/parser.h	/^	rsRetVal (*SetModPtr)(parser_t *pThis, modInfo_t *pMod);$/;"	v
SetModPtr	runtime/strgen.c	/^SetModPtr(strgen_t *pThis, modInfo_t *pMod)$/;"	f	file:
SetModPtr	runtime/strgen.h	/^	rsRetVal (*SetModPtr)(strgen_t *pThis, modInfo_t *pMod);$/;"	v
SetMode	runtime/nsd.h	/^	rsRetVal (*SetMode)(nsd_t *pThis, int mode); \/* sets a driver specific mode - see driver doc for details *\/$/;"	v
SetMode	runtime/nsd_gtls.c	/^SetMode(nsd_t *pNsd, int mode)$/;"	f	file:
SetMode	runtime/nsd_ptcp.c	/^SetMode(nsd_t __attribute__((unused)) *pNsd, int mode)$/;"	f	file:
SetMsgIdx	runtime/tcps_sess.c	/^SetMsgIdx(tcps_sess_t *pThis, int idx)$/;"	f	file:
SetMsgIdx	runtime/tcps_sess.h	/^	rsRetVal (*SetMsgIdx)(tcps_sess_t *pThis, int);$/;"	v
SetName	runtime/obj.c	/^SetName(obj_t *pThis, uchar *pszName)$/;"	f	file:
SetName	runtime/obj.h	/^	rsRetVal (*SetName)(obj_t *pThis, uchar *pszName);$/;"	v
SetName	runtime/parser.c	/^SetName(parser_t *pThis, uchar *name)$/;"	f	file:
SetName	runtime/parser.h	/^	rsRetVal (*SetName)(parser_t *pThis, uchar *name);$/;"	v
SetName	runtime/ruleset.h	/^	rsRetVal (*SetName)(ruleset_t *pThis, uchar *pszName);$/;"	v
SetName	runtime/statsobj.h	/^	rsRetVal (*SetName)(statsobj_t *pThis, uchar *name);$/;"	v
SetName	runtime/strgen.c	/^SetName(strgen_t *pThis, uchar *name)$/;"	f	file:
SetName	runtime/strgen.h	/^	rsRetVal (*SetName)(strgen_t *pThis, uchar *name);$/;"	v
SetNotificationOnRemoteClose	runtime/tcpsrv.c	/^SetNotificationOnRemoteClose(tcpsrv_t *pThis, int bNewVal)$/;"	f	file:
SetNotificationOnRemoteClose	runtime/tcpsrv.h	/^	rsRetVal (*SetNotificationOnRemoteClose)(tcpsrv_t *pThis, int bNewVal); \/* 2009-10-01 *\/$/;"	v
SetOnCharRcvd	runtime/strmsrv.c	/^SetOnCharRcvd(strmsrv_t *pThis, rsRetVal (*OnCharRcvd)(strms_sess_t*, uchar))$/;"	f	file:
SetOnCharRcvd	runtime/strmsrv.h	/^	rsRetVal (*SetOnCharRcvd)(strmsrv_t *pThis, rsRetVal (*OnMsgCharRcvd)(strms_sess_t*, uchar));$/;"	v
SetOnMsgReceive	runtime/strms_sess.h	/^	rsRetVal (*SetOnMsgReceive)(strms_sess_t *pThis, rsRetVal (*OnMsgReceive)(strms_sess_t*, uchar*, int));$/;"	v
SetOnMsgReceive	runtime/tcps_sess.c	/^SetOnMsgReceive(tcps_sess_t *pThis, rsRetVal (*OnMsgReceive)(tcps_sess_t*, uchar*, int))$/;"	f	file:
SetOnMsgReceive	runtime/tcps_sess.h	/^	rsRetVal (*SetOnMsgReceive)(tcps_sess_t *pThis, rsRetVal (*OnMsgReceive)(tcps_sess_t*, uchar*, int));$/;"	v
SetOnMsgReceive	runtime/tcpsrv.c	/^SetOnMsgReceive(tcpsrv_t *pThis, rsRetVal (*OnMsgReceive)(tcps_sess_t*, uchar*, int))$/;"	f	file:
SetOnMsgReceive	runtime/tcpsrv.h	/^	rsRetVal (*SetOnMsgReceive)(tcpsrv_t *pThis, rsRetVal (*OnMsgReceive)(tcps_sess_t*, uchar*, int)); \/* 2009-05-24 *\/$/;"	v
SetOrigin	runtime/statsobj.h	/^	rsRetVal (*SetOrigin)(statsobj_t *pThis, uchar *name); \/* added v12, 2014-09-08 *\/$/;"	v
SetOrigin	runtime/tcpsrv.c	/^SetOrigin(tcpsrv_t *pThis, uchar *origin)$/;"	f	file:
SetOrigin	runtime/tcpsrv.h	/^	rsRetVal (*SetOrigin)(tcpsrv_t*, uchar*);$/;"	v
SetPermPeers	runtime/nsd.h	/^	rsRetVal (*SetPermPeers)(nsd_t *pThis, permittedPeers_t*); \/* sets driver permitted peers for auth needs *\/$/;"	v
SetPermPeers	runtime/nsd_gtls.c	/^SetPermPeers(nsd_t *pNsd, permittedPeers_t *pPermPeers)$/;"	f	file:
SetPermPeers	runtime/nsd_ptcp.c	/^SetPermPeers(nsd_t __attribute__((unused)) *pNsd, permittedPeers_t __attribute__((unused)) *pPermPeers)$/;"	f	file:
SetRebindInterval	runtime/tcpclt.c	/^SetRebindInterval(tcpclt_t *pThis, int iRebindInterval)$/;"	f	file:
SetRebindInterval	runtime/tcpclt.h	/^	rsRetVal (*SetRebindInterval)(tcpclt_t*, int iRebindInterval);$/;"	v
SetResendLastOnRecon	runtime/tcpclt.c	/^SetResendLastOnRecon(tcpclt_t *pThis, int bResendLastOnRecon)$/;"	f	file:
SetResendLastOnRecon	runtime/tcpclt.h	/^	rsRetVal (*SetResendLastOnRecon)(tcpclt_t*, int);$/;"	v
SetRuleset	runtime/tcpsrv.c	/^SetRuleset(tcpsrv_t *pThis, ruleset_t *pRuleset)$/;"	f	file:
SetRuleset	runtime/tcpsrv.h	/^	rsRetVal (*SetRuleset)(tcpsrv_t *pThis, ruleset_t*); \/* 2009-06-12 *\/$/;"	v
SetSendFrame	runtime/tcpclt.c	/^SetSendFrame(tcpclt_t *pThis, rsRetVal (*pCB)(void*, char*, size_t))$/;"	f	file:
SetSendFrame	runtime/tcpclt.h	/^	rsRetVal (*SetSendFrame)(tcpclt_t*, rsRetVal (*)(void*, char*, size_t));$/;"	v
SetSendInit	runtime/tcpclt.c	/^SetSendInit(tcpclt_t *pThis, rsRetVal (*pCB)(void*))$/;"	f	file:
SetSendInit	runtime/tcpclt.h	/^	rsRetVal (*SetSendInit)(tcpclt_t*, rsRetVal (*)(void*));$/;"	v
SetSendPrepRetry	runtime/tcpclt.c	/^SetSendPrepRetry(tcpclt_t *pThis, rsRetVal (*pCB)(void*))$/;"	f	file:
SetSendPrepRetry	runtime/tcpclt.h	/^	rsRetVal (*SetSendPrepRetry)(tcpclt_t*, rsRetVal (*)(void*));$/;"	v
SetSessMax	runtime/strmsrv.c	/^SetSessMax(strmsrv_t *pThis, int iMax)$/;"	f	file:
SetSessMax	runtime/strmsrv.h	/^	rsRetVal (*SetSessMax)(strmsrv_t *pThis, int iMaxSess);$/;"	v
SetSessMax	runtime/tcpsrv.c	/^SetSessMax(tcpsrv_t *pThis, int iMax)$/;"	f	file:
SetSessMax	runtime/tcpsrv.h	/^	rsRetVal (*SetSessMax)(tcpsrv_t *pThis, int iMaxSess);	\/* 2009-04-09 *\/$/;"	v
SetShutdownImmdtPtr	runtime/modules.h	/^			rsRetVal (*SetShutdownImmdtPtr)(void *pData, void *pPtr);$/;"	m	struct:modInfo_s::__anon29::__anon31
SetSock	runtime/nsd.h	/^	rsRetVal (*SetSock)(nsd_t *pThis, int sock);$/;"	v
SetSock	runtime/nsd_gtls.c	/^SetSock(nsd_t *pNsd, int sock)$/;"	f	file:
SetSock	runtime/nsd_ptcp.c	/^SetSock(nsd_t *pNsd, int sock)$/;"	f	file:
SetSourceIPofLocalClient	runtime/glbl.c	/^SetSourceIPofLocalClient(uchar *newname)$/;"	f	file:
SetSourceIPofLocalClient	runtime/glbl.h	/^	rsRetVal (*SetSourceIPofLocalClient)(uchar*);		\/* [ar] *\/$/;"	v
SetString	runtime/prop.c	/^static rsRetVal SetString(prop_t *pThis, const uchar *psz, const int len)$/;"	f	file:
SetString	runtime/prop.h	/^	rsRetVal (*SetString)(prop_t *pThis, const uchar* psz, const int len);$/;"	v
SetStrm	runtime/strms_sess.c	/^SetStrm(strms_sess_t *pThis, netstrm_t *pStrm)$/;"	f	file:
SetStrm	runtime/strms_sess.h	/^	rsRetVal (*SetStrm)(strms_sess_t *pThis, netstrm_t*);$/;"	v
SetStrm	runtime/tcps_sess.c	/^SetStrm(tcps_sess_t *pThis, netstrm_t *pStrm)$/;"	f	file:
SetStrm	runtime/tcps_sess.h	/^	rsRetVal (*SetStrm)(tcps_sess_t *pThis, netstrm_t*);$/;"	v
SetStrmsrv	runtime/strms_sess.c	/^SetStrmsrv(strms_sess_t *pThis, strmsrv_t *pSrv)$/;"	f	file:
SetStrmsrv	runtime/strms_sess.h	/^	rsRetVal (*SetStrmsrv)(strms_sess_t *pThis, struct strmsrv_s *pSrv);$/;"	v
SetTcpsrv	runtime/tcps_sess.c	/^SetTcpsrv(tcps_sess_t *pThis, tcpsrv_t *pSrv)$/;"	f	file:
SetTcpsrv	runtime/tcps_sess.h	/^	rsRetVal (*SetTcpsrv)(tcps_sess_t *pThis, struct tcpsrv_s *pSrv);$/;"	v
SetUseFlowControl	runtime/tcpsrv.c	/^SetUseFlowControl(tcpsrv_t *pThis, int bUseFlowControl)$/;"	f	file:
SetUseFlowControl	runtime/tcpsrv.h	/^	rsRetVal (*SetUseFlowControl)(tcpsrv_t*, int);$/;"	v
SetUsrP	runtime/strms_sess.c	/^SetUsrP(strms_sess_t *pThis, void *pUsr)$/;"	f	file:
SetUsrP	runtime/strms_sess.h	/^	rsRetVal (*SetUsrP)(strms_sess_t*, void*);$/;"	v
SetUsrP	runtime/strmsrv.c	/^SetUsrP(strmsrv_t *pThis, void *pUsr)$/;"	f	file:
SetUsrP	runtime/strmsrv.h	/^	rsRetVal (*SetUsrP)(strmsrv_t*, void*);$/;"	v
SetUsrP	runtime/tcps_sess.c	/^SetUsrP(tcps_sess_t *pThis, void *pUsr)$/;"	f	file:
SetUsrP	runtime/tcps_sess.h	/^	rsRetVal (*SetUsrP)(tcps_sess_t*, void*);$/;"	v
SetUsrP	runtime/tcpsrv.c	/^SetUsrP(tcpsrv_t *pThis, void *pUsr)$/;"	f	file:
SetUsrP	runtime/tcpsrv.h	/^	rsRetVal (*SetUsrP)(tcpsrv_t*, void*);$/;"	v
SetWCntr	runtime/stream.h	/^	rsRetVal (*SetWCntr)(strm_t *pThis, number_t *pWCnt);$/;"	v
SetbDisableLFDelim	runtime/tcpsrv.c	/^SetbDisableLFDelim(tcpsrv_t *pThis, int bVal)$/;"	f	file:
SetbDisableLFDelim	runtime/tcpsrv.h	/^	rsRetVal (*SetbDisableLFDelim)(tcpsrv_t*, int);$/;"	v
SetbSPFramingFix	runtime/tcpsrv.c	/^SetbSPFramingFix(tcpsrv_t *pThis, const sbool val)$/;"	f	file:
SetbSPFramingFix	runtime/tcpsrv.h	/^	rsRetVal (*SetbSPFramingFix)(tcpsrv_t*, sbool);$/;"	v
ShutdownWorkers	runtime/queue.c	/^ShutdownWorkers(qqueue_t *pThis)$/;"	f	file:
SignificantBits	runtime/net.h	/^	uint8_t SignificantBits;      \/* defines how many bits should be discarded (eqiv to mask) *\/$/;"	m	struct:AllowedSenders
SimplePlugin	plugins/external/skeletons/java/SimplePlugin.java	/^public class SimplePlugin {$/;"	c
SourceIPofLocalClient	runtime/glbl.c	/^static uchar *SourceIPofLocalClient = NULL;	\/* [ar] Source IP for local client to be used on multihomed host *\/$/;"	v	file:
StartDA	runtime/queue.c	/^StartDA(qqueue_t *pThis)$/;"	f	file:
StripDomains	runtime/glbl.c	/^static char **StripDomains = NULL;\/* these domains may be stripped before writing logs  - r\/o after s.u., never touched by init *\/$/;"	v	file:
SubmitMsg	plugins/imuxsock/imuxsock.c	/^SubmitMsg(uchar *pRcv, int lenRcv, lstn_t *pLstn, struct ucred *cred, struct timeval *ts)$/;"	f	file:
Syslog	contrib/imkmsg/imkmsg.c	/^rsRetVal Syslog(syslog_pri_t priority, uchar *pMsg, struct timeval *tp, struct json_object *json)$/;"	f
Syslog	plugins/imklog/imklog.c	/^rsRetVal Syslog(syslog_pri_t priority, uchar *pMsg, struct timeval *tp)$/;"	f
SystemEvents	plugins/ommysql/createDB.sql	/^CREATE TABLE SystemEvents$/;"	t
SystemEvents	plugins/ompgsql/createDB.sql	/^CREATE TABLE SystemEvents$/;"	t
SystemEvents.CurrUsage	plugins/ommysql/createDB.sql	/^        MaxAvailable int NULL,$/;"	F
SystemEvents.CurrUsage	plugins/ompgsql/createDB.sql	/^        MaxAvailable int NULL,$/;"	F
SystemEvents.CustomerID	plugins/ommysql/createDB.sql	/^        ID int unsigned not null auto_increment primary key,$/;"	F
SystemEvents.CustomerID	plugins/ompgsql/createDB.sql	/^        ID serial not null primary key,$/;"	F
SystemEvents.DeviceReportedTime	plugins/ommysql/createDB.sql	/^        ReceivedAt datetime NULL,$/;"	F
SystemEvents.DeviceReportedTime	plugins/ompgsql/createDB.sql	/^        ReceivedAt timestamp without time zone NULL,$/;"	F
SystemEvents.EventBinaryData	plugins/ommysql/createDB.sql	/^        EventID int NULL,$/;"	F
SystemEvents.EventBinaryData	plugins/ompgsql/createDB.sql	/^        EventID int NULL,$/;"	F
SystemEvents.EventCategory	plugins/ommysql/createDB.sql	/^        EventUser varchar(60) NULL,$/;"	F
SystemEvents.EventCategory	plugins/ompgsql/createDB.sql	/^        EventUser varchar(60) NULL,$/;"	F
SystemEvents.EventID	plugins/ommysql/createDB.sql	/^        EventCategory int NULL,$/;"	F
SystemEvents.EventID	plugins/ompgsql/createDB.sql	/^        EventCategory int NULL,$/;"	F
SystemEvents.EventLogType	plugins/ommysql/createDB.sql	/^        SysLogTag varchar(60),$/;"	F
SystemEvents.EventLogType	plugins/ompgsql/createDB.sql	/^        SysLogTag varchar(60),$/;"	F
SystemEvents.EventSource	plugins/ommysql/createDB.sql	/^        Importance int NULL,$/;"	F
SystemEvents.EventSource	plugins/ompgsql/createDB.sql	/^        Importance int NULL,$/;"	F
SystemEvents.EventUser	plugins/ommysql/createDB.sql	/^        EventSource varchar(60),$/;"	F
SystemEvents.EventUser	plugins/ompgsql/createDB.sql	/^        EventSource varchar(60),$/;"	F
SystemEvents.Facility	plugins/ommysql/createDB.sql	/^        DeviceReportedTime datetime NULL,$/;"	F
SystemEvents.Facility	plugins/ompgsql/createDB.sql	/^        DeviceReportedTime timestamp without time zone NULL,$/;"	F
SystemEvents.FromHost	plugins/ommysql/createDB.sql	/^        Priority smallint NULL,$/;"	F
SystemEvents.FromHost	plugins/ompgsql/createDB.sql	/^        Priority smallint NULL,$/;"	F
SystemEvents.GenericFileName	plugins/ommysql/createDB.sql	/^        EventLogType varchar(60),$/;"	F
SystemEvents.GenericFileName	plugins/ompgsql/createDB.sql	/^        EventLogType varchar(60),$/;"	F
SystemEvents.ID	plugins/ommysql/createDB.sql	/^($/;"	F
SystemEvents.ID	plugins/ompgsql/createDB.sql	/^($/;"	F
SystemEvents.Importance	plugins/ommysql/createDB.sql	/^        NTSeverity int NULL,$/;"	F
SystemEvents.Importance	plugins/ompgsql/createDB.sql	/^        NTSeverity int NULL,$/;"	F
SystemEvents.InfoUnitID	plugins/ommysql/createDB.sql	/^        MaxUsage int NULL,$/;"	F
SystemEvents.InfoUnitID	plugins/ompgsql/createDB.sql	/^        MaxUsage int NULL,$/;"	F
SystemEvents.MaxAvailable	plugins/ommysql/createDB.sql	/^        EventBinaryData text NULL,$/;"	F
SystemEvents.MaxAvailable	plugins/ompgsql/createDB.sql	/^        EventBinaryData text NULL,$/;"	F
SystemEvents.MaxUsage	plugins/ommysql/createDB.sql	/^        MinUsage int NULL,$/;"	F
SystemEvents.MaxUsage	plugins/ompgsql/createDB.sql	/^        MinUsage int NULL,$/;"	F
SystemEvents.Message	plugins/ommysql/createDB.sql	/^        FromHost varchar(60) NULL,$/;"	F
SystemEvents.Message	plugins/ompgsql/createDB.sql	/^        FromHost varchar(60) NULL,$/;"	F
SystemEvents.MinUsage	plugins/ommysql/createDB.sql	/^        CurrUsage int NULL,$/;"	F
SystemEvents.MinUsage	plugins/ompgsql/createDB.sql	/^        CurrUsage int NULL,$/;"	F
SystemEvents.NTSeverity	plugins/ommysql/createDB.sql	/^        Message text,$/;"	F
SystemEvents.NTSeverity	plugins/ompgsql/createDB.sql	/^        Message text,$/;"	F
SystemEvents.Priority	plugins/ommysql/createDB.sql	/^        Facility smallint NULL,$/;"	F
SystemEvents.Priority	plugins/ompgsql/createDB.sql	/^        Facility smallint NULL,$/;"	F
SystemEvents.ReceivedAt	plugins/ommysql/createDB.sql	/^        CustomerID bigint,$/;"	F
SystemEvents.ReceivedAt	plugins/ompgsql/createDB.sql	/^        CustomerID bigint,$/;"	F
SystemEvents.SysLogTag	plugins/ommysql/createDB.sql	/^        InfoUnitID int NULL ,$/;"	F
SystemEvents.SysLogTag	plugins/ompgsql/createDB.sql	/^        InfoUnitID int NULL ,$/;"	F
SystemEvents.SystemID	plugins/ommysql/createDB.sql	/^        GenericFileName VarChar(60),$/;"	F
SystemEvents.SystemID	plugins/ompgsql/createDB.sql	/^        GenericFileName VarChar(60),$/;"	F
SystemEventsProperties	plugins/ommysql/createDB.sql	/^CREATE TABLE SystemEventsProperties$/;"	t
SystemEventsProperties	plugins/ompgsql/createDB.sql	/^CREATE TABLE SystemEventsProperties$/;"	t
SystemEventsProperties.ID	plugins/ommysql/createDB.sql	/^($/;"	F
SystemEventsProperties.ID	plugins/ompgsql/createDB.sql	/^($/;"	F
SystemEventsProperties.ParamName	plugins/ommysql/createDB.sql	/^        SystemEventID int NULL ,$/;"	F
SystemEventsProperties.ParamName	plugins/ompgsql/createDB.sql	/^        SystemEventID int NULL ,$/;"	F
SystemEventsProperties.ParamValue	plugins/ommysql/createDB.sql	/^        ParamName varchar(255) NULL ,$/;"	F
SystemEventsProperties.ParamValue	plugins/ompgsql/createDB.sql	/^        ParamName varchar(255) NULL ,$/;"	F
SystemEventsProperties.SystemEventID	plugins/ommysql/createDB.sql	/^        ID int unsigned not null auto_increment primary key,$/;"	F
SystemEventsProperties.SystemEventID	plugins/ompgsql/createDB.sql	/^        ID serial not null primary key,$/;"	F
TABLE_ALLPRI	runtime/srUtils.h	37;"	d
TABLE_NOPRI	runtime/srUtils.h	36;"	d
TAG	runtime/msg.h	/^	} TAG;$/;"	m	struct:msg	typeref:union:msg::__anon38
TCPCLT_H_INCLUDED	runtime/tcpclt.h	26;"	d
TCPFRAMINGMODE	runtime/net.h	/^	} TCPFRAMINGMODE;$/;"	t	typeref:enum:_TCPFRAMINGMODE
TCPLSTN_MAX_DEFAULT	runtime/tcpsrv.c	84;"	d	file:
TCPSESS_MAX_DEFAULT	runtime/tcpsrv.c	83;"	d	file:
TCPSRV_NO_ADDTL_DELIMITER	plugins/imptcp/imptcp.c	76;"	d	file:
TCPSRV_NO_ADDTL_DELIMITER	runtime/tcpsrv.h	53;"	d
TCPSendBldFrame	runtime/tcpclt.c	/^TCPSendBldFrame(tcpclt_t *pThis, char **pmsg, size_t *plen, int *pbMustBeFreed)$/;"	f	file:
TCPSendBuf	tools/omfwd.c	/^TCPSendBuf(wrkrInstanceData_t *pWrkrData, uchar *buf, unsigned len, sbool bIsFlush)$/;"	f	file:
TCPSendBufCompressed	tools/omfwd.c	/^TCPSendBufCompressed(wrkrInstanceData_t *pWrkrData, uchar *buf, unsigned len, sbool bIsFlush)$/;"	f	file:
TCPSendBufUncompressed	tools/omfwd.c	/^TCPSendBufUncompressed(wrkrInstanceData_t *pWrkrData, uchar *buf, unsigned len)$/;"	f	file:
TCPSendFrame	tools/omfwd.c	/^static rsRetVal TCPSendFrame(void *pvData, char *msg, size_t len)$/;"	f	file:
TCPSendGSSInit	plugins/omgssapi/omgssapi.c	/^static rsRetVal TCPSendGSSInit(void *pvData)$/;"	f	file:
TCPSendGSSPrepRetry	plugins/omgssapi/omgssapi.c	/^static rsRetVal TCPSendGSSPrepRetry(void __attribute__((unused)) *pData)$/;"	f	file:
TCPSendGSSSend	plugins/omgssapi/omgssapi.c	/^static rsRetVal TCPSendGSSSend(void *pvData, char *msg, size_t len)$/;"	f	file:
TCPSendInit	tools/omfwd.c	/^static rsRetVal TCPSendInit(void *pvData)$/;"	f	file:
TCPSendPrepRetry	tools/omfwd.c	/^static rsRetVal TCPSendPrepRetry(void *pvData)$/;"	f	file:
TCPSessGSSClose	plugins/imgssapi/imgssapi.c	/^void TCPSessGSSClose(tcps_sess_t* pSess)$/;"	f
TCPSessGSSDeinit	plugins/imgssapi/imgssapi.c	/^TCPSessGSSDeinit(void)$/;"	f	file:
TCPSessGSSInit	plugins/imgssapi/imgssapi.c	/^static int TCPSessGSSInit(void)$/;"	f	file:
TCPSessGSSRecv	plugins/imgssapi/imgssapi.c	/^int TCPSessGSSRecv(tcps_sess_t *pSess, void *buf, size_t buf_len, ssize_t *piLenRcvd)$/;"	f
TCPSessGetNxtSess	runtime/tcpsrv.c	/^TCPSessGetNxtSess(tcpsrv_t *pThis, int iCurr)$/;"	f	file:
TCPSessTblFindFreeSpot	runtime/tcpsrv.c	/^TCPSessTblFindFreeSpot(tcpsrv_t *pThis)$/;"	f	file:
TCPSessTblInit	runtime/tcpsrv.c	/^TCPSessTblInit(tcpsrv_t *pThis)$/;"	f	file:
TCP_FRAMING_OCTET_COUNTING	runtime/net.h	/^		TCP_FRAMING_OCTET_COUNTING = 1  \/* -transport-tls like octet count *\/$/;"	e	enum:_TCPFRAMINGMODE
TCP_FRAMING_OCTET_STUFFING	runtime/net.h	/^		TCP_FRAMING_OCTET_STUFFING = 0, \/* traditional LF-delimited *\/$/;"	e	enum:_TCPFRAMINGMODE
TEMPLATE_H_INCLUDED	template.h	31;"	d
THREADS_H_INCLUDED	threads.h	23;"	d
TIME_REQUERY_DFLT	plugins/imudp/imudp.c	98;"	d	file:
TIME_TYPE_RFC3164	runtime/syslogd-types.h	80;"	d
TIME_TYPE_RFC5424	runtime/syslogd-types.h	81;"	d
TIME_TYPE_UNINIT	runtime/syslogd-types.h	79;"	d
TO_LOWERCASE	plugins/imdiag/imdiag.c	154;"	d	file:
TPL_REGEX_BRE	template.h	/^enum tplRegexType { TPL_REGEX_BRE = 0, \/* posix BRE *\/$/;"	e	enum:tplRegexType
TPL_REGEX_ERE	template.h	/^		    TPL_REGEX_ERE = 1  \/* posix ERE *\/$/;"	e	enum:tplRegexType
TPL_REGEX_NOMATCH_USE_BLANK	template.h	/^				TPL_REGEX_NOMATCH_USE_BLANK = 1, \/* use a blank string *\/$/;"	e	enum:templateEntry::__anon69::__anon71::tlpRegexNoMatchType
TPL_REGEX_NOMATCH_USE_DFLTSTR	template.h	/^				TPL_REGEX_NOMATCH_USE_DFLTSTR = 0, \/* use the (old style) default "**NO MATCH**" string *\/$/;"	e	enum:templateEntry::__anon69::__anon71::tlpRegexNoMatchType
TPL_REGEX_NOMATCH_USE_WHOLE_FIELD	template.h	/^				TPL_REGEX_NOMATCH_USE_WHOLE_FIELD = 2, \/* use the full field contents that we were searching in*\/$/;"	e	enum:templateEntry::__anon69::__anon71::tlpRegexNoMatchType
TPL_REGEX_NOMATCH_USE_ZERO	template.h	/^				TPL_REGEX_NOMATCH_USE_ZERO = 3 \/* use  0 (useful for numerical values) *\/$/;"	e	enum:templateEntry::__anon69::__anon71::tlpRegexNoMatchType
TP_TCP	tests/tcpflood.c	/^static enum { TP_UDP, TP_TCP, TP_TLS } transport = TP_TCP;$/;"	e	enum:__anon75	file:
TP_TLS	tests/tcpflood.c	/^static enum { TP_UDP, TP_TCP, TP_TLS } transport = TP_TCP;$/;"	e	enum:__anon75	file:
TP_UDP	tests/tcpflood.c	/^static enum { TP_UDP, TP_TCP, TP_TLS } transport = TP_TCP;$/;"	e	enum:__anon75	file:
TabRepresentation	contrib/pmsnare/pmsnare.c	92;"	d	file:
UCHAR_CONSTANT	runtime/unicode-helper.h	62;"	d
UDPSend	plugins/omudpspoof/omudpspoof.c	/^UDPSend(wrkrInstanceData_t *pWrkrData, uchar *pszSourcename, char *msg, size_t len)$/;"	f	file:
UDPSend	tools/omfwd.c	/^static rsRetVal UDPSend(wrkrInstanceData_t *__restrict__ const pWrkrData,$/;"	f	file:
UNAMESZ	runtime/syslogd-types.h	36;"	d
UNAMESZ	runtime/syslogd-types.h	38;"	d
UNDEFINED	template.h	/^enum EntryTypes { UNDEFINED = 0, CONSTANT = 1, FIELD = 2 };$/;"	e	enum:EntryTypes
UNLIMITED_SELECT_H_INCLUDED	runtime/unlimited_select.h	25;"	d
UNSET	plugins/imuxsock/imuxsock.c	78;"	d	file:
USE_ASYNCWRITER_DFLT	tools/omfile.c	131;"	d	file:
UTNAME	tools/omusrmsg.c	42;"	d	file:
UTNAME	tools/omusrmsg.c	46;"	d	file:
UnloadAndDestructAll	runtime/modules.h	/^	rsRetVal (*UnloadAndDestructAll)(eModLinkType_t modLinkTypesToUnload);$/;"	v
UnreadChar	runtime/stream.h	/^	rsRetVal (*UnreadChar)(strm_t *pThis, uchar c);$/;"	v
UnregisterObj	runtime/obj.c	/^UnregisterObj(uchar *pszObjName)$/;"	f	file:
UnregisterObj	runtime/obj.h	/^	rsRetVal (*UnregisterObj)(uchar *pszObjName);$/;"	v
Use	runtime/modules.c	/^Use(char *srcFile, modInfo_t *pThis)$/;"	f	file:
Use	runtime/modules.h	/^	rsRetVal (*Use)(char *srcFile, modInfo_t *pThis);	\/**< must be called before a module is used (ref counting) *\/$/;"	v
UseObj	runtime/obj.c	/^UseObj(char *srcFile, uchar *pObjName, uchar *pObjFile, interface_t *pIf)$/;"	f	file:
UseObj	runtime/obj.h	/^	rsRetVal (*UseObj)(char *srcFile, uchar *pObjName, uchar *pObjFile, interface_t *pIf);$/;"	v
VARTYPE	tools/recover_qi.pl	/^sub VARTYPE {$/;"	s
VARTYPE_NONE	runtime/var.h	/^	VARTYPE_NONE = 0, \/* currently no value set *\/$/;"	e	enum:__anon57
VARTYPE_NUMBER	runtime/var.h	/^	VARTYPE_NUMBER = 2,$/;"	e	enum:__anon57
VARTYPE_STR	runtime/var.h	/^	VARTYPE_STR = 1,$/;"	e	enum:__anon57
VARTYPE_SYSLOGTIME	runtime/var.h	/^	VARTYPE_SYSLOGTIME = 3$/;"	e	enum:__anon57
VERSION	runtime/librsgt.c	60;"	d	file:
VERSION	runtime/librsgt_read.c	49;"	d	file:
VERSION	runtime/librsksi.c	59;"	d	file:
VERSION	runtime/librsksi_read.c	49;"	d	file:
WRKTHRD_RUNNING	runtime/wtp.h	31;"	d
WRKTHRD_STOPPED	runtime/wtp.h	30;"	d
WTI_H_INCLUDED	runtime/wti.h	23;"	d
WTP_H_INCLUDED	runtime/wtp.h	23;"	d
Wait	runtime/nsd.h	/^	rsRetVal (*Wait)(nsdpoll_t *pNsdpoll, int timeout, int *numReady, nsd_epworkset_t workset[]);$/;"	v
Wait	runtime/nsdpoll_ptcp.c	/^Wait(nsdpoll_t *pNsdpoll, int timeout, int *numEntries, nsd_epworkset_t workset[]) {$/;"	f	file:
Wait	runtime/nspoll.c	/^Wait(nspoll_t *pThis, int timeout, int *numEntries, nsd_epworkset_t workset[]) {$/;"	f	file:
Wait	runtime/nspoll.h	/^	rsRetVal (*Wait)(nspoll_t *pNsdpoll, int timeout, int *numEntries, nsd_epworkset_t workset[]);$/;"	v
Wait	runtime/nssel.c	/^Wait(nssel_t *pThis, int *piNumReady)$/;"	f	file:
Wait	runtime/nssel.h	/^	rsRetVal (*Wait)(nssel_t *pThis, int *pNumReady);$/;"	v
Write	runtime/stream.h	/^	rsRetVal (*Write)(strm_t *const pThis, const uchar *const pBuf, size_t lenBuf);$/;"	v
WriteChar	runtime/stream.h	/^	rsRetVal (*WriteChar)(strm_t *pThis, uchar c);$/;"	v
WriteLong	runtime/stream.h	/^	rsRetVal (*WriteLong)(strm_t *pThis, long i);$/;"	v
WriteRcpts	plugins/ommail/ommail.c	/^WriteRcpts(wrkrInstanceData_t *pWrkrData, uchar *pszOp, size_t lenOp, int iStatusToCheck)$/;"	f	file:
WriteTos	plugins/ommail/ommail.c	/^WriteTos(wrkrInstanceData_t *pWrkrData, uchar *pszOp, size_t lenOp)$/;"	f	file:
_BSD_SOURCE	plugins/omudpspoof/omudpspoof.c	76;"	d	file:
_DB_DELAYTIMEONERROR	runtime/syslogd-types.h	46;"	d
_DB_MAXDBLEN	runtime/syslogd-types.h	43;"	d
_DB_MAXPWDLEN	runtime/syslogd-types.h	45;"	d
_DB_MAXUNAMELEN	runtime/syslogd-types.h	44;"	d
_EHostnameCmpMode	runtime/syslogd-types.h	/^enum _EHostnameCmpMode {$/;"	g
_GNU_SOURCE	runtime/sd-daemon.c	28;"	d	file:
_GNU_SOURCE	tools/syncdemo.c	56;"	d	file:
_HTTPFS_JSON_REMOTE_EXCEPTION	contrib/omhttpfs/omhttpfs.c	/^typedef struct _HTTPFS_JSON_REMOTE_EXCEPTION {$/;"	s	file:
_IFADDRS_H	compat/ifaddrs.h	27;"	d
_PARSE_H_INCLUDED__	parse.h	46;"	d
_PATH_CONSOLE	runtime/rsyslog.h	142;"	d
_PATH_DEV	tools/omusrmsg.c	71;"	d	file:
_PATH_KLOG	contrib/imkmsg/kmsg.c	49;"	d	file:
_PATH_KLOG	plugins/imklog/bsd.c	51;"	d	file:
_PATH_KLOG	plugins/imklog/bsd.c	53;"	d	file:
_PATH_KLOG	plugins/imklog/solaris.c	52;"	d	file:
_PATH_LOG	plugins/imuxsock/imuxsock.c	67;"	d	file:
_STRINGBUF_H_INCLUDED__	runtime/stringbuf.h	33;"	d
_TCPFRAMINGMODE	runtime/net.h	/^typedef enum _TCPFRAMINGMODE {$/;"	g
__BSD_SOURCE	plugins/omudpspoof/omudpspoof.c	77;"	d	file:
__FAVOR_BSD	plugins/omudpspoof/omudpspoof.c	78;"	d	file:
__HASHTABLE_CWC22_H__	runtime/hashtable.h	4;"	d
__HASHTABLE_CWC22_UTILITY_H__	runtime/hashtable/hashtable_utility.h	4;"	d
__HASHTABLE_ITR_CWC22__	runtime/hashtable_itr.h	4;"	d
__HASHTABLE_PRIVATE_CWC22_H__	runtime/hashtable_private.h	4;"	d
__SRUTILS_H_INCLUDED__	runtime/srUtils.h	27;"	d
__attribute__	runtime/rsyslog.h	570;"	d
_instanceData	contrib/mmcount/mmcount.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	contrib/mmgrok/mmgrok.c	/^typedef struct _instanceData$/;"	s	file:
_instanceData	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	contrib/mmsequence/mmsequence.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	contrib/omczmq/omczmq.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	contrib/omhiredis/omhiredis.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	contrib/omhttpfs/omhttpfs.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	contrib/omrabbitmq/omrabbitmq.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	contrib/omzmq3/omzmq3.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmanon/mmanon.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmaudit/mmaudit.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmexternal/mmexternal.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmfields/mmfields.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmjsonparse/mmjsonparse.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmnormalize/mmnormalize.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmpstrucdata/mmpstrucdata.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmsnmptrapd/mmsnmptrapd.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/mmutf8fix/mmutf8fix.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omelasticsearch/omelasticsearch.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omgssapi/omgssapi.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omhdfs/omhdfs.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omjournal/omjournal.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omkafka/omkafka.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omlibdbi/omlibdbi.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/ommail/ommail.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/ommongodb/ommongodb.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/ommysql/ommysql.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/ompgsql/ompgsql.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omprog/omprog.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omrelp/omrelp.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omruleset/omruleset.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omsnmp/omsnmp.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omstdout/omstdout.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omtesting/omtesting.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omudpspoof/omudpspoof.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	plugins/omuxsock/omuxsock.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	tools/omdiscard.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	tools/omfile.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	tools/omfwd.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	tools/ompipe.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	tools/omshell.c	/^typedef struct _instanceData {$/;"	s	file:
_instanceData	tools/omusrmsg.c	/^typedef struct _instanceData {$/;"	s	file:
_pollerData_t	contrib/imczmq/imczmq.c	/^typedef struct _pollerData_t {$/;"	s	file:
_poller_data	contrib/imzmq3/imzmq3.c	/^typedef struct _poller_data {$/;"	s	file:
_sd_export_	runtime/sd-daemon.c	59;"	d	file:
_sd_export_	runtime/sd-daemon.c	62;"	d	file:
_sd_export_	runtime/sd-daemon.c	65;"	d	file:
_sd_printf_attr_	runtime/sd-daemon.h	72;"	d
_sd_printf_attr_	runtime/sd-daemon.h	74;"	d
_socket_action	contrib/imzmq3/imzmq3.c	/^typedef struct _socket_action {$/;"	s	file:
_socket_type	contrib/imzmq3/imzmq3.c	/^typedef struct _socket_type {$/;"	s	file:
_syslogCode	runtime/syslogd-types.h	/^typedef struct _syslogCode {$/;"	s
_syslogFeature	runtime/syslogd-types.h	/^typedef enum _syslogFeature {$/;"	g
aData	plugins/impstats/statslog-analyzer.py	/^			aData = {}$/;"	v
aData	plugins/impstats/statslog-graph.py	/^aData = {}$/;"	v
aData	plugins/impstats/statslog-splitter.py	/^			aData = []$/;"	v
aFields	plugins/impstats/statslog-graph.py	/^			aFields = line.strip().split(";")$/;"	v
aFields	plugins/impstats/statslog-graph.py	/^aFields = []$/;"	v
aFields	plugins/impstats/statslog-splitter.py	/^			aFields = []$/;"	v
aLineData	plugins/impstats/statslog-graph.py	/^			aLineData = line.strip().split(";")$/;"	v
aLineDataPrev	plugins/impstats/statslog-graph.py	/^				aLineDataPrev = aLineData$/;"	v
aLineDataPrev	plugins/impstats/statslog-graph.py	/^	aLineDataPrev = [] # Helper variable for previous line!$/;"	v
aMajorXData	plugins/impstats/statslog-graph.py	/^aMajorXData = []$/;"	v
aParams	plugins/mmexternal/mmexternal.c	/^	char **aParams;		\/* Optional Parameters for binary command *\/$/;"	m	struct:_instanceData	file:
aParams	plugins/omprog/omprog.c	/^	char **aParams;		\/* Optional Parameters for binary command *\/$/;"	m	struct:_instanceData	file:
aPossibleProblems	plugins/impstats/statslog-analyzer.py	/^	aPossibleProblems = {}$/;"	v
aProblemFound	plugins/impstats/statslog-analyzer.py	/^		aProblemFound = {}$/;"	v
aProperties	plugins/impstats/statslog-analyzer.py	/^					aProperties = result[ loglineindexes[iLogRegExIndex]["LN_LOGDATA"] ].split(" ")$/;"	v
aProperties	plugins/impstats/statslog-splitter.py	/^					aProperties = result[ loglineindexes[iLogRegExIndex]["LN_LOGDATA"] ].split(" ")$/;"	v
aProperty	plugins/impstats/statslog-analyzer.py	/^						aProperty = szProperty.split("=")$/;"	v
aProperty	plugins/impstats/statslog-splitter.py	/^						aProperty = szProperty.split("=")$/;"	v
aUsrp_t	runtime/typedefs.h	/^typedef struct aUsrp_s aUsrp_t;$/;"	t	typeref:struct:aUsrp_s
abortCnfUse	runtime/modules.c	/^abortCnfUse(cfgmodules_etry_t *pNew)$/;"	f	file:
act	grammar/rainerscript.h	/^		struct action_s *act;$/;"	m	union:cnfstmt::__anon4	typeref:struct:cnfstmt::__anon4::action_s
actGSSListener	plugins/imgssapi/imgssapi.c	/^actGSSListener(uchar *port)$/;"	f	file:
actParam	runtime/rsyslog.h	563;"	d
actParams	runtime/wti.h	/^			actWrkrIParams_t actParams[CONF_OMOD_NUMSTRINGS_MAXSIZE];$/;"	m	struct:actWrkrInfo::__anon60::__anon62
actState	runtime/wti.h	/^		unsigned actState : 3;$/;"	m	struct:actWrkrInfo::__anon59
actWrkrData	runtime/wti.h	/^	void *actWrkrData;$/;"	m	struct:actWrkrInfo
actWrkrIParams	runtime/rsyslog.h	/^struct __attribute__ ((__packed__)) actWrkrIParams {$/;"	s
actWrkrIParams_t	runtime/typedefs.h	/^typedef struct actWrkrIParams actWrkrIParams_t;$/;"	t	typeref:struct:actWrkrIParams
actWrkrInfo	runtime/wti.h	/^	actWrkrInfo_t *actWrkrInfo; \/* *array* of action wrkr infos for all actions$/;"	m	struct:wti_s
actWrkrInfo	runtime/wti.h	/^typedef struct actWrkrInfo {$/;"	s
actWrkrInfo_t	runtime/wti.h	/^} actWrkrInfo_t;$/;"	t	typeref:struct:actWrkrInfo
action	contrib/imzmq3/imzmq3.c	/^    int                    action;$/;"	m	struct:instanceConf_s	file:
action	contrib/imzmq3/imzmq3.c	/^    int   action;$/;"	m	struct:_socket_action	file:
action	contrib/omzmq3/omzmq3.c	/^    int     action;$/;"	m	struct:_instanceData	file:
action	contrib/omzmq3/omzmq3.c	/^    int   action;$/;"	m	struct:socket_action	file:
actionApplyCnfParam	action.c	/^actionApplyCnfParam(action_t * const pAction, struct cnfparamvals * const pvals)$/;"	f	file:
actionCallCommitTransaction	action.c	/^actionCallCommitTransaction(action_t * const pThis,$/;"	f	file:
actionCallDoAction	action.c	/^actionCallDoAction(action_t *__restrict__ const pThis,$/;"	f	file:
actionCallHUPHdlr	action.c	/^actionCallHUPHdlr(action_t * const pAction)$/;"	f
actionCheckAndCreateWrkrInstance	action.c	/^actionCheckAndCreateWrkrInstance(action_t * const pThis, wti_t * const pWti)$/;"	f	file:
actionClassInit	action.c	/^rsRetVal actionClassInit(void)$/;"	f
actionCommit	action.c	/^actionCommit(action_t *__restrict__ const pThis, wti_t *__restrict__ const pWti)$/;"	f	file:
actionCommitAllDirect	action.c	/^actionCommitAllDirect(wti_t *__restrict__ const pWti)$/;"	f
actionCommitted	action.c	/^static void actionCommitted(action_t * const pThis, wti_t * const pWti)$/;"	f	file:
actionConstruct	action.c	/^rsRetVal actionConstruct(action_t **ppThis)$/;"	f
actionConstructFinalize	action.c	/^actionConstructFinalize(action_t *__restrict__ const pThis, struct nvlst *lst)$/;"	f
actionDestruct	action.c	/^rsRetVal actionDestruct(action_t * const pThis)$/;"	f
actionDisable	action.c	/^actionDisable(action_t *__restrict__ const pThis)$/;"	f	file:
actionDoRetry	action.c	/^actionDoRetry(action_t * const pThis, wti_t * const pWti)$/;"	f	file:
actionNewInst	action.c	/^actionNewInst(struct nvlst *lst, action_t **ppAction)$/;"	f
actionPrepare	action.c	/^actionPrepare(action_t *__restrict__ const pThis, wti_t *__restrict__ const pWti)$/;"	f	file:
actionProcessMessage	action.c	/^actionProcessMessage(action_t * const pThis, void *actParams, wti_t * const pWti)$/;"	f
actionRemoveWorker	action.c	/^actionRemoveWorker(action_t *const __restrict__ pAction,$/;"	f
actionResetQueueParams	action.c	/^actionResetQueueParams(void)$/;"	f	file:
actionRetry	action.c	/^static void actionRetry(action_t * const pThis, wti_t * const pWti)$/;"	f	file:
actionSetActionWorked	action.c	/^actionSetActionWorked(action_t *__restrict__ const pThis, wti_t *__restrict__ const pWti)$/;"	f	file:
actionSetGlobalResumeInterval	action.c	/^rsRetVal actionSetGlobalResumeInterval(int iNewVal)$/;"	f
actionSetState	action.c	/^actionSetState(action_t * const pThis, wti_t * const pWti, uint8_t newState)$/;"	f	file:
actionSuspend	action.c	/^actionSuspend(action_t * const pThis, wti_t * const pWti)$/;"	f	file:
actionTryCommit	action.c	/^actionTryCommit(action_t *__restrict__ const pThis, wti_t *__restrict__ const pWti)$/;"	f	file:
actionTryResume	action.c	/^actionTryResume(action_t * const pThis, wti_t * const pWti)$/;"	f	file:
actionWriteToAction	action.c	/^actionWriteToAction(action_t * const pAction, msg_t *pMsg, wti_t * const pWti)$/;"	f
action_s	action.h	/^struct action_s {$/;"	s
action_t	runtime/typedefs.h	/^typedef struct action_s action_t;$/;"	t	typeref:struct:action_s
actions	contrib/omzmq3/omzmq3.c	/^static struct socket_action actions[] = {$/;"	v	typeref:struct:socket_action	file:
actions	runtime/rsconf.h	/^	actions_t actions;$/;"	m	struct:rsconf_s
actions_s	runtime/rsconf.h	/^struct actions_s {$/;"	s
actions_t	runtime/typedefs.h	/^typedef struct actions_s actions_t;$/;"	t	typeref:struct:actions_s
activate	runtime/rsconf.c	/^activate(rsconf_t *cnf)$/;"	f
activateActions	action.c	/^activateActions(void)$/;"	f
activateCnf	runtime/modules.h	/^	rsRetVal (*activateCnf)(void*Cnf);	\/* make provided config the running conf *\/$/;"	m	struct:modInfo_s
activateCnfPrePrivDrop	runtime/modules.h	/^	rsRetVal (*activateCnfPrePrivDrop)(void*Cnf);$/;"	m	struct:modInfo_s
activateListeners	plugins/imuxsock/imuxsock.c	/^activateListeners()$/;"	f	file:
activateMainQueue	runtime/rsconf.c	/^activateMainQueue()$/;"	f	file:
activateRulesetQueues	runtime/ruleset.c	/^activateRulesetQueues()$/;"	f
active	plugins/imfile/imfile.c	/^	fileTable_t active; \/* associated active files *\/$/;"	m	struct:dirInfo_s	file:
actlst	grammar/grammar.y	/^actlst:	  s_act				{ $$ = $1; }$/;"	l
actpblk	contrib/mmcount/mmcount.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	contrib/mmgrok/mmgrok.c	/^static struct cnfparamblk actpblk = $/;"	v	typeref:struct:cnfparamblk	file:
actpblk	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	contrib/mmsequence/mmsequence.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	contrib/omczmq/omczmq.c	/^static struct cnfparamblk actpblk = {$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	contrib/omhiredis/omhiredis.c	/^static struct cnfparamblk actpblk = {$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	contrib/omhttpfs/omhttpfs.c	/^static struct cnfparamblk actpblk = {$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	contrib/omrabbitmq/omrabbitmq.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	contrib/omzmq3/omzmq3.c	/^static struct cnfparamblk actpblk = {$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/mmanon/mmanon.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/mmexternal/mmexternal.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/mmfields/mmfields.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/mmjsonparse/mmjsonparse.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/mmnormalize/mmnormalize.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/mmpstrucdata/mmpstrucdata.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/mmutf8fix/mmutf8fix.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/omelasticsearch/omelasticsearch.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/omkafka/omkafka.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/omlibdbi/omlibdbi.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/ommail/ommail.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/ommongodb/ommongodb.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/ommysql/ommysql.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/omprog/omprog.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/omrelp/omrelp.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/omsnmp/omsnmp.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	plugins/omudpspoof/omudpspoof.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	tools/omfile.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	tools/omfwd.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	tools/ompipe.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpblk	tools/omusrmsg.c	/^static struct cnfparamblk actpblk =$/;"	v	typeref:struct:cnfparamblk	file:
actpdescr	contrib/mmcount/mmcount.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	contrib/mmgrok/mmgrok.c	/^static struct cnfparamdescr actpdescr[]={$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	contrib/mmsequence/mmsequence.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	contrib/omczmq/omczmq.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	contrib/omhiredis/omhiredis.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	contrib/omhttpfs/omhttpfs.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	contrib/omrabbitmq/omrabbitmq.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	contrib/omzmq3/omzmq3.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/mmanon/mmanon.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/mmexternal/mmexternal.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/mmfields/mmfields.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/mmjsonparse/mmjsonparse.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/mmnormalize/mmnormalize.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/mmpstrucdata/mmpstrucdata.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/mmutf8fix/mmutf8fix.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/omelasticsearch/omelasticsearch.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/omkafka/omkafka.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/omlibdbi/omlibdbi.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/ommail/ommail.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/ommongodb/ommongodb.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/ommysql/ommysql.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/omprog/omprog.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/omrelp/omrelp.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/omsnmp/omsnmp.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	plugins/omudpspoof/omudpspoof.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	runtime/modules.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	tools/omfile.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	tools/omfwd.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	tools/ompipe.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
actpdescr	tools/omusrmsg.c	/^static struct cnfparamdescr actpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
addAction	action.c	/^addAction(action_t **ppAction, modInfo_t *pMod, void *pModData,$/;"	f
addAllowedSenderLine	runtime/net.c	/^rsRetVal addAllowedSenderLine(char* pName, uchar** ppRestOfConfLine)$/;"	f
addAllowedSenderLine	runtime/net.h	/^	rsRetVal (*addAllowedSenderLine)(char* pName, uchar** ppRestOfConfLine);$/;"	v
addCounter	runtime/statsobj.c	/^addCounter(statsobj_t *pThis, uchar *ctrName, statsCtrType_t ctrType, int8_t flags, void *pCtr)$/;"	f	file:
addCtrToList	runtime/statsobj.c	/^addCtrToList(statsobj_t *pThis, ctr_t *pCtr)$/;"	f	file:
addData	plugins/omhdfs/omhdfs.c	/^addData(instanceData *pData, uchar *buf)$/;"	f	file:
addEPollSock	plugins/imptcp/imptcp.c	/^addEPollSock(epolld_type_t typ, void *ptr, int sock, epolld_t **pEpd)$/;"	f	file:
addEntry	runtime/dnscache.c	/^addEntry(struct sockaddr_storage *addr, dnscache_entry_t **pEtry)$/;"	f	file:
addEvent	runtime/nsdpoll_ptcp.c	/^addEvent(nsdpoll_ptcp_t *pThis, int id, void *pUsr, int mode, nsd_ptcp_t *pSock, nsdpoll_epollevt_lst_t **pEvtLst) {$/;"	f	file:
addGSSListener	plugins/imgssapi/imgssapi.c	/^addGSSListener(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
addInstance	plugins/imfile/imfile.c	/^addInstance(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
addInstance	plugins/imptcp/imptcp.c	/^static rsRetVal addInstance(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
addInstance	plugins/imrelp/imrelp.c	/^static rsRetVal addInstance(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
addInstance	plugins/imtcp/imtcp.c	/^static rsRetVal addInstance(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
addInstance	plugins/imudp/imudp.c	/^static rsRetVal addInstance(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
addInstance	plugins/imuxsock/imuxsock.c	/^static rsRetVal addInstance(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
addListener	contrib/imczmq/imczmq.c	/^static rsRetVal addListener(instanceConf_t* iconf){$/;"	f	file:
addListener	contrib/imzmq3/imzmq3.c	/^static rsRetVal addListener(instanceConf_t* inst){$/;"	f	file:
addListner	plugins/imfile/imfile.c	/^addListner(instanceConf_t *inst)$/;"	f	file:
addListner	plugins/imptcp/imptcp.c	/^addListner(modConfData_t __attribute__((unused)) *modConf, instanceConf_t *inst)$/;"	f	file:
addListner	plugins/imrelp/imrelp.c	/^addListner(modConfData_t __attribute__((unused)) *modConf, instanceConf_t *inst)$/;"	f	file:
addListner	plugins/imtcp/imtcp.c	/^addListner(modConfData_t *modConf, instanceConf_t *inst)$/;"	f	file:
addListner	plugins/imudp/imudp.c	/^addListner(instanceConf_t *inst)$/;"	f	file:
addListner	plugins/imuxsock/imuxsock.c	/^addListner(instanceConf_t *inst)$/;"	f	file:
addLstn	plugins/imptcp/imptcp.c	/^addLstn(ptcpsrv_t *pSrv, int sock, int isIPv6)$/;"	f	file:
addMetadata	plugins/imfile/imfile.c	/^	sbool addMetadata;$/;"	m	struct:instanceConf_s	file:
addMetadata	plugins/imfile/imfile.c	/^	sbool addMetadata;$/;"	m	struct:lstn_s	file:
addModToCnfList	runtime/modules.c	/^addModToCnfList(cfgmodules_etry_t *pNew, cfgmodules_etry_t *pLast)$/;"	f
addModToGlblList	runtime/modules.c	/^addModToGlblList(modInfo_t *pThis)$/;"	f	file:
addNL	tests/uxsockrcvr.c	/^int addNL = 0;$/;"	v
addNewLstnPort	runtime/strmsrv.c	/^addNewLstnPort(strmsrv_t *pThis, uchar *pszPort)$/;"	f	file:
addNewLstnPort	runtime/tcpsrv.c	/^addNewLstnPort(tcpsrv_t *pThis, uchar *pszPort, int bSuppOctetFram, uchar *pszAddr)$/;"	f	file:
addPadding	runtime/libgcry.c	/^addPadding(gcryfile pF, uchar *buf, size_t *plen)$/;"	f	file:
addRcpt	plugins/ommail/ommail.c	/^addRcpt(toRcpt_t **ppLstRcpt, uchar *newRcpt)$/;"	f	file:
addScript	runtime/ruleset.c	/^addScript(ruleset_t *pThis, struct cnfstmt *script)$/;"	f	file:
addSess	plugins/imptcp/imptcp.c	/^addSess(ptcplstn_t *pLstn, int sock, prop_t *peerName, prop_t *peerIP)$/;"	f	file:
addStrmLstn	runtime/strmsrv.c	/^addStrmLstn(void *pUsr, netstrm_t *pLstn)$/;"	f	file:
addTCPListener	plugins/imdiag/imdiag.c	/^static rsRetVal addTCPListener(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
addTcpLstn	runtime/tcpsrv.c	/^addTcpLstn(void *pUsr, netstrm_t *pLstn)$/;"	f	file:
addTimezoneInfo	runtime/glbl.c	/^addTimezoneInfo(uchar *tzid, char offsMode, int8_t offsHour, int8_t offsMin)$/;"	f	file:
addToObjList	runtime/statsobj.c	/^addToObjList(statsobj_t *pThis)$/;"	f	file:
addr	plugins/omuxsock/omuxsock.c	/^	struct sockaddr_un addr;$/;"	m	struct:_instanceData	typeref:struct:_instanceData::sockaddr_un	file:
addr	runtime/dnscache.c	/^	struct sockaddr_storage addr;$/;"	m	struct:dnscache_entry_s	typeref:struct:dnscache_entry_s::sockaddr_storage	file:
addr	runtime/net.h	/^  } addr;$/;"	m	struct:NetAddr	typeref:union:NetAddr::__anon39
address	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	m	struct:record	file:
addtlFrameDelim	runtime/strmsrv.h	/^	int addtlFrameDelim;	\/**< additional frame delimiter for plain STRM syslog framing (e.g. to handle NetScreen) *\/$/;"	m	struct:strmsrv_s
addtlFrameDelim	runtime/tcpsrv.h	/^	int addtlFrameDelim;	\/**< additional frame delimiter for plain TCP syslog framing (e.g. to handle NetScreen) *\/$/;"	m	struct:tcpsrv_s
affinity	contrib/imzmq3/imzmq3.c	/^    int                    affinity;$/;"	m	struct:instanceConf_s	file:
affinity	contrib/omzmq3/omzmq3.c	/^    int     affinity;$/;"	m	struct:_instanceData	file:
afterRun	runtime/modules.h	/^			rsRetVal (*afterRun)(thrdInfo_t*);	\/* function to gather input and submit to queue *\/$/;"	m	struct:modInfo_s::__anon29::__anon30
algo	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	const EVP_MD *algo;$/;"	m	struct:_instanceData	file:
algo	runtime/libgcry.h	/^	int algo;$/;"	m	struct:gcryctx_s
allocMax	plugins/imfile/imfile.c	/^	int allocMax;$/;"	m	struct:fileTable_s	file:
allocMaxDirs	plugins/imfile/imfile.c	/^static int allocMaxDirs;$/;"	v	file:
allocMaxWdmap	plugins/imfile/imfile.c	/^static int allocMaxWdmap;$/;"	v	file:
allow_regex	plugins/mmnormalize/mmnormalize.c	/^	int allow_regex;$/;"	m	struct:modConfData_s	file:
allowedMethods	plugins/imgssapi/imgssapi.c	/^	char allowedMethods;$/;"	m	struct:gss_sess_s	file:
allowedMethods	plugins/imgssapi/imgssapi.c	/^	char allowedMethods;$/;"	m	struct:gsssrv_s	file:
allowedSender	runtime/net.h	/^	struct NetAddr allowedSender; \/* ip address allowed *\/$/;"	m	struct:AllowedSenders	typeref:struct:AllowedSenders::NetAddr
altdbg	runtime/debug.c	/^int altdbg = -1;	\/* and the handle for alternate debug output *\/$/;"	v
anonip	plugins/mmanon/mmanon.c	/^anonip(instanceData *pData, uchar *msg, int *pLenMsg, int *idx)$/;"	f
api_errors	plugins/omsnmp/omsnmp.h	/^static const char *api_errors[-SNMPERR_MAX + 1] = {$/;"	v
apimode	tools/rsgtutil.c	/^static enum { API_GT, API_KSI } apimode = API_GT;$/;"	v	typeref:enum:__anon78	file:
applyDfltTZ	runtime/datetime.c	/^applyDfltTZ(struct syslogTime *pTime, char *tz)$/;"	f
appname	contrib/mmcount/mmcount.c	/^	char *appname;$/;"	v
aquirePROCIDFromTAG	runtime/msg.c	/^static rsRetVal aquirePROCIDFromTAG(msg_t * const pM)$/;"	f	file:
aquireProgramName	runtime/msg.c	/^aquireProgramName(msg_t * const pM)$/;"	f	file:
ar	grammar/rainerscript.h	/^		struct cnfarray *ar;$/;"	m	union:var::__anon3	typeref:struct:var::__anon3::cnfarray
arg	tools/rsyslogd.c	/^	char *arg;$/;"	m	struct:bufOpt	file:
arr	grammar/rainerscript.h	/^	es_str_t **arr;$/;"	m	struct:cnfarray
arr	tests/testconfgen.c	/^static int arr[128];$/;"	v	file:
arrObjInfo	runtime/obj.c	/^static objInfo_t *arrObjInfo[OBJ_NUM_IDS]; \/* array with object information pointers *\/$/;"	v	file:
array	grammar/grammar.y	/^array:	 '[' arrayelt ']'		{ $$ = $2; }$/;"	l
arrayelt	grammar/grammar.y	/^arrayelt: STRING			{ $$ = cnfarrayNew($1); }$/;"	l
asyncBuf	runtime/stream.h	/^	} asyncBuf[STREAM_ASYNC_NUMBUFS];$/;"	m	struct:strm_s	typeref:struct:strm_s::__anon67
asyncRepl	plugins/omelasticsearch/omelasticsearch.c	/^	sbool asyncRepl;$/;"	m	struct:_instanceData	file:
asyncWriterThread	runtime/stream.c	/^asyncWriterThread(void *pPtr)$/;"	f	file:
atomic	tools/syncdemo.c	/^typedef enum { part, none, atomic, cas, spinlock, mutex, semaphore } syncType_t;$/;"	e	enum:__anon79	file:
attrThrd	runtime/wtp.h	/^	pthread_attr_t attrThrd;\/* attribute for new threads (created just once and cached here) *\/$/;"	m	struct:wtp_s
auditID	plugins/mmaudit/mmaudit.c	/^	char auditID[1024];$/;"	v
audit_parse	plugins/mmaudit/mmaudit.c	/^audit_parse(uchar *buf, struct json_object **jsonRoot)$/;"	f	file:
authActor	contrib/imczmq/imczmq.c	/^static zactor_t *authActor = NULL;$/;"	v	file:
authActor	contrib/omczmq/omczmq.c	/^	zactor_t *authActor;	\/* reference to a CZMQ auth actor *\/$/;"	m	struct:_instanceData	file:
authMode	runtime/nsd_gtls.h	/^	} authMode;$/;"	m	struct:nsd_gtls_s	typeref:enum:nsd_gtls_s::__anon43
authType	contrib/imczmq/imczmq.c	/^	char *authType;				\/* (optional) type of authentication *\/$/;"	m	struct:instanceConf_s	file:
authType	contrib/omczmq/omczmq.c	/^	char *authType;			\/* (optional) type of authentication *\/$/;"	m	struct:_instanceData	file:
authmode	plugins/imrelp/imrelp.c	/^	uchar *authmode;		\/* TLS auth mode *\/$/;"	m	struct:instanceConf_s	file:
authmode	plugins/omrelp/omrelp.c	/^	uchar *authmode;$/;"	m	struct:_instanceData	file:
autoPartition	plugins/omkafka/omkafka.c	/^	sbool autoPartition;$/;"	m	struct:_instanceData	file:
auto_delete	contrib/omrabbitmq/omrabbitmq.c	/^	int auto_delete;$/;"	m	struct:_instanceData	file:
bAbortConn	runtime/nsd_gtls.h	/^	int bAbortConn;		\/* if set, abort conncection (fatal error had happened) *\/$/;"	m	struct:nsd_gtls_s
bAbortOnUncleanConfig	runtime/rsconf.h	/^	int bAbortOnUncleanConfig; \/* abort run (rather than starting with partial$/;"	m	struct:globals_s
bAbortTrace	runtime/debug.c	/^static int bAbortTrace = 1;	\/* print a trace after SIGABRT or SIGSEGV *\/$/;"	v	file:
bActExecWhenPrevSusp	action.c	/^	int bActExecWhenPrevSusp;			\/* execute action only when previous one was suspended? *\/$/;"	m	struct:configSettings_s	file:
bActExecWhenPrevSusp	tests/runtime-dummy.c	/^int bActExecWhenPrevSusp = 0;$/;"	v
bActionQSaveOnShutdown	action.c	/^	int bActionQSaveOnShutdown;			\/* save queue on shutdown (when DA enabled)? *\/$/;"	m	struct:configSettings_s	file:
bActionQSyncQeueFiles	action.c	/^	int bActionQSyncQeueFiles;			\/* sync queue files *\/$/;"	m	struct:configSettings_s	file:
bActionRepMsgHasMsg	action.c	/^	int bActionRepMsgHasMsg;			\/* last messsage repeated... has msg fragment in it *\/$/;"	m	struct:configSettings_s	file:
bActionReportSuspension	action.c	/^int bActionReportSuspension = 1;$/;"	v
bActionReportSuspensionCont	action.c	/^int bActionReportSuspensionCont = 0;$/;"	v
bActionWriteAllMarkMsgs	action.c	/^	int bActionWriteAllMarkMsgs;			\/* should all mark messages be unconditionally written? *\/$/;"	m	struct:configSettings_s	file:
bAllSyncTypes	tools/syncdemo.c	/^static int bAllSyncTypes = 0;$/;"	v	file:
bAlwaysRunning	runtime/wti.h	/^	sbool bAlwaysRunning;	\/* should this thread always run? *\/$/;"	m	struct:wti_s
bAnnotate	plugins/imuxsock/imuxsock.c	/^	int bAnnotate;			\/* annotate trusted properties *\/$/;"	m	struct:configSettings_s	file:
bAnnotate	plugins/imuxsock/imuxsock.c	/^	int bAnnotate;			\/* annotate trusted properties *\/$/;"	m	struct:instanceConf_s	file:
bAnnotate	plugins/imuxsock/imuxsock.c	/^	sbool bAnnotate;	\/* annotate events with trusted properties *\/$/;"	m	struct:lstn_s	file:
bAnnotateSysSock	plugins/imuxsock/imuxsock.c	/^	int bAnnotateSysSock;		\/* same, for system log socket *\/$/;"	m	struct:configSettings_s	file:
bAnnotateSysSock	plugins/imuxsock/imuxsock.c	/^	int bAnnotateSysSock;$/;"	m	struct:modConfData_s	file:
bAppendPortToInpname	plugins/imudp/imudp.c	/^	sbool bAppendPortToInpname;$/;"	m	struct:instanceConf_s	file:
bArrayPassingSupported	plugins/omstdout/omstdout.c	/^	bArrayPassingSupported = 0;$/;"	v
bArrayPassingSupported	plugins/omstdout/omstdout.c	/^	int bArrayPassingSupported;		\/* does core support template passing as an array? *\/$/;"	v
bAsyncWrite	runtime/stream.h	/^	sbool bAsyncWrite;	\/* do asynchronous writes (always if a flush interval is given) *\/$/;"	m	struct:strm_s
bAtStrtOfFram	plugins/imptcp/imptcp.c	/^	int bAtStrtOfFram;	\/* are we at the very beginning of a new frame? *\/$/;"	m	struct:ptcpsess_s	file:
bAtStrtOfFram	runtime/tcps_sess.h	/^	sbool bAtStrtOfFram;	\/* are we at the very beginning of a new frame? *\/$/;"	m	struct:tcps_sess_s
bBarChart	plugins/impstats/statslog-graph.py	/^		bBarChart = False$/;"	v
bBarChart	plugins/impstats/statslog-graph.py	/^		bBarChart = True$/;"	v
bBarChart	plugins/impstats/statslog-graph.py	/^bBarChart = False$/;"	v
bBarChart	plugins/impstats/statslog-splitter.py	/^		bBarChart = False$/;"	v
bBarChart	plugins/impstats/statslog-splitter.py	/^		bBarChart = True$/;"	v
bBarChart	plugins/impstats/statslog-splitter.py	/^bBarChart = False$/;"	v
bBinaryFile	tests/tcpflood.c	/^static int bBinaryFile = 0;	\/* is -I file binary *\/$/;"	v	file:
bBracketing	plugins/impstats/impstats.c	/^	sbool bBracketing;$/;"	m	struct:modConfData_s	file:
bCEE	plugins/impstats/impstats.c	/^	int bCEE;$/;"	m	struct:configSettings_s	file:
bCPUAffinity	tools/syncdemo.c	/^static int bCPUAffinity = 0;$/;"	v	file:
bCSV	template.h	/^				unsigned bCSV: 1;		\/* format field in CSV (RFC 4180) format *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bCSV	tools/syncdemo.c	/^static int bCSV = 0; \/* generate CSV output? *\/$/;"	v	file:
bCSVoutput	tests/tcpflood.c	/^static int bCSVoutput = 0;	\/* generate output in CSV (where applicable) *\/$/;"	v	file:
bCanRun	runtime/modules.h	/^			int bCanRun;	\/* cached value of whether willRun() succeeded *\/$/;"	m	struct:modInfo_s::__anon29::__anon30
bChainingPermitted	runtime/cfsysline.h	/^	int bChainingPermitted;			\/* may multiple handlers be chained for this command? *\/$/;"	m	struct:cslCmd_s
bChartCalcDelta	plugins/impstats/statslog-graph.py	/^		bChartCalcDelta = True$/;"	v
bChartCalcDelta	plugins/impstats/statslog-graph.py	/^bChartCalcDelta = False$/;"	v
bChartCalcDelta	plugins/impstats/statslog-splitter.py	/^		bChartCalcDelta = True$/;"	v
bChartCalcDelta	plugins/impstats/statslog-splitter.py	/^bChartCalcDelta = False$/;"	v
bChildDied	tools/rsyslogd.c	/^static int bChildDied;$/;"	v	file:
bComplexProcessing	template.h	/^	sbool bComplexProcessing; \/**< set if complex processing (options, etc) is required *\/$/;"	m	struct:templateEntry
bContParse	tools/pmrfc5424.c	/^	int bContParse = 1;$/;"	v
bConvertPng	plugins/impstats/statslog-graph.py	/^		bConvertPng = True$/;"	v
bConvertPng	plugins/impstats/statslog-graph.py	/^bConvertPng = False$/;"	v
bCopyMsg	action.h	/^	sbool	bCopyMsg;$/;"	m	struct:action_s
bCreateDirs	tools/omfile.c	/^	int	bCreateDirs;	\/* auto-create directories? *\/$/;"	m	struct:_instanceData	file:
bCreateDirs	tools/omfile.c	/^	int	bCreateDirs;\/* auto-create directories for dynaFiles: 0 - no, 1 - yes *\/$/;"	m	struct:configSettings_s	file:
bCreatePath	plugins/imuxsock/imuxsock.c	/^	int bCreatePath;		\/* auto-create socket path? *\/$/;"	m	struct:configSettings_s	file:
bCreatePath	plugins/imuxsock/imuxsock.c	/^	int bCreatePath;		\/* auto-create socket path? *\/$/;"	m	struct:instanceConf_s	file:
bCreatePath	plugins/imuxsock/imuxsock.c	/^	sbool bCreatePath;	\/* auto-creation of socket directory? *\/$/;"	m	struct:lstn_s	file:
bDAEnqOnly	runtime/queue.h	/^	int	bDAEnqOnly;	\/* EnqOnly setting for DA queue *\/$/;"	m	struct:queue_s
bDbiInitialized	plugins/omlibdbi/omlibdbi.c	/^static int bDbiInitialized = 0;	\/* dbi_initialize() can only be called one - this keeps track of it *\/$/;"	v	file:
bDebugPrintCfSysLineHandlerList	runtime/rsconf.h	/^	int bDebugPrintCfSysLineHandlerList;$/;"	m	struct:globals_s
bDebugPrintModuleList	runtime/rsconf.h	/^	int bDebugPrintModuleList;$/;"	m	struct:globals_s
bDebugPrintTemplateList	runtime/rsconf.h	/^	int bDebugPrintTemplateList;$/;"	m	struct:globals_s
bDeleteOnClose	runtime/libgcry.h	/^	int8_t bDeleteOnClose; \/* for queue support, similar to stream subsys *\/$/;"	m	struct:gcryfile_s
bDeleteOnClose	runtime/stream.h	/^	sbool bDeleteOnClose; \/* set to 1 to auto-delete on close -- be careful with that setting! *\/$/;"	m	struct:strm_s
bDestructPValsOnExit	plugins/mmnormalize/mmnormalize.c	/^	int bDestructPValsOnExit;$/;"	v
bDetectYearAfterTimestamp	tools/pmrfc3164.c	/^	int bDetectYearAfterTimestamp; \/* is ORIGIN field present? *\/$/;"	m	struct:instanceConf_s	file:
bDisableDNS	runtime/glbl.c	/^static int bDisableDNS = 0; \/* don't look up IP addresses of remote messages *\/$/;"	v	file:
bDisableLFDelim	plugins/imtcp/imtcp.c	/^	int bDisableLFDelim;$/;"	m	struct:configSettings_s	file:
bDisableLFDelim	plugins/imtcp/imtcp.c	/^	sbool bDisableLFDelim; \/* disable standard LF delimiter *\/$/;"	m	struct:modConfData_s	file:
bDisableLFDelim	runtime/tcpsrv.h	/^	int bDisableLFDelim;	\/**< if 1, standard LF frame delimiter is disabled (*very dangerous*) *\/$/;"	m	struct:tcpsrv_s
bDisabled	action.h	/^	sbool	bDisabled;$/;"	m	struct:action_s
bDisabled	runtime/stream.h	/^	sbool bDisabled; \/* should file no longer be written to? (currently set only if omfile file size limit fails) *\/$/;"	m	struct:strm_s
bDiscardOwnMsgs	plugins/imuxsock/imuxsock.c	/^	sbool bDiscardOwnMsgs;		\/* discard messages that originated from our own pid? *\/$/;"	m	struct:instanceConf_s	file:
bDiscardOwnMsgs	plugins/imuxsock/imuxsock.c	/^	sbool bDiscardOwnMsgs;	\/* discard messages that originated from ourselves *\/$/;"	m	struct:lstn_s	file:
bDiscardOwnMsgs	plugins/imuxsock/imuxsock.c	/^	sbool bDiscardOwnMsgs;$/;"	m	struct:modConfData_s	file:
bDoACLCheck	plugins/imudp/imudp.c	/^static int bDoACLCheck;			\/* are ACL checks neeed? Cached once immediately before listener startup *\/$/;"	v	file:
bDoAutoCommit	runtime/wti.h	/^		uint8_t bDoAutoCommit; \/* do a commit after each message$/;"	m	struct:wti_s::__anon63
bDoPRIParsing	runtime/parser.h	/^	sbool bDoPRIParsing;	\/* do standard PRI parsing before calling parser? *\/$/;"	m	struct:parser_s
bDoSanitazion	runtime/parser.h	/^	sbool bDoSanitazion;	\/* do standard message sanitazion before calling parser? *\/$/;"	m	struct:parser_s
bDoTimedWait	runtime/stream.h	/^	sbool bDoTimedWait;	\/* instruct writer thread to do a times wait to support flush timeouts *\/$/;"	m	struct:strm_s
bDropCC	template.h	/^				unsigned bDropCC: 1;		\/* drop control characters? *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bDropLastLF	template.h	/^				unsigned bDropLastLF: 1;	\/* drop last LF char in msg (PIX!) *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bDropMalPTRMsgs	runtime/glbl.c	/^static int bDropMalPTRMsgs = 0;\/* Drop messages which have malicious PTR records during DNS lookup *\/$/;"	v	file:
bDropTrailingLF	runtime/glbl.c	/^static int bDropTrailingLF = 1; \/* drop trailing LF's on reception? *\/$/;"	v	file:
bDynamicName	tools/omfile.c	/^	char	bDynamicName;	\/* 0 - static name, 1 - dynamic name (with properties) *\/$/;"	m	struct:_instanceData	file:
bEchoStdout	plugins/omtesting/omtesting.c	/^	int	bEchoStdout;$/;"	m	struct:_instanceData	file:
bEchoStdout	plugins/omtesting/omtesting.c	/^	int bEchoStdout;	\/* echo non-failed messages to stdout *\/$/;"	m	struct:configSettings_s	file:
bEmitMsgOnClose	plugins/imptcp/imptcp.c	/^	int bEmitMsgOnClose;		\/* emit an informational message on close by remote peer *\/$/;"	m	struct:configSettings_s	file:
bEmitMsgOnClose	plugins/imptcp/imptcp.c	/^	int bEmitMsgOnClose;$/;"	m	struct:instanceConf_s	file:
bEmitMsgOnClose	plugins/imptcp/imptcp.c	/^	sbool bEmitMsgOnClose;$/;"	m	struct:ptcpsrv_s	file:
bEmitMsgOnClose	plugins/imtcp/imtcp.c	/^	int bEmitMsgOnClose;$/;"	m	struct:configSettings_s	file:
bEmitMsgOnClose	plugins/imtcp/imtcp.c	/^	sbool bEmitMsgOnClose; \/* emit an informational message on close by remote peer *\/$/;"	m	struct:modConfData_s	file:
bEmitMsgOnClose	runtime/tcpsrv.h	/^	sbool bEmitMsgOnClose;	\/**< emit an informational message when the remote peer closes connection *\/$/;"	m	struct:tcpsrv_s
bEnableBody	plugins/ommail/ommail.c	/^	int bEnableBody; \/* should a mail body be generated? (set to 0 eg for SMS gateways) *\/$/;"	m	struct:configSettings_s	file:
bEnableBody	plugins/ommail/ommail.c	/^	sbool bEnableBody; \/* is a body configured? (if so, it is the second string provided by rsyslog core) *\/$/;"	m	struct:_instanceData	file:
bEnableCharts	plugins/impstats/statslog-splitter.py	/^		bEnableCharts = True$/;"	v
bEnableCharts	plugins/impstats/statslog-splitter.py	/^bEnableCharts = False$/;"	v
bEnableSync	tools/omfile.c	/^	int	bEnableSync;\/* enable syncing of files (no dash in front of pathname in conf): 0 - no, 1 - yes *\/$/;"	m	struct:configSettings_s	file:
bEnableTLS	plugins/imrelp/imrelp.c	/^	sbool bEnableTLS;$/;"	m	struct:instanceConf_s	file:
bEnableTLS	plugins/omrelp/omrelp.c	/^	sbool bEnableTLS;$/;"	m	struct:_instanceData	file:
bEnableTLSZip	plugins/imrelp/imrelp.c	/^	sbool bEnableTLSZip;$/;"	m	struct:instanceConf_s	file:
bEnableTLSZip	plugins/omrelp/omrelp.c	/^	sbool bEnableTLSZip;$/;"	m	struct:_instanceData	file:
bEnqOnly	runtime/queue.h	/^	sbool	bEnqOnly;	\/* does queue run in enqueue-only mode (1) or not (0)? *\/$/;"	m	struct:queue_s
bEnsureLFEnding	plugins/omstdout/omstdout.c	/^	int bEnsureLFEnding;		\/* ensure that a linefeed is written at the end of EACH record (test aid for nettester) *\/$/;"	m	struct:_instanceData	file:
bEnsureLFEnding	plugins/omstdout/omstdout.c	/^	int bEnsureLFEnding;		\/* shall action use array instead of string template interface? *\/$/;"	m	struct:configSettings_s	file:
bErr	plugins/omgssapi/omgssapi.c	/^	int bErr;$/;"	v
bErr	plugins/omrelp/omrelp.c	/^	int bErr;$/;"	v
bErrMsgPermitted	plugins/ommongodb/ommongodb.c	/^	int bErrMsgPermitted;	\/* only one errmsg permitted per connection *\/$/;"	m	struct:_instanceData	file:
bErrMsgToStderr	runtime/rsconf.h	/^	int bErrMsgToStderr;	\/* print error messages to stderr$/;"	m	struct:globals_s
bEscape8BitChars	runtime/glbl.c	/^static int bEscape8BitChars = 0; \/* escape characters > 127 on reception: 0 - no, 1 - yes *\/$/;"	v	file:
bEscapeCC	template.h	/^				unsigned bEscapeCC: 1;		\/* escape control characters? *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bEscapeCCOnRcv	runtime/glbl.c	/^static int bEscapeCCOnRcv = 1; \/* escape control characters on reception: 0 - no, 1 - yes *\/$/;"	v	file:
bEscapeTab	runtime/glbl.c	/^static int bEscapeTab = 1; \/* escape tab control character when doing CC escapes: 0 - no, 1 - yes *\/$/;"	v	file:
bEvictedMsgs	plugins/impstats/statslog-analyzer.py	/^		bEvictedMsgs = False$/;"	v
bExecWhenPrevSusp	action.h	/^	sbool	bExecWhenPrevSusp;\/* execute only when previous action is suspended? *\/$/;"	m	struct:action_s
bFailOnChown	tools/omfile.c	/^	int	bFailOnChown;	\/* fail creation if chown fails? *\/$/;"	m	struct:_instanceData	file:
bFailOnChown	tools/omfile.c	/^	int	bFailOnChown;	\/* fail if chown fails? *\/$/;"	m	struct:configSettings_s	file:
bFailed	plugins/omtesting/omtesting.c	/^	int	bFailed;	\/* indicates if we are already in failed state - this is necessary$/;"	m	struct:_instanceData	file:
bFailedMsgs	plugins/impstats/statslog-analyzer.py	/^		bFailedMsgs = False$/;"	v
bFilledLineChart	plugins/impstats/statslog-graph.py	/^		bFilledLineChart = True$/;"	v
bFilledLineChart	plugins/impstats/statslog-graph.py	/^bFilledLineChart = False$/;"	v
bFilledLineChart	plugins/impstats/statslog-splitter.py	/^		bFilledLineChart = True$/;"	v
bFilledLineChart	plugins/impstats/statslog-splitter.py	/^bFilledLineChart = False$/;"	v
bFinished	tools/rsyslogd.c	/^int bFinished = 0;	\/* used by termination signal handler, read-only except there$/;"	v
bFirstRegexpErrmsg	template.c	/^static int bFirstRegexpErrmsg = 1; \/**< did we already do a "can't load regexp" error message? *\/$/;"	v	file:
bFixedWidth	template.h	/^				unsigned bFixedWidth: 1;	\/* space pad to toChar if string is shorter *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bFlushOnTXEnd	tools/omfile.c	/^	sbool	bFlushOnTXEnd;		\/* flush write buffers when transaction has ended? *\/$/;"	m	struct:_instanceData	file:
bFlushOnTXEnd	tools/omfile.c	/^	sbool	bFlushOnTXEnd;\/* flush write buffers when transaction has ended? *\/$/;"	m	struct:configSettings_s	file:
bForceSingleInst	plugins/mmexternal/mmexternal.c	/^	int bForceSingleInst;	\/* only a single wrkr instance of program permitted? *\/$/;"	m	struct:_instanceData	file:
bForceSingleInst	plugins/omprog/omprog.c	/^	int bForceSingleInst;	\/* only a single wrkr instance of program permitted? *\/$/;"	m	struct:_instanceData	file:
bFromPosEndRelative	template.h	/^				unsigned bFromPosEndRelative: 1;\/* is From\/To-Pos relative to end of string? *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bGlblSrvrInitDone	runtime/nsd_gtls.c	/^static int bGlblSrvrInitDone = 0;	\/**< 0 - server global init not yet done, 1 - already done *\/$/;"	v	file:
bHadAuthFail	plugins/omrelp/omrelp.c	/^	sbool bHadAuthFail;	\/**< set on auth failure, will cause retry to disable action *\/$/;"	m	struct:_instanceData	file:
bHadAutoCommit	action.h	/^	sbool	bHadAutoCommit;	\/* did an auto-commit happen during doAction()? *\/$/;"	m	struct:action_s
bHadBitsErr	plugins/mmanon/mmanon.c	/^	sbool bHadBitsErr;$/;"	v
bHadErrMsgs	runtime/errmsg.c	/^static int bHadErrMsgs; \/* indicates if we had error messages since reset of this flag$/;"	v	file:
bHadError	tools/ompipe.c	/^	sbool	bHadError;	\/* did we already have\/report an error on this pipe? *\/$/;"	m	struct:_instanceData	file:
bHadHUP	tools/rsyslogd.c	/^static int bHadHUP;$/;"	v	file:
bHadWarning	tools/omusrmsg.c	/^	int bHadWarning;$/;"	v
bHaveMainQueue	tools/rsyslogd.c	/^int bHaveMainQueue = 0;\/* set to 1 if the main queue - in queueing mode - is available$/;"	v
bHaveSess	runtime/nsd_gtls.h	/^	int bHaveSess;		\/* as we don't know exactly which gnutls_session values are invalid, we use this one$/;"	m	struct:nsd_gtls_s
bHaveSubject	plugins/ommail/ommail.c	/^	sbool bHaveSubject; \/* is a subject configured? (if so, it is the second string provided by rsyslog core) *\/$/;"	m	struct:_instanceData	file:
bHaveSubtree	template.h	/^	sbool bHaveSubtree;$/;"	m	struct:__anon68
bHelpOutput	plugins/impstats/statslog-analyzer.py	/^		bHelpOutput = True$/;"	v
bHelpOutput	plugins/impstats/statslog-analyzer.py	/^bHelpOutput = False$/;"	v
bHelpOutput	plugins/impstats/statslog-graph.py	/^		bHelpOutput = True$/;"	v
bHelpOutput	plugins/impstats/statslog-graph.py	/^bHelpOutput = False$/;"	v
bHelpOutput	plugins/impstats/statslog-splitter.py	/^		bHelpOutput = True$/;"	v
bHelpOutput	plugins/impstats/statslog-splitter.py	/^bHelpOutput = False$/;"	v
bIgnorePrevious	plugins/imjournal/imjournal.c	/^	int bIgnorePrevious;$/;"	m	struct:configSettings_s	file:
bIgnoreTimestamp	plugins/imuxsock/imuxsock.c	/^	int bIgnoreTimestamp;		\/* ignore timestamps present in the incoming message? *\/$/;"	m	struct:configSettings_s	file:
bIgnoreTimestamp	plugins/imuxsock/imuxsock.c	/^	sbool bIgnoreTimestamp;		\/* ignore timestamps present in the incoming message? *\/$/;"	m	struct:instanceConf_s	file:
bIgnoreTimestamp	plugins/imuxsock/imuxsock.c	/^	sbool bIgnoreTimestamp;		\/* ignore timestamps present in the incoming message? *\/$/;"	m	struct:modConfData_s	file:
bIgnoreTimestampSysSock	plugins/imuxsock/imuxsock.c	/^	int bIgnoreTimestampSysSock;$/;"	m	struct:configSettings_s	file:
bInBlk	runtime/librsgt.h	/^	uint64_t bInBlk;    \/* are we currently inside a blk --> need to finish on close *\/$/;"	m	struct:gtfile_s
bInBlk	runtime/librsksi.h	/^	uint64_t bInBlk;    \/* are we currently inside a blk --> need to finish on close *\/$/;"	m	struct:ksifile_s
bInQuotes	plugins/mmexternal/mmexternal.c	/^	sbool bInQuotes;$/;"	v
bInQuotes	plugins/omprog/omprog.c	/^	sbool bInQuotes;$/;"	v
bInRecord	runtime/stream.h	/^	sbool bInRecord;	\/* if 1, indicates that we are currently writing a not-yet complete record *\/$/;"	m	struct:strm_s
bInitialConnect	plugins/omrelp/omrelp.c	/^	int bInitialConnect; \/* is this the initial connection request of our module? (0-no, 1-yes) *\/$/;"	m	struct:wrkrInstanceData	file:
bIsActive	threads.h	/^	int bIsActive;		\/* Is thread running? *\/$/;"	m	struct:thrdInfo
bIsConnected	plugins/omrelp/omrelp.c	/^	int bIsConnected; \/* currently connected to server? 0 - no, 1 - yes *\/$/;"	m	struct:wrkrInstanceData	file:
bIsConnected	tools/omfwd.c	/^	int bIsConnected;  \/* are we connected to remote host? 0 - no, 1 - yes, UDP means addr resolved *\/$/;"	m	struct:wrkrInstanceData	file:
bIsDA	runtime/queue.h	/^	int bIsDA;		\/* is this queue disk assisted? *\/$/;"	m	struct:queue_s
bIsInitiator	runtime/nsd_gtls.h	/^	int bIsInitiator;	\/**< 0 if socket is the server end (listener), 1 if it is the initiator *\/$/;"	m	struct:nsd_gtls_s
bIsOpen	plugins/omkafka/omkafka.c	/^	int bIsOpen;$/;"	m	struct:_instanceData	file:
bIsRunning	plugins/mmexternal/mmexternal.c	/^	int bIsRunning;		\/* is binary currently running? 0-no, 1-yes *\/$/;"	m	struct:wrkrInstanceData	file:
bIsRunning	plugins/omprog/omprog.c	/^	int bIsRunning;		\/* is binary currently running? 0-no, 1-yes *\/$/;"	m	struct:wrkrInstanceData	file:
bIsRunning	runtime/wti.h	/^	int bIsRunning;	\/* is this thread currently running? (must be int for atomic op!) *\/$/;"	m	struct:wti_s
bIsTTY	runtime/stream.h	/^	sbool	bIsTTY;		\/* is this a tty file? *\/$/;"	m	struct:strm_s
bIsWall	tools/omusrmsg.c	/^	int bIsWall; \/* 1- is wall, 0 - individual users *\/$/;"	m	struct:_instanceData	file:
bJSON	plugins/impstats/impstats.c	/^	int bJSON;$/;"	m	struct:configSettings_s	file:
bJSON	template.h	/^				unsigned bJSON: 1;		\/* format field JSON escaped *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bJSONPassingSupported	plugins/ommongodb/ommongodb.c	/^	int bJSONPassingSupported;$/;"	v
bJSONf	template.h	/^				unsigned bJSONf: 1;		\/* format field JSON *field* (n\/v pair) *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bJSONfr	template.h	/^				unsigned bJSONfr: 1;		\/* format field JSON *field* non escaped (n\/v pair) *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bJSONr	template.h	/^				unsigned bJSONr: 1;		\/* format field JSON non escaped *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bJustResumed	runtime/wti.h	/^		unsigned bJustResumed : 1;$/;"	m	struct:actWrkrInfo::__anon59
bKeepAlive	plugins/imgssapi/imgssapi.c	/^static int bKeepAlive = 0; \/* use SO_KEEPALIVE? *\/$/;"	v	file:
bKeepAlive	plugins/imptcp/imptcp.c	/^	int bKeepAlive;			\/* support keep-alive packets *\/$/;"	m	struct:configSettings_s	file:
bKeepAlive	plugins/imptcp/imptcp.c	/^	int bKeepAlive;			\/* support keep-alive packets *\/$/;"	m	struct:instanceConf_s	file:
bKeepAlive	plugins/imptcp/imptcp.c	/^	sbool bKeepAlive;		\/* support keep-alive packets *\/$/;"	m	struct:ptcpsrv_s	file:
bKeepAlive	plugins/imrelp/imrelp.c	/^	sbool bKeepAlive;		\/* support keep-alive packets *\/$/;"	m	struct:instanceConf_s	file:
bKeepAlive	plugins/imtcp/imtcp.c	/^	int bKeepAlive;$/;"	m	struct:configSettings_s	file:
bKeepAlive	plugins/imtcp/imtcp.c	/^	sbool bKeepAlive;$/;"	m	struct:modConfData_s	file:
bKeepAlive	tools/omfwd.c	/^	int bKeepAlive;$/;"	m	struct:configSettings_s	file:
bKeepAlive	tools/omfwd.c	/^	sbool bKeepAlive;$/;"	m	struct:_instanceData	file:
bKeepKernelStamp	plugins/imklog/imklog.c	/^	int bKeepKernelStamp; \/* keep the kernel timestamp in the message *\/$/;"	m	struct:configSettings_s	file:
bKeepKernelStamp	plugins/imklog/imklog.h	/^	sbool bKeepKernelStamp;$/;"	m	struct:modConfData_s
bKeepRecordHashes	runtime/librsgt.h	/^	uint8_t bKeepRecordHashes;$/;"	m	struct:gtctx_s
bKeepRecordHashes	runtime/librsgt.h	/^	uint8_t bKeepRecordHashes;$/;"	m	struct:gtfile_s
bKeepRecordHashes	runtime/librsksi.h	/^	uint8_t bKeepRecordHashes;$/;"	m	struct:ksifile_s
bKeepRecordHashes	runtime/librsksi.h	/^	uint8_t bKeepRecordHashes;$/;"	m	struct:rsksictx_s
bKeepTreeHashes	runtime/librsgt.h	/^	uint8_t bKeepTreeHashes;$/;"	m	struct:gtctx_s
bKeepTreeHashes	runtime/librsgt.h	/^	uint8_t bKeepTreeHashes;$/;"	m	struct:gtfile_s
bKeepTreeHashes	runtime/librsksi.h	/^	uint8_t bKeepTreeHashes;$/;"	m	struct:ksifile_s
bKeepTreeHashes	runtime/librsksi.h	/^	uint8_t bKeepTreeHashes;$/;"	m	struct:rsksictx_s
bLegacyCnfModGlobalsPermitted	contrib/imkmsg/imkmsg.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/imfile/imfile.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/imjournal/imjournal.c	/^	bLegacyCnfModGlobalsPermitted = 1;$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imjournal/imjournal.c	/^static int bLegacyCnfModGlobalsPermitted = 1;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/imklog/imklog.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/immark/immark.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/impstats/impstats.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/imptcp/imptcp.c	/^				   NULL, &cs.wrkrMax, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imptcp/imptcp.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/imrelp/imrelp.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bDisableLFDelim, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bEmitMsgOnClose, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bKeepAlive, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bSuppOctetFram, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.bUseFlowControl, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iAddtlFrameDelim, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iKeepAliveIntvl, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iKeepAliveProbes, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iKeepAliveTime, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iStrmDrvrMode, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iTCPLstnMax, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.iTCPSessMax, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^			   NULL, &cs.pszStrmDrvrAuthMode, STD_LOADABLE_MODULE_ID, &bLegacyCnfModGlobalsPermitted));$/;"	v
bLegacyCnfModGlobalsPermitted	plugins/imtcp/imtcp.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/imudp/imudp.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/imuxsock/imuxsock.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLegacyCnfModGlobalsPermitted	plugins/omlibdbi/omlibdbi.c	/^static int bLegacyCnfModGlobalsPermitted;\/* are legacy module-global config parameters permitted? *\/$/;"	v	file:
bLineChart	plugins/impstats/statslog-graph.py	/^		bLineChart = False$/;"	v
bLineChart	plugins/impstats/statslog-graph.py	/^		bLineChart = True$/;"	v
bLineChart	plugins/impstats/statslog-graph.py	/^bLineChart = True$/;"	v
bLineChart	plugins/impstats/statslog-splitter.py	/^		bLineChart = False$/;"	v
bLineChart	plugins/impstats/statslog-splitter.py	/^		bLineChart = True$/;"	v
bLineChart	plugins/impstats/statslog-splitter.py	/^bLineChart = True$/;"	v
bLogAllocFree	runtime/debug.c	/^static int bLogAllocFree = 0; \/* shall calls to (m\/c)alloc and free be logged to the debug log? *\/$/;"	v	file:
bLogFuncFlow	runtime/debug.c	/^static int bLogFuncFlow = 0; \/* shall the function entry and exit be logged to the debug log? *\/$/;"	v	file:
bLogProcessed	plugins/impstats/statslog-analyzer.py	/^					bLogProcessed = True$/;"	v
bLogProcessed	plugins/impstats/statslog-analyzer.py	/^			bLogProcessed = False$/;"	v
bLogProcessed	plugins/impstats/statslog-splitter.py	/^					bLogProcessed = True$/;"	v
bLogProcessed	plugins/impstats/statslog-splitter.py	/^			bLogProcessed = False$/;"	v
bLogStatusMsgs	runtime/rsconf.h	/^	int bLogStatusMsgs;	\/* log rsyslog start\/stop\/HUP messages? *\/$/;"	m	struct:globals_s
bLogToSyslog	plugins/impstats/impstats.c	/^	sbool bLogToSyslog;$/;"	m	struct:modConfData_s	file:
bLogarithmicChart	plugins/impstats/statslog-graph.py	/^		bLogarithmicChart = True$/;"	v
bLogarithmicChart	plugins/impstats/statslog-graph.py	/^bLogarithmicChart = False$/;"	v
bLogarithmicChart	plugins/impstats/statslog-splitter.py	/^		bLogarithmicChart = True$/;"	v
bLogarithmicChart	plugins/impstats/statslog-splitter.py	/^bLogarithmicChart = False$/;"	v
bMainMsgQSaveOnShutdown	runtime/rsconf.h	/^	int bMainMsgQSaveOnShutdown;	\/* save queue on shutdown (when DA enabled)? *\/$/;"	m	struct:queuecnf_s
bMainMsgQSyncQeueFiles	runtime/rsconf.h	/^	int bMainMsgQSyncQeueFiles;	\/* sync queue files on every write? *\/$/;"	m	struct:queuecnf_s
bMandatory	template.h	/^				unsigned bMandatory: 1;		\/* mandatory field - emit even if empty *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bMsgPassingSupported	contrib/mmgrok/mmgrok.c	/^	int bMsgPassingSupported;$/;"	v
bMsgPassingSupported	plugins/mmaudit/mmaudit.c	/^	bMsgPassingSupported = 0;$/;"	v
bMsgPassingSupported	plugins/mmaudit/mmaudit.c	/^	int bMsgPassingSupported;$/;"	v
bMsgPassingSupported	plugins/mmjsonparse/mmjsonparse.c	/^	int bMsgPassingSupported;$/;"	v
bMsgPassingSupported	plugins/mmnormalize/mmnormalize.c	/^	int bMsgPassingSupported;$/;"	v
bMsgPassingSupported	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	bMsgPassingSupported = 0;$/;"	v
bMsgPassingSupported	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	int bMsgPassingSupported;$/;"	v
bMsgPassingSupported	plugins/omruleset/omruleset.c	/^	bMsgPassingSupported = 0;$/;"	v
bMsgPassingSupported	plugins/omruleset/omruleset.c	/^	int bMsgPassingSupported;		\/* does core support template passing as an array? *\/$/;"	v
bNeedDelQIF	runtime/queue.h	/^	sbool	bNeedDelQIF;	\/* does the QIF file need to be deleted when queue becomes empty? *\/$/;"	m	struct:queue_s
bNeedReleaseBatch	action.h	/^	sbool	bNeedReleaseBatch; \/* do we need to release batch ressources? Depends on ParamPassig modes... *\/$/;"	m	struct:action_s
bNeedsCancel	threads.h	/^	sbool bNeedsCancel;	\/* must input be terminated by pthread_cancel()? *\/$/;"	m	struct:thrdInfo
bNoTimeCache	runtime/ratelimit.h	/^	sbool bNoTimeCache;	\/**< if we shall not used cached reception time *\/$/;"	m	struct:ratelimit_s
bOmitLocalLogging	plugins/imuxsock/imuxsock.c	/^	int bOmitLocalLogging;$/;"	m	struct:configSettings_s	file:
bOmitLocalLogging	plugins/imuxsock/imuxsock.c	/^	sbool bOmitLocalLogging;$/;"	m	struct:modConfData_s	file:
bOptimizeUniProc	runtime/glbl.c	/^static int bOptimizeUniProc = 1;	\/* enable uniprocessor optimizations *\/$/;"	v	file:
bOriginPresent	plugins/pmciscoios/pmciscoios.c	/^	int bOriginPresent; \/* is ORIGIN field present? *\/$/;"	m	struct:instanceConf_s	file:
bOurCertIsInit	runtime/nsd_gtls.h	/^	short	bOurCertIsInit;	\/**< 1 if our certificate is initialized and must be deinit on destruction *\/$/;"	m	struct:nsd_gtls_s
bOurKeyIsInit	runtime/nsd_gtls.h	/^	short	bOurKeyIsInit;	\/**< 1 if our private key is initialized and must be deinit on destruction *\/$/;"	m	struct:nsd_gtls_s
bOutputTidToStderr	runtime/debug.c	/^static int bOutputTidToStderr = 0;\/* output TID to stderr on thread creation *\/$/;"	v	file:
bParseHOSTNAMEandTAG	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	/^static int bParseHOSTNAMEandTAG;	\/* cache for the equally-named global param - performance enhancement *\/$/;"	v	file:
bParseHOSTNAMEandTAG	contrib/pmcisconames/pmcisconames.c	/^static int bParseHOSTNAMEandTAG;	\/* cache for the equally-named global param - performance enhancement *\/$/;"	v	file:
bParseHOSTNAMEandTAG	contrib/pmpanngfw/pmpanngfw.c	/^static int bParseHOSTNAMEandTAG;    \/* cache for the equally-named global param - performance enhancement *\/$/;"	v	file:
bParseHOSTNAMEandTAG	contrib/pmsnare/pmsnare.c	/^static int bParseHOSTNAMEandTAG;	\/* cache for the equally-named global param - performance enhancement *\/$/;"	v	file:
bParseHOSTNAMEandTAG	plugins/pmlastmsg/pmlastmsg.c	/^static int bParseHOSTNAMEandTAG;	\/* cache for the equally-named global param - performance enhancement *\/$/;"	v	file:
bParseHOSTNAMEandTAG	runtime/glbl.c	/^static int bParseHOSTNAMEandTAG = 1;	\/* parser modification (based on startup params!) *\/$/;"	v	file:
bParseHOSTNAMEandTAG	tools/pmrfc3164.c	/^static int bParseHOSTNAMEandTAG;	\/* cache for the equally-named global param - performance enhancement *\/$/;"	v	file:
bParseHost	plugins/imuxsock/imuxsock.c	/^	int bParseHost;$/;"	m	struct:modConfData_s	file:
bParseHost	plugins/imuxsock/imuxsock.c	/^	sbool bParseHost;	\/* should parser parse host name?  read-only after startup *\/$/;"	m	struct:lstn_s	file:
bParseHost	plugins/imuxsock/imuxsock.c	/^	sbool bParseHost;$/;"	m	struct:instanceConf_s	file:
bParseKernelStamp	plugins/imklog/imklog.c	/^	int bParseKernelStamp; \/* if try to parse kernel timestamps for message time *\/$/;"	m	struct:configSettings_s	file:
bParseKernelStamp	plugins/imklog/imklog.h	/^	sbool bParseKernelStamp;$/;"	m	struct:modConfData_s
bParseSuccess	runtime/msg.h	/^	sbool	bParseSuccess;	\/* set to reflect state of last executed higher level parser *\/$/;"	m	struct:msg
bParseTrusted	plugins/imuxsock/imuxsock.c	/^	int bParseTrusted;		\/* parse trusted properties *\/$/;"	m	struct:configSettings_s	file:
bParseTrusted	plugins/imuxsock/imuxsock.c	/^	int bParseTrusted;		\/* parse trusted properties *\/$/;"	m	struct:instanceConf_s	file:
bParseTrusted	plugins/imuxsock/imuxsock.c	/^	int bParseTrusted;$/;"	m	struct:modConfData_s	file:
bParseTrusted	plugins/imuxsock/imuxsock.c	/^	sbool bParseTrusted;	\/* parse trusted properties *\/$/;"	m	struct:lstn_s	file:
bParserEscapeCCCStyle	runtime/glbl.c	/^static int bParserEscapeCCCStyle = 0; \/* escape control characters in c style: 0 - no, 1 - yes *\/$/;"	v	file:
bPermitNonKernel	contrib/imkmsg/imkmsg.h	/^	sbool bPermitNonKernel;$/;"	m	struct:modConfData_s
bPermitNonKernel	plugins/imklog/imklog.c	/^	int bPermitNonKernel; \/* permit logging of messages not having LOG_KERN facility *\/$/;"	m	struct:configSettings_s	file:
bPermitNonKernel	plugins/imklog/imklog.h	/^	sbool bPermitNonKernel;$/;"	m	struct:modConfData_s
bPermitPlainTcp	plugins/imgssapi/imgssapi.c	/^static int bPermitPlainTcp = 0; \/* plain tcp syslog allowed on GSSAPI port? *\/$/;"	v	file:
bPermitSquareBracketsInHostname	tools/pmrfc3164.c	/^	int bPermitSquareBracketsInHostname; \/* is ORIGIN field present? *\/$/;"	m	struct:instanceConf_s	file:
bPreserveFQDN	runtime/glbl.c	/^static int bPreserveFQDN = 0;		\/* should FQDNs always be preserved? *\/$/;"	v	file:
bPrevWasNL	runtime/stream.h	/^	sbool bPrevWasNL; \/* used for readLine() when reading multi-line messages *\/$/;"	m	struct:strm_s
bPrevWasSuspended	runtime/wti.h	/^		uint8_t bPrevWasSuspended;$/;"	m	struct:wti_s::__anon63
bPrintAllDebugOnExit	runtime/debug.c	/^static int bPrintAllDebugOnExit = 0;$/;"	v	file:
bPrintFuncDBOnExit	runtime/debug.c	/^static int bPrintFuncDBOnExit = 0; \/* shall the function entry and exit be logged to the debug log? *\/$/;"	v	file:
bPrintMutexAction	runtime/debug.c	/^static int bPrintMutexAction = 0; \/* shall mutex calls be printed to the debug log? *\/$/;"	v	file:
bPrintTime	runtime/debug.c	/^static int bPrintTime = 1;	\/* print a timestamp together with debug message *\/$/;"	v	file:
bProcessInternalMessages	runtime/glbl.c	/^int bProcessInternalMessages = 1;	\/* Should rsyslog itself process internal messages?$/;"	v
bQueueStarted	runtime/queue.h	/^	sbool	bQueueStarted;	\/* has queueStart() been called on this queue? 1-yes, 0-no *\/$/;"	m	struct:queue_s
bRMStateOnDel	plugins/imfile/imfile.c	/^	sbool bRMStateOnDel;$/;"	m	struct:instanceConf_s	file:
bRMStateOnDel	plugins/imfile/imfile.c	/^	sbool bRMStateOnDel;$/;"	m	struct:lstn_s	file:
bRandConnDrop	tests/tcpflood.c	/^static int bRandConnDrop = 0; \/* randomly drop connections? *\/$/;"	v	file:
bRandomizeExtraData	tests/tcpflood.c	/^static int bRandomizeExtraData = 0; \/* randomize amount of extra data added *\/$/;"	v	file:
bReduceRepeatMsgs	runtime/ratelimit.h	/^	int bReduceRepeatMsgs; \/**< shall we do "last message repeated n times" processing? *\/$/;"	m	struct:ratelimit_s
bReduceRepeatMsgs	runtime/rsconf.h	/^	int bReduceRepeatMsgs; \/* reduce repeated message - 0 - no, 1 - yes *\/$/;"	m	struct:globals_s
bReduceRepeatMsgs	tests/runtime-dummy.c	/^int bReduceRepeatMsgs = 0;$/;"	v
bRepMsgHasMsg	action.h	/^	sbool	bRepMsgHasMsg;	\/* "message repeated..." has msg fragment in it (0-no, 1-yes) *\/$/;"	m	struct:action_s
bReportAuthErr	runtime/nsd_gtls.h	/^	int bReportAuthErr;	\/* only the first auth error is to be reported, this var triggers it. Initially, it is$/;"	m	struct:nsd_gtls_s
bReportErrs	plugins/omkafka/omkafka.c	/^	int bReportErrs;$/;"	m	struct:_instanceData	file:
bReportLibnetInitErr	plugins/omudpspoof/omudpspoof.c	/^	int	bReportLibnetInitErr; \/* help prevent multiple error messages on init err *\/$/;"	m	struct:_instanceData	file:
bReportSuspension	action.h	/^	sbool	bReportSuspension;\/* should suspension (and reactivation) of the action reported *\/$/;"	m	struct:action_s
bReportSuspensionCont	action.h	/^	sbool	bReportSuspensionCont;$/;"	m	struct:action_s
bResendLastOnRecon	runtime/tcpclt.h	/^	short bResendLastOnRecon; \/* should the last message be resent on a successful reconnect? *\/$/;"	m	struct:tcpclt_s
bResendLastOnRecon	tools/omfwd.c	/^	int bResendLastOnRecon; \/* should the last message be re-sent on a successful reconnect? *\/$/;"	m	struct:_instanceData	file:
bResendLastOnRecon	tools/omfwd.c	/^	int bResendLastOnRecon; \/* should the last message be re-sent on a successful reconnect? *\/$/;"	m	struct:configSettings_s	file:
bResetCtrs	plugins/impstats/impstats.c	/^	sbool bResetCtrs;$/;"	m	struct:modConfData_s	file:
bSPFramingFix	plugins/imptcp/imptcp.c	/^	int bSPFramingFix;$/;"	m	struct:instanceConf_s	file:
bSPFramingFix	plugins/imptcp/imptcp.c	/^	sbool bSPFramingFix;$/;"	m	struct:ptcplstn_s	file:
bSPFramingFix	plugins/imptcp/imptcp.c	/^	sbool bSPFramingFix;$/;"	m	struct:ptcpsess_s	file:
bSPFramingFix	plugins/imptcp/imptcp.c	/^	sbool bSPFramingFix;$/;"	m	struct:ptcpsrv_s	file:
bSPFramingFix	plugins/imtcp/imtcp.c	/^	sbool bSPFramingFix;$/;"	m	struct:instanceConf_s	file:
bSPFramingFix	runtime/tcps_sess.h	/^	sbool bSPFramingFix;$/;"	m	struct:tcps_sess_s
bSPFramingFix	runtime/tcpsrv.h	/^	sbool bSPFramingFix;	\/**< support work-around for broken Cisco ASA framing? *\/$/;"	m	struct:tcpLstnPortList_s
bSPFramingFix	runtime/tcpsrv.h	/^	sbool bSPFramingFix;	\/**< support work-around for broken Cisco ASA framing? *\/$/;"	m	struct:tcpsrv_s
bSPIffNo1stSP	template.h	/^				unsigned bSPIffNo1stSP: 1;	\/* be a space if 1st pos if field is no space*\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bSaveOnShutdown	runtime/queue.h	/^	sbool	bSaveOnShutdown;\/* persists everthing on shutdown (if DA!)? 1-yes, 0-no *\/$/;"	m	struct:queue_s
bSecPathDrop	template.h	/^				unsigned bSecPathDrop: 1;	\/* drop slashes, replace dots, empty string *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bSecPathReplace	template.h	/^				unsigned bSecPathReplace: 1;	\/* replace slashes, replace dots, empty string *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bSendToAll	tools/omfwd.c	/^	int bSendToAll;$/;"	m	struct:_instanceData	file:
bSetModCnfCalled	runtime/modules.h	/^	sbool		bSetModCnfCalled;\/* is setModCnf already called? Needed for built-in modules *\/$/;"	m	struct:modInfo_s
bShallStop	threads.h	/^	int bShallStop;		\/* set to 1 if the thread should be stopped ? *\/$/;"	m	struct:thrdInfo
bShowProgress	tests/tcpflood.c	/^static int bShowProgress = 1; \/* show progress messages *\/$/;"	v	file:
bShutdownImmediate	runtime/queue.h	/^	int	bShutdownImmediate; \/* should all workers cease processing messages? *\/$/;"	m	struct:queue_s
bSilent	tests/tcpflood.c	/^static int bSilent = 0; \/* completely silent operation *\/$/;"	v	file:
bSingleObjectOutput	plugins/impstats/statslog-splitter.py	/^		bSingleObjectOutput = True$/;"	v
bSingleObjectOutput	plugins/impstats/statslog-splitter.py	/^bSingleObjectOutput = True$/;"	v
bSpaceCC	template.h	/^				unsigned bSpaceCC: 1;		\/* change control characters to spaceescape? *\/$/;"	m	struct:templateEntry::__anon69::__anon71::__anon72
bSpaceLFOnRcv	runtime/glbl.c	/^static int bSpaceLFOnRcv = 0; \/* replace newlines with spaces on reception: 0 - no, 1 - yes *\/$/;"	v	file:
bStartRun	tools/syncdemo.c	/^static volatile int bStartRun = 0; \/* indicate to flag when threads should start *\/$/;"	v	file:
bStatsRecords	tests/tcpflood.c	/^static int bStatsRecords = 0;	\/* generate stats records *\/$/;"	v	file:
bStopWriter	runtime/stream.h	/^	sbool bStopWriter;	\/* shall writer thread terminate? *\/$/;"	m	struct:strm_s
bSuccess	plugins/mmaudit/mmaudit.c	/^	int bSuccess = 0;$/;"	v
bSuccess	plugins/mmjsonparse/mmjsonparse.c	/^	int bSuccess = 0;$/;"	v
bSuppOctetFram	plugins/imptcp/imptcp.c	/^	int bSuppOctetFram;		\/* support octet-counted framing? *\/$/;"	m	struct:configSettings_s	file:
bSuppOctetFram	plugins/imptcp/imptcp.c	/^	int bSuppOctetFram;		\/* support octet-counted framing? *\/$/;"	m	struct:instanceConf_s	file:
bSuppOctetFram	plugins/imptcp/imptcp.c	/^	sbool bSuppOctetFram;	\/**< copy from listener, to speed up access *\/$/;"	m	struct:ptcpsess_s	file:
bSuppOctetFram	plugins/imptcp/imptcp.c	/^	sbool bSuppOctetFram;$/;"	m	struct:ptcplstn_s	file:
bSuppOctetFram	plugins/imptcp/imptcp.c	/^	sbool bSuppOctetFram;$/;"	m	struct:ptcpsrv_s	file:
bSuppOctetFram	plugins/imtcp/imtcp.c	/^	int bSuppOctetFram;$/;"	m	struct:configSettings_s	file:
bSuppOctetFram	plugins/imtcp/imtcp.c	/^	int bSuppOctetFram;$/;"	m	struct:instanceConf_s	file:
bSuppOctetFram	plugins/imtcp/imtcp.c	/^	int bSuppOctetFram;$/;"	m	struct:modConfData_s	file:
bSuppOctetFram	runtime/tcps_sess.h	/^	sbool bSuppOctetFram;	\/**< copy from listener, to speed up access *\/$/;"	m	struct:tcps_sess_s
bSuppOctetFram	runtime/tcpsrv.h	/^	sbool bSuppOctetFram;	\/**< do we support octect-counted framing? (if no->legay only!)*\/$/;"	m	struct:tcpLstnPortList_s
bSync	runtime/stream.h	/^	sbool bSync;	\/* sync this file after every write? *\/$/;"	m	struct:strm_s
bSyncFile	tools/omfile.c	/^	int	bSyncFile;	\/* should the file by sync()'ed? 1- yes, 0- no *\/$/;"	m	struct:_instanceData	file:
bSyncQueueFiles	runtime/queue.h	/^	sbool	bSyncQueueFiles;\/* if working with files, sync them after each write? *\/$/;"	m	struct:queue_s
bTerminateInputs	runtime/glbl.c	/^static int bTerminateInputs = 0;		\/* global switch that inputs shall terminate ASAP (1=> terminate) *\/$/;"	v	file:
bThrdStateChanged	runtime/queue.h	/^	int bThrdStateChanged;		\/* at least one thread state has changed if 1 *\/$/;"	m	struct:queue_s
bThreadSafe	runtime/ratelimit.h	/^	sbool bThreadSafe;	\/**< do we need to operate in Thread-Safe mode? *\/$/;"	m	struct:ratelimit_s
bUnlink	plugins/imuxsock/imuxsock.c	/^	sbool bUnlink;		\/* unlink&re-create socket at start and end of processing *\/$/;"	m	struct:lstn_s	file:
bUnlink	plugins/imuxsock/imuxsock.c	/^	sbool bUnlink;$/;"	m	struct:instanceConf_s	file:
bUnlink	plugins/imuxsock/imuxsock.c	/^	sbool bUnlink;$/;"	m	struct:modConfData_s	file:
bUseArrayInterface	plugins/omstdout/omstdout.c	/^	int bUseArrayInterface;		\/* shall action use array instead of string template interface? *\/$/;"	m	struct:configSettings_s	file:
bUseArrayInterface	plugins/omstdout/omstdout.c	/^	int bUseArrayInterface;		\/* uses action use array instead of string template interface? *\/$/;"	m	struct:_instanceData	file:
bUseAsyncWriter	tools/omfile.c	/^	int	bUseAsyncWriter;	\/* should we enable asynchronous writing? *\/$/;"	m	struct:configSettings_s	file:
bUseAsyncWriter	tools/omfile.c	/^	sbool	bUseAsyncWriter;	\/* use async stream writer? *\/$/;"	m	struct:_instanceData	file:
bUseCreds	plugins/imuxsock/imuxsock.c	/^	sbool bUseCreds;	\/* pull original creator credentials from socket *\/$/;"	m	struct:lstn_s	file:
bUseDateTime	plugins/impstats/statslog-graph.py	/^		bUseDateTime = False$/;"	v
bUseDateTime	plugins/impstats/statslog-graph.py	/^		bUseDateTime = True$/;"	v
bUseDateTime	plugins/impstats/statslog-graph.py	/^bUseDateTime = True$/;"	v
bUseFlowControl	plugins/imtcp/imtcp.c	/^	int bUseFlowControl;$/;"	m	struct:configSettings_s	file:
bUseFlowControl	plugins/imtcp/imtcp.c	/^	sbool bUseFlowControl; \/* use flow control, what means indicate ourselfs a "light delayable" *\/$/;"	m	struct:modConfData_s	file:
bUseFlowControl	runtime/tcpsrv.h	/^	sbool bUseFlowControl;	\/**< use flow control (make light delayable) *\/$/;"	m	struct:tcpsrv_s
bUseFlowCtl	plugins/imuxsock/imuxsock.c	/^	int bUseFlowCtl;		\/* use flow control or not (if yes, only LIGHT is used!) *\/$/;"	m	struct:configSettings_s	file:
bUseFlowCtl	plugins/imuxsock/imuxsock.c	/^	sbool bUseFlowCtl;		\/* use flow control or not (if yes, only LIGHT is used! *\/$/;"	m	struct:instanceConf_s	file:
bUseFlowCtl	plugins/imuxsock/imuxsock.c	/^	sbool bUseFlowCtl;		\/* use flow control or not (if yes, only LIGHT is used! *\/$/;"	m	struct:modConfData_s	file:
bUseFlowCtlSysSock	plugins/imuxsock/imuxsock.c	/^	int bUseFlowCtlSysSock;	$/;"	m	struct:configSettings_s	file:
bUseJnlPID	plugins/imjournal/imjournal.c	/^	int bUseJnlPID;$/;"	m	struct:configSettings_s	file:
bUseKeepAlive	runtime/strmsrv.h	/^	int bUseKeepAlive;	\/**< use socket layer KEEPALIVE handling? *\/$/;"	m	struct:strmsrv_s
bUseKeepAlive	runtime/tcpsrv.h	/^	int bUseKeepAlive;	\/**< use socket layer KEEPALIVE handling? *\/$/;"	m	struct:tcpsrv_s
bUseRawMsg	plugins/mmjsonparse/mmjsonparse.c	/^	sbool bUseRawMsg;     \/**< use %rawmsg% instead of %msg% *\/$/;"	m	struct:_instanceData	file:
bUseRawMsg	plugins/mmnormalize/mmnormalize.c	/^	int bUseRawMsg;	\/**< use %rawmsg% instead of %msg% *\/$/;"	m	struct:configSettings_s	file:
bUseRawMsg	plugins/mmnormalize/mmnormalize.c	/^	sbool bUseRawMsg;	\/**< use %rawmsg% instead of %msg% *\/$/;"	m	struct:_instanceData	file:
bUseSpecialParser	plugins/imuxsock/imuxsock.c	/^	int bUseSpecialParser;$/;"	m	struct:modConfData_s	file:
bUseSpecialParser	plugins/imuxsock/imuxsock.c	/^	sbool bUseSpecialParser;$/;"	m	struct:instanceConf_s	file:
bUseSpecialParser	plugins/imuxsock/imuxsock.c	/^	sbool bUseSpecialParser;\/* use "canned" log socket parser instead of parser chain? *\/$/;"	m	struct:lstn_s	file:
bUseSysTimeStamp	plugins/imuxsock/imuxsock.c	/^	int bUseSysTimeStamp;		\/* use timestamp from system (rather than from message) *\/$/;"	m	struct:configSettings_s	file:
bUseSysTimeStamp	plugins/imuxsock/imuxsock.c	/^	sbool bUseSysTimeStamp;		\/* use timestamp from system (instead of from message) *\/$/;"	m	struct:instanceConf_s	file:
bUseSysTimeStamp	plugins/imuxsock/imuxsock.c	/^	sbool bUseSysTimeStamp;	\/* use timestamp from system (instead of from message) *\/$/;"	m	struct:lstn_s	file:
bUseSysTimeStamp	plugins/imuxsock/imuxsock.c	/^	sbool bUseSysTimeStamp;$/;"	m	struct:modConfData_s	file:
bUseSysTimeStampSysSock	plugins/imuxsock/imuxsock.c	/^	int bUseSysTimeStampSysSock;	\/* same, for system log socket *\/$/;"	m	struct:configSettings_s	file:
bUsed	grammar/rainerscript.h	/^	unsigned char bUsed;$/;"	m	struct:cnfparamvals
bUsed	grammar/rainerscript.h	/^  unsigned char bUsed;$/;"	m	struct:nvlst
bUsesMsgPassingMode	action.h	/^	sbool	bUsesMsgPassingMode;$/;"	m	struct:action_s
bUsingEPoll	runtime/tcpsrv.h	/^	sbool bUsingEPoll;	\/**< are we in epoll mode (means we do not need to keep track of sessions!) *\/$/;"	m	struct:tcpsrv_s
bVeryReliableZip	runtime/stream.h	/^	sbool bVeryReliableZip; \/* shall we write interim headers to create a very reliable ZIP file? *\/$/;"	m	struct:strm_s
bVeryRobustZip	tools/omfile.c	/^	sbool	bVeryRobustZip;$/;"	m	struct:_instanceData	file:
bWriteAllMarkMsgs	action.h	/^	sbool	bWriteAllMarkMsgs;\/* should all mark msgs be written (not matter how recent the action was executed)? *\/$/;"	m	struct:action_s
bWritePid	plugins/imuxsock/imuxsock.c	/^	int bWritePid;			\/* use credentials from recvmsg() and fixup PID in TAG *\/$/;"	m	struct:configSettings_s	file:
bWritePid	plugins/imuxsock/imuxsock.c	/^	sbool bWritePid;		\/* use credentials from recvmsg() and fixup PID in TAG *\/$/;"	m	struct:instanceConf_s	file:
bWritePid	plugins/imuxsock/imuxsock.c	/^	sbool bWritePid;	\/* write original PID into tag *\/$/;"	m	struct:lstn_s	file:
bWritePidSysSock	plugins/imuxsock/imuxsock.c	/^	int bWritePidSysSock;		\/* use credentials from recvmsg() and fixup PID in TAG *\/$/;"	m	struct:configSettings_s	file:
bWritePidSysSock	plugins/imuxsock/imuxsock.c	/^	sbool bWritePidSysSock;$/;"	m	struct:modConfData_s	file:
bWrkrRunning	runtime/tcpsrv.c	/^static sbool bWrkrRunning; \/* are the worker threads running? *\/$/;"	v	file:
bXrPresent	plugins/pmciscoios/pmciscoios.c	/^	int bXrPresent; \/* is XR? *\/$/;"	m	struct:instanceConf_s	file:
backlog	contrib/imzmq3/imzmq3.c	/^    int                    backlog;$/;"	m	struct:instanceConf_s	file:
backlog	contrib/omzmq3/omzmq3.c	/^    int     backlog;$/;"	m	struct:_instanceData	file:
batch	plugins/omelasticsearch/omelasticsearch.c	/^	} batch;$/;"	m	struct:wrkrInstanceData	typeref:struct:wrkrInstanceData::__anon17	file:
batch	runtime/wti.h	/^	batch_t batch; \/* pointer to an object array meaningful for current user$/;"	m	struct:wti_s
batchFree	runtime/batch.h	/^batchFree(batch_t * const pBatch) {$/;"	f
batchInit	runtime/batch.h	/^batchInit(batch_t *const pBatch, const int maxElem) {$/;"	f
batchIsValidElem	runtime/batch.h	/^batchIsValidElem(const batch_t * const pBatch, const int i) {$/;"	f
batchNumMsgs	runtime/batch.h	/^batchNumMsgs(const batch_t * const pBatch) {$/;"	f
batchProcessed	runtime/queue.c	/^batchProcessed(qqueue_t *pThis, wti_t *pWti)$/;"	f	file:
batchSetElemState	runtime/batch.h	/^batchSetElemState(batch_t * const pBatch, const int i, const batch_state_t newState) {$/;"	f
batchSize	plugins/imudp/imudp.c	/^	int batchSize;			\/* max nbr of input batch --> also recvmmsg() max count *\/$/;"	m	struct:modConfData_s	file:
batchState2String	runtime/batch.h	/^batchState2String(const batch_state_t state) {$/;"	f
batch_obj_s	runtime/batch.h	/^struct batch_obj_s {$/;"	s
batch_obj_t	runtime/typedefs.h	/^typedef struct batch_obj_s batch_obj_t;$/;"	t	typeref:struct:batch_obj_s
batch_s	runtime/batch.h	/^struct batch_s {$/;"	s
batch_state_t	runtime/batch.h	/^typedef unsigned char batch_state_t;$/;"	t
batch_t	runtime/typedefs.h	/^typedef struct batch_s batch_t;$/;"	t	typeref:struct:batch_s
batchsize	tests/filewriter.c	/^static int batchsize = 1000;$/;"	v	file:
batchsize	tests/tcpflood.c	/^static long long batchsize = 100000000ll;$/;"	v	file:
bdate	tools/logctl.c	/^	int bdate;$/;"	m	struct:queryopt	file:
bdatef	tools/logctl.c	/^	int bdatef;$/;"	m	struct:queryopt	file:
bdateu	tools/logctl.c	/^	int bdateu;$/;"	m	struct:queryopt	file:
beacon	contrib/imczmq/imczmq.c	/^	char *beacon;				\/* (optional) content of beacon *\/$/;"	m	struct:instanceConf_s	file:
beacon	contrib/omczmq/omczmq.c	/^	char *beacon;			\/* (optional) content of beacon if beaconing *\/$/;"	m	struct:_instanceData	file:
beaconActor	contrib/imczmq/imczmq.c	/^	zactor_t *beaconActor;	\/* CZMQ beacon actor *\/$/;"	m	struct:lstn_s	file:
beaconActor	contrib/omczmq/omczmq.c	/^	zactor_t *beaconActor;	\/* reference to a CZMQ beacon actor *\/$/;"	m	struct:_instanceData	file:
beaconPort	contrib/imczmq/imczmq.c	/^	int beaconPort;				\/* (optional) port if beacon is set *\/$/;"	m	struct:instanceConf_s	file:
beaconport	contrib/omczmq/omczmq.c	/^	int beaconport;			\/* (optional) port of beacon if beaconing *\/$/;"	m	struct:_instanceData	file:
begin	runtime/ratelimit.h	/^	time_t begin;$/;"	m	struct:ratelimit_s
beginCnfLoad	runtime/modules.h	/^	rsRetVal (*beginCnfLoad)(void*newCnf, rsconf_t *pConf);$/;"	m	struct:modInfo_s
beginTiming	tools/syncdemo.c	/^static void beginTiming(void)$/;"	f	file:
beginTransaction	runtime/modules.h	/^			rsRetVal (*beginTransaction)(void*);$/;"	m	struct:modInfo_s::__anon29::__anon31
belowFullDlyWtrMrk	runtime/queue.h	/^	pthread_cond_t belowFullDlyWtrMrk; \/* below eFLOWCTL_FULL_DELAY watermark *\/$/;"	m	struct:queue_s
belowLightDlyWtrMrk	runtime/queue.h	/^	pthread_cond_t belowLightDlyWtrMrk; \/* below eFLOWCTL_FULL_DELAY watermark *\/$/;"	m	struct:queue_s
bits	plugins/mmanon/mmanon.c	/^		int8_t bits;$/;"	m	struct:_instanceData::__anon16	file:
blevel	tools/logctl.c	/^	int blevel;$/;"	m	struct:queryopt	file:
blkLength	runtime/libgcry.h	/^	size_t blkLength; \/* size of low-level crypto block *\/$/;"	m	struct:gcryfile_s
blkLength	tools/rscryutil.c	/^static size_t blkLength;$/;"	v	file:
blkNum	runtime/librsgt.h	/^	uint64_t blkNum;$/;"	m	struct:gterrctx_s
blkNum	runtime/librsksi.h	/^	uint64_t blkNum;$/;"	m	struct:ksierrctx_s
blobIsZero	runtime/librsgt_read.c	/^blobIsZero(uint8_t *blob, uint16_t len)$/;"	f	file:
blobIsZero	runtime/librsksi_read.c	/^blobIsZero(uint8_t *blob, uint16_t len)$/;"	f	file:
block	grammar/grammar.y	/^block:    stmt				{ $$ = $1; }$/;"	l
blockSizeLimit	runtime/librsgt.h	/^	uint64_t blockSizeLimit;$/;"	m	struct:gtctx_s
blockSizeLimit	runtime/librsgt.h	/^	uint64_t blockSizeLimit;$/;"	m	struct:gtfile_s
blockSizeLimit	runtime/librsksi.h	/^	uint64_t blockSizeLimit;$/;"	m	struct:ksifile_s
blockSizeLimit	runtime/librsksi.h	/^	uint64_t blockSizeLimit;$/;"	m	struct:rsksictx_s
block_hdr_s	runtime/librsgt_common.h	/^struct block_hdr_s {$/;"	s
block_hdr_t	runtime/librsgt_common.h	/^typedef struct block_hdr_s block_hdr_t;$/;"	t	typeref:struct:block_hdr_s
block_sig_s	runtime/librsgt_common.h	/^struct block_sig_s {$/;"	s
block_sig_t	runtime/librsgt_common.h	/^typedef struct block_sig_s block_sig_t;$/;"	t	typeref:struct:block_sig_s
bmsg	tools/logctl.c	/^	int bmsg;$/;"	m	struct:queryopt	file:
body	grammar/rainerscript.h	/^			struct cnfstmt *body;$/;"	m	struct:cnfstmt::__anon4::__anon11	typeref:struct:cnfstmt::__anon4::__anon11::cnfstmt
bodySend	plugins/ommail/ommail.c	/^bodySend(wrkrInstanceData_t *pWrkrData, char *msg, size_t len)$/;"	f	file:
body_bytes	contrib/omrabbitmq/omrabbitmq.c	/^	amqp_bytes_t body_bytes;$/;"	v
bret	tools/logctl.c	/^	int bret;$/;"	m	struct:queryopt	file:
brokers	plugins/omkafka/omkafka.c	/^	char *brokers;$/;"	m	struct:_instanceData	file:
bs_arrcmp_strtab	runtime/lookup.c	/^bs_arrcmp_strtab(const void *s1, const void *s2)$/;"	f	file:
bs_arrcmp_tzinfo	runtime/glbl.c	/^bs_arrcmp_tzinfo(const void *s1, const void *s2)$/;"	f	file:
bsever	tools/logctl.c	/^	int  bsever;$/;"	m	struct:queryopt	file:
bskip	tools/logctl.c	/^	int bskip;$/;"	m	struct:queryopt	file:
bsys	tools/logctl.c	/^	int bsys;$/;"	m	struct:queryopt	file:
buf	contrib/mmgrok/mmgrok.c	/^	uchar *buf;$/;"	v
buf	plugins/mmaudit/mmaudit.c	/^	uchar *buf;$/;"	v
buf	plugins/mmjsonparse/mmjsonparse.c	/^	uchar *buf;$/;"	v
buf	plugins/mmnormalize/mmnormalize.c	/^	uchar *buf;$/;"	v
bufAddHash	runtime/librsgt.c	/^bufAddHash(gtfile gf, uchar *buf, size_t *len, GTDataHash *hash)$/;"	f	file:
bufAddHash	runtime/librsksi.c	/^bufAddHash(ksifile ksi, uchar *buf, size_t *len, KSI_DataHash *hash)$/;"	f	file:
bufAddIV	runtime/librsgt.c	/^bufAddIV(gtfile gf, uchar *buf, size_t *len)$/;"	f	file:
bufAddIV	runtime/librsksi.c	/^bufAddIV(ksifile ksi, uchar *buf, size_t *len)$/;"	f	file:
bufAddImprint	runtime/librsgt.c	/^bufAddImprint(gtfile gf, uchar *buf, size_t *len, imprint_t *imp)$/;"	f	file:
bufAddImprint	runtime/librsksi.c	/^bufAddImprint(ksifile ksi, uchar *buf, size_t *len, imprint_t *imp)$/;"	f	file:
bufAddLevel	runtime/librsgt.c	/^bufAddLevel(uchar *buf, size_t *len, uint8_t level)$/;"	f	file:
bufAddLevel	runtime/librsksi.c	/^bufAddLevel(uchar *buf, size_t *len, uint8_t level)$/;"	f	file:
bufOpt	tools/rsyslogd.c	/^typedef struct bufOpt {$/;"	s	file:
bufOptAdd	tools/rsyslogd.c	/^bufOptAdd(char opt, char *arg)$/;"	f	file:
bufOptLast	tools/rsyslogd.c	/^static bufOpt_t *bufOptLast = NULL;$/;"	v	file:
bufOptRemove	tools/rsyslogd.c	/^bufOptRemove(int *opt, char **arg)$/;"	f	file:
bufOptRoot	tools/rsyslogd.c	/^static bufOpt_t *bufOptRoot = NULL;$/;"	v	file:
bufOpt_t	tools/rsyslogd.c	/^} bufOpt_t;$/;"	t	typeref:struct:bufOpt	file:
bufParseHOSTNAME	plugins/pmciscoios/pmciscoios.c	/^	uchar bufParseHOSTNAME[CONF_HOSTNAME_MAXSIZE]; \/* used by origin *\/$/;"	v
bufParseHOSTNAME	tools/pmrfc3164.c	/^	uchar bufParseHOSTNAME[CONF_HOSTNAME_MAXSIZE];$/;"	v
bufParseTAG	plugins/pmciscoios/pmciscoios.c	/^	uchar bufParseTAG[512];$/;"	v
bufParseTAG	tools/pmrfc3164.c	/^	uchar bufParseTAG[CONF_TAG_MAXSIZE];$/;"	v
buildBatch	plugins/omelasticsearch/omelasticsearch.c	/^buildBatch(wrkrInstanceData_t *pWrkrData, uchar *message, uchar **tpls)$/;"	f	file:
buildInstance	plugins/mmnormalize/mmnormalize.c	/^buildInstance(instanceData *pData)$/;"	f	file:
buildSeverityMapping	plugins/mmsnmptrapd/mmsnmptrapd.c	/^buildSeverityMapping(instanceData *pData)$/;"	f	file:
bulkId	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *bulkId;$/;"	m	struct:_instanceData	file:
bulkmode	plugins/omelasticsearch/omelasticsearch.c	/^	sbool bulkmode;$/;"	m	struct:_instanceData	file:
burst	runtime/ratelimit.h	/^	unsigned short burst;$/;"	m	struct:ratelimit_s
bytesToBlkEnd	runtime/libgcry.h	/^	ssize_t bytesToBlkEnd; \/* number of bytes remaining in current crypto block$/;"	m	struct:gcryfile_s
bzInitDone	plugins/imptcp/imptcp.c	/^	sbool bzInitDone; \/* did we do an init of zstrm already? *\/$/;"	m	struct:ptcpsess_s	file:
bzInitDone	runtime/stream.h	/^	sbool bzInitDone; \/* did we do an init of zstrm already? *\/$/;"	m	struct:strm_s
bzInitDone	tools/omfwd.c	/^	sbool bzInitDone; \/* did we do an init of zstrm already? *\/$/;"	m	struct:wrkrInstanceData	file:
c	plugins/mmexternal/mmexternal.c	/^	unsigned char *c;$/;"	v
c	plugins/omprog/omprog.c	/^	unsigned char *c;$/;"	v
cCCEscapeChar	runtime/glbl.c	/^static uchar cCCEscapeChar = '#'; \/* character to be used to start an escape sequence for control chars *\/$/;"	v	file:
cJSON	plugins/omelasticsearch/cJSON/cjson.h	/^typedef struct cJSON {$/;"	s
cJSON	plugins/omelasticsearch/cJSON/cjson.h	/^} cJSON;$/;"	t	typeref:struct:cJSON
cJSON_AddFalseToObject	plugins/omelasticsearch/cJSON/cjson.h	122;"	d
cJSON_AddItemReferenceToArray	plugins/omelasticsearch/cJSON/cjson.c	/^void	cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)						{cJSON_AddItemToArray(array,create_reference(item));}$/;"	f
cJSON_AddItemReferenceToObject	plugins/omelasticsearch/cJSON/cjson.c	/^void	cJSON_AddItemReferenceToObject(cJSON *object,const char *string,cJSON *item)	{cJSON_AddItemToObject(object,string,create_reference(item));}$/;"	f
cJSON_AddItemToArray	plugins/omelasticsearch/cJSON/cjson.c	/^void   cJSON_AddItemToArray(cJSON *array, cJSON *item)						{cJSON *c=array->child;if (!item) return; if (!c) {array->child=item;} else {while (c && c->next) c=c->next; suffix_object(c,item);}}$/;"	f
cJSON_AddItemToObject	plugins/omelasticsearch/cJSON/cjson.c	/^void   cJSON_AddItemToObject(cJSON *object,const char *string,cJSON *item)	{if (!item) return; if (item->string) cJSON_free(item->string);item->string=cJSON_strdup(string);cJSON_AddItemToArray(object,item);}$/;"	f
cJSON_AddNullToObject	plugins/omelasticsearch/cJSON/cjson.h	120;"	d
cJSON_AddNumberToObject	plugins/omelasticsearch/cJSON/cjson.h	123;"	d
cJSON_AddStringToObject	plugins/omelasticsearch/cJSON/cjson.h	124;"	d
cJSON_AddTrueToObject	plugins/omelasticsearch/cJSON/cjson.h	121;"	d
cJSON_Array	plugins/omelasticsearch/cJSON/cjson.h	37;"	d
cJSON_CreateArray	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateArray()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_Array;return item;}$/;"	f
cJSON_CreateBool	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateBool(int b)					{cJSON *item=cJSON_New_Item();if(item)item->type=b?cJSON_True:cJSON_False;return item;}$/;"	f
cJSON_CreateDoubleArray	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateDoubleArray(double *numbers,int count)		{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateFalse	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateFalse()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_False;return item;}$/;"	f
cJSON_CreateFloatArray	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateFloatArray(float *numbers,int count)			{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateIntArray	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateIntArray(int *numbers,int count)				{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateNumber(numbers[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateNull	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateNull()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_NULL;return item;}$/;"	f
cJSON_CreateNumber	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateNumber(double num)			{cJSON *item=cJSON_New_Item();if(item){item->type=cJSON_Number;item->valuedouble=num;item->valueint=(int)num;}return item;}$/;"	f
cJSON_CreateObject	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateObject()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_Object;return item;}$/;"	f
cJSON_CreateString	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateString(const char *string)	{cJSON *item=cJSON_New_Item();if(item){item->type=cJSON_String;item->valuestring=cJSON_strdup(string);}return item;}$/;"	f
cJSON_CreateStringArray	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateStringArray(const char **strings,int count)	{int i;cJSON *n=0,*p=0,*a=cJSON_CreateArray();for(i=0;a && i<count;i++){n=cJSON_CreateString(strings[i]);if(!i)a->child=n;else suffix_object(p,n);p=n;}return a;}$/;"	f
cJSON_CreateTrue	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_CreateTrue()						{cJSON *item=cJSON_New_Item();if(item)item->type=cJSON_True;return item;}$/;"	f
cJSON_Delete	plugins/omelasticsearch/cJSON/cjson.c	/^void cJSON_Delete(cJSON *c)$/;"	f
cJSON_DeleteItemFromArray	plugins/omelasticsearch/cJSON/cjson.c	/^void   cJSON_DeleteItemFromArray(cJSON *array,int which)			{cJSON_Delete(cJSON_DetachItemFromArray(array,which));}$/;"	f
cJSON_DeleteItemFromObject	plugins/omelasticsearch/cJSON/cjson.c	/^void   cJSON_DeleteItemFromObject(cJSON *object,const char *string) {cJSON_Delete(cJSON_DetachItemFromObject(object,string));}$/;"	f
cJSON_DetachItemFromArray	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_DetachItemFromArray(cJSON *array,int which)			{cJSON *c=array->child;while (c && which>0) c=c->next,which--;if (!c) return 0;$/;"	f
cJSON_DetachItemFromObject	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_DetachItemFromObject(cJSON *object,const char *string) {int i=0;cJSON *c=object->child;while (c && cJSON_strcasecmp(c->string,string)) i++,c=c->next;if (c) return cJSON_DetachItemFromArray(object,i);return 0;}$/;"	f
cJSON_False	plugins/omelasticsearch/cJSON/cjson.h	32;"	d
cJSON_GetArrayItem	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_GetArrayItem(cJSON *array,int item)				{cJSON *c=array->child;  while (c && item>0) item--,c=c->next; return c;}$/;"	f
cJSON_GetArraySize	plugins/omelasticsearch/cJSON/cjson.c	/^int    cJSON_GetArraySize(cJSON *array)							{cJSON *c=array->child;int i=0;while(c)i++,c=c->next;return i;}$/;"	f
cJSON_GetErrorPtr	plugins/omelasticsearch/cJSON/cjson.c	/^const char *cJSON_GetErrorPtr() {return ep;}$/;"	f
cJSON_GetObjectItem	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_GetObjectItem(cJSON *object,const char *string)	{cJSON *c=object->child; while (c && cJSON_strcasecmp(c->string,string)) c=c->next; return c;}$/;"	f
cJSON_Hooks	plugins/omelasticsearch/cJSON/cjson.h	/^typedef struct cJSON_Hooks {$/;"	s
cJSON_Hooks	plugins/omelasticsearch/cJSON/cjson.h	/^} cJSON_Hooks;$/;"	t	typeref:struct:cJSON_Hooks
cJSON_InitHooks	plugins/omelasticsearch/cJSON/cjson.c	/^void cJSON_InitHooks(cJSON_Hooks* hooks)$/;"	f
cJSON_IsReference	plugins/omelasticsearch/cJSON/cjson.h	40;"	d
cJSON_NULL	plugins/omelasticsearch/cJSON/cjson.h	34;"	d
cJSON_New_Item	plugins/omelasticsearch/cJSON/cjson.c	/^static cJSON *cJSON_New_Item()$/;"	f	file:
cJSON_Number	plugins/omelasticsearch/cJSON/cjson.h	35;"	d
cJSON_Object	plugins/omelasticsearch/cJSON/cjson.h	38;"	d
cJSON_Parse	plugins/omelasticsearch/cJSON/cjson.c	/^cJSON *cJSON_Parse(const char *value)$/;"	f
cJSON_Print	plugins/omelasticsearch/cJSON/cjson.c	/^char *cJSON_Print(cJSON *item)				{return print_value(item,0,1);}$/;"	f
cJSON_PrintUnformatted	plugins/omelasticsearch/cJSON/cjson.c	/^char *cJSON_PrintUnformatted(cJSON *item)	{return print_value(item,0,0);}$/;"	f
cJSON_ReplaceItemInArray	plugins/omelasticsearch/cJSON/cjson.c	/^void   cJSON_ReplaceItemInArray(cJSON *array,int which,cJSON *newitem)		{cJSON *c=array->child;while (c && which>0) c=c->next,which--;if (!c) return;$/;"	f
cJSON_ReplaceItemInObject	plugins/omelasticsearch/cJSON/cjson.c	/^void   cJSON_ReplaceItemInObject(cJSON *object,const char *string,cJSON *newitem){int i=0;cJSON *c=object->child;while(c && cJSON_strcasecmp(c->string,string))i++,c=c->next;if(c){newitem->string=cJSON_strdup(string);cJSON_ReplaceItemInArray(object,i,newitem);}}$/;"	f
cJSON_String	plugins/omelasticsearch/cJSON/cjson.h	36;"	d
cJSON_True	plugins/omelasticsearch/cJSON/cjson.h	33;"	d
cJSON__h	plugins/omelasticsearch/cJSON/cjson.h	24;"	d
cJSON_free	plugins/omelasticsearch/cJSON/cjson.c	/^static void (*cJSON_free)(void *ptr) = free;$/;"	v	file:
cJSON_malloc	plugins/omelasticsearch/cJSON/cjson.c	/^static void *(*cJSON_malloc)(size_t sz) = malloc;$/;"	v	file:
cJSON_print_number	plugins/omelasticsearch/cJSON/cjson.c	/^char *cJSON_print_number(cJSON *item)$/;"	f
cJSON_strcasecmp	plugins/omelasticsearch/cJSON/cjson.c	/^static int cJSON_strcasecmp(const char *s1,const char *s2)$/;"	f	file:
cJSON_strdup	plugins/omelasticsearch/cJSON/cjson.c	/^static char* cJSON_strdup(const char* str)$/;"	f	file:
c_name	runtime/srUtils.h	/^	char	*c_name;$/;"	m	struct:syslogName_s
c_name	runtime/syslogd-types.h	/^	char    *c_name;$/;"	m	struct:_syslogCode
c_val	runtime/srUtils.h	/^	int	c_val;$/;"	m	struct:syslogName_s
c_val	runtime/syslogd-types.h	/^	int     c_val;$/;"	m	struct:_syslogCode
caCertFile	plugins/imrelp/imrelp.c	/^	uchar *caCertFile;$/;"	m	struct:instanceConf_s	file:
caCertFile	plugins/omrelp/omrelp.c	/^	uchar *caCertFile;$/;"	m	struct:_instanceData	file:
callExtProg	plugins/mmexternal/mmexternal.c	/^callExtProg(wrkrInstanceData_t *__restrict__ const pWrkrData, msg_t *__restrict__ const pMsg)$/;"	f	file:
callStack	runtime/debug.h	/^	dbgFuncDB_t *callStack[500];$/;"	m	struct:dbgCallStack_s
canActivate	runtime/rsconf.h	/^	sbool canActivate;	\/* OK to activate this config? *\/$/;"	m	struct:cfgmodules_etry_s
canRun	runtime/rsconf.h	/^	sbool canRun;		\/* OK to run this config? *\/$/;"	m	struct:cfgmodules_etry_s
cancelWorkers	runtime/queue.c	/^cancelWorkers(qqueue_t *pThis)$/;"	f	file:
cas	tools/syncdemo.c	/^typedef enum { part, none, atomic, cas, spinlock, mutex, semaphore } syncType_t;$/;"	e	enum:__anon79	file:
cb	runtime/janitor.h	/^	void (*cb)(void *pUsr);$/;"	m	struct:janitorEtry
cfgmodules_etry_s	runtime/rsconf.h	/^struct cfgmodules_etry_s {$/;"	s
cfgmodules_etry_t	runtime/typedefs.h	/^typedef struct cfgmodules_etry_s cfgmodules_etry_t;$/;"	t	typeref:struct:cfgmodules_etry_s
cfgmodules_s	runtime/rsconf.h	/^struct cfgmodules_s {$/;"	s
cfgmodules_t	runtime/typedefs.h	/^typedef struct cfgmodules_s cfgmodules_t;$/;"	t	typeref:struct:cfgmodules_s
cflineClassic	tests/runtime-dummy.c	/^void cflineClassic(void) {};$/;"	f
cflineDoAction	runtime/conf.c	/^rsRetVal cflineDoAction(rsconf_t *conf, uchar **p, action_t **ppAction)$/;"	f
cflineParseFileName	runtime/conf.c	/^cflineParseFileName(uchar* p, uchar *pFileName, omodStringRequest_t *pOMSR, int iEntry, int iTplOpts, uchar *pszTpl)$/;"	f
cflineParseOutchannel	tools/omfile.c	/^static rsRetVal cflineParseOutchannel(instanceData *pData, uchar* p, omodStringRequest_t *pOMSR, int iEntry, int iTplOpts)$/;"	f	file:
cflineParseTemplateName	contrib/mmgrok/mmgrok.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_TPL_AS_MSG, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/mmaudit/mmaudit.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_TPL_AS_MSG, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/mmjsonparse/mmjsonparse.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_TPL_AS_MSG, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/mmnormalize/mmnormalize.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_TPL_AS_MSG, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_TPL_AS_MSG, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/omgssapi/omgssapi.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS,$/;"	v
cflineParseTemplateName	plugins/omhdfs/omhdfs.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, 0,$/;"	v
cflineParseTemplateName	plugins/omlibdbi/omlibdbi.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_RQD_TPL_OPT_SQL, getDfltTpl()));$/;"	v
cflineParseTemplateName	plugins/ommail/ommail.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/ommysql/ommysql.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_RQD_TPL_OPT_SQL, (uchar*) " StdDBFmt"));$/;"	v
cflineParseTemplateName	plugins/ompgsql/ompgsql.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_RQD_TPL_OPT_SQL, (uchar*) " StdPgSQLFmt"));$/;"	v
cflineParseTemplateName	plugins/omprog/omprog.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, 0, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/omrelp/omrelp.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS, (uchar*) "RSYSLOG_ForwardFormat"));$/;"	v
cflineParseTemplateName	plugins/omruleset/omruleset.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, iTplOpts, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/omsnmp/omsnmp.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS, (uchar*) "RSYSLOG_TraditionalForwardFormat"));$/;"	v
cflineParseTemplateName	plugins/omstdout/omstdout.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, iTplOpts, (uchar*) "RSYSLOG_FileFormat"));$/;"	v
cflineParseTemplateName	plugins/omtesting/omtesting.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS,$/;"	v
cflineParseTemplateName	plugins/omudpspoof/omudpspoof.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS,$/;"	v
cflineParseTemplateName	plugins/omuxsock/omuxsock.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, 0, getDfltTpl()));$/;"	v
cflineParseTemplateName	runtime/conf.c	/^rsRetVal cflineParseTemplateName(uchar** pp, omodStringRequest_t *pOMSR, int iEntry, int iTplOpts, uchar *dfltTplName)$/;"	f
cflineParseTemplateName	tools/omfwd.c	/^	CHKiRet(cflineParseTemplateName(&p, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS, getDfltTpl()));$/;"	v
cfsysline	runtime/conf.c	/^cfsysline(uchar *p)$/;"	f
cfsysline	runtime/conf.h	/^	rsRetVal (*cfsysline)(uchar *p);$/;"	v
cfsyslineInit	runtime/cfsysline.c	/^rsRetVal cfsyslineInit()$/;"	f
chartCfg	plugins/impstats/statslog-graph.py	/^	chartCfg = Config()$/;"	v
chd	runtime/libgcry.h	/^	gcry_cipher_hd_t chd; \/* cypher handle *\/$/;"	m	struct:gcryfile_s
checkCnf	runtime/modules.h	/^	rsRetVal (*checkCnf)(void*Cnf);$/;"	m	struct:modInfo_s
checkConn	plugins/omelasticsearch/omelasticsearch.c	/^checkConn(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
checkDefaultErrorFile	tests/elasticsearch-error-format-check.py	/^def checkDefaultErrorFile():$/;"	f
checkErrorInterleaved	tests/elasticsearch-error-format-check.py	/^def checkErrorInterleaved():$/;"	f
checkErrorOnlyFile	tests/elasticsearch-error-format-check.py	/^def checkErrorOnlyFile():$/;"	f
checkInstance	plugins/imfile/imfile.c	/^checkInstance(instanceConf_t *inst)$/;"	f	file:
checkInterleaved	tests/elasticsearch-error-format-check.py	/^def checkInterleaved():$/;"	f
checkProgramOutput	plugins/omprog/omprog.c	/^checkProgramOutput(wrkrInstanceData_t *__restrict__ const pWrkrData)$/;"	f	file:
checkReplyStatus	plugins/omelasticsearch/omelasticsearch.c	/^int checkReplyStatus(cJSON* ok) {$/;"	f
checkResult	plugins/omelasticsearch/omelasticsearch.c	/^checkResult(wrkrInstanceData_t *pWrkrData, uchar *reqmsg)$/;"	f	file:
checkResultBulkmode	plugins/omelasticsearch/omelasticsearch.c	/^checkResultBulkmode(wrkrInstanceData_t *pWrkrData, cJSON *root)$/;"	f	file:
checkRuleset	plugins/impstats/impstats.c	/^checkRuleset(modConfData_t *modConf)$/;"	f	file:
checkSchedParam	plugins/imudp/imudp.c	/^checkSchedParam(modConfData_t *modConf)$/;"	f	file:
checkSchedulingPolicy	plugins/imudp/imudp.c	/^checkSchedulingPolicy(modConfData_t *modConf)$/;"	f	file:
checkSchedulingPriority	plugins/imudp/imudp.c	/^checkSchedulingPriority(modConfData_t *modConf)$/;"	f	file:
checkStartupOK	tools/rsyslogd.c	/^rsRetVal checkStartupOK(void)$/;"	f
child	plugins/omelasticsearch/cJSON/cjson.h	/^	struct cJSON *child;		\/* An array or object item will have a child pointer pointing to a chain of the items in the array\/object. *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
childDied	tests/nettester.c	/^void childDied(__attribute__((unused)) int sig)$/;"	f
ciphername	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	char *ciphername;$/;"	v
city	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	m	struct:record	file:
class	contrib/omhttpfs/omhttpfs.c	/^    char class[256];$/;"	m	struct:_HTTPFS_JSON_REMOTE_EXCEPTION	file:
cleanup	plugins/mmexternal/mmexternal.c	/^cleanup(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
cleanup	plugins/omprog/omprog.c	/^cleanup(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
cleanup	tests/uxsockrcvr.c	/^cleanup(void)$/;"	f
clearAllowedSenders	runtime/net.c	/^clearAllowedSenders(uchar *pszType)$/;"	f	file:
clearAllowedSenders	runtime/net.h	/^	void (*clearAllowedSenders)(uchar*);$/;"	v
clientCert	contrib/imczmq/imczmq.c	/^	zcert_t *clientCert;	\/* client curve certificate *\/$/;"	m	struct:lstn_s	file:
clientCert	contrib/omczmq/omczmq.c	/^	zcert_t *clientCert;	\/* client curve certificate *\/$/;"	m	struct:_instanceData	file:
clientCertPath	contrib/imczmq/imczmq.c	/^	char *clientCertPath;		\/* (optional) path to curve client cert(s) *\/$/;"	m	struct:instanceConf_s	file:
clientCertPath	contrib/omczmq/omczmq.c	/^	char *clientCertPath;	\/* (optional) path to curve client cert(s) *\/$/;"	m	struct:_instanceData	file:
clkTickAccessed	plugins/omkafka/omkafka.c	/^	uint64 clkTickAccessed;$/;"	m	struct:s_dynaTopicCacheEntry	file:
clkTickAccessed	tools/omfile.c	/^	uint64	clkTickAccessed;\/* for LRU - based on clockFileAccess *\/$/;"	m	struct:s_dynaFileCacheEntry	file:
clockFileAccess	tools/omfile.c	/^static uint64 clockFileAccess = 0;$/;"	v	file:
clockTopicAccess	plugins/omkafka/omkafka.c	/^static uint64 clockTopicAccess = 0;$/;"	v	file:
clockTopicAccess	plugins/omkafka/omkafka.c	/^static unsigned clockTopicAccess = 0;$/;"	v	file:
closeAMQPConnection	contrib/omrabbitmq/omrabbitmq.c	/^closeAMQPConnection(instanceData *pData)$/;"	f	file:
closeConn	plugins/omlibdbi/omlibdbi.c	/^static void closeConn(instanceData *pData)$/;"	f	file:
closeConnections	tests/tcpflood.c	/^void closeConnections(void)$/;"	f
closeFile	tools/omfile.c	/^closeFile(instanceData *__restrict__ const pData)$/;"	f	file:
closeHiredis	contrib/omhiredis/omhiredis.c	/^static void closeHiredis(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
closeKafka	plugins/omkafka/omkafka.c	/^closeKafka(instanceData *const __restrict__ pData)$/;"	f	file:
closeMongoDB	plugins/ommongodb/ommongodb.c	/^static void closeMongoDB(instanceData *pData)$/;"	f	file:
closeMySQL	plugins/ommysql/ommysql.c	/^static void closeMySQL(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
closePgSQL	plugins/ompgsql/ompgsql.c	/^static void closePgSQL(instanceData *pData)$/;"	f	file:
closeSess	plugins/imptcp/imptcp.c	/^closeSess(ptcpsess_t *pSess)$/;"	f	file:
closeSess	runtime/tcpsrv.c	/^closeSess(tcpsrv_t *pThis, tcps_sess_t **ppSess, nspoll_t *pPoll) {$/;"	f	file:
closeSocket	plugins/omuxsock/omuxsock.c	/^closeSocket(instanceData *pData)$/;"	f	file:
closeTLSSess	tests/tcpflood.c	/^closeTLSSess(int i)$/;"	f	file:
closeTLSSess	tests/tcpflood.c	/^static void closeTLSSess(int __attribute__((unused)) i) {}$/;"	f	file:
closeTimeout	plugins/omkafka/omkafka.c	/^	int closeTimeout;$/;"	m	struct:_instanceData	file:
closeTimeout	plugins/omkafka/omkafka.c	/^static int closeTimeout = 1000;$/;"	v	file:
closeTimeoutMut	plugins/omkafka/omkafka.c	/^	pthread_mutex_destroy(&closeTimeoutMut);$/;"	v
closeTimeoutMut	plugins/omkafka/omkafka.c	/^	pthread_mutex_lock(&closeTimeoutMut);$/;"	v
closeTimeoutMut	plugins/omkafka/omkafka.c	/^	pthread_mutex_unlock(&closeTimeoutMut);$/;"	v
closeTimeoutMut	plugins/omkafka/omkafka.c	/^static pthread_mutex_t closeTimeoutMut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
closeTopic	plugins/omkafka/omkafka.c	/^closeTopic(instanceData *__restrict__ const pData)$/;"	f	file:
closeUDPListenSockets	runtime/net.c	/^void closeUDPListenSockets(int *pSockArr)$/;"	f
closeUDPListenSockets	runtime/net.h	/^	void (*closeUDPListenSockets)(int *finet);$/;"	v
closeUDPSockets	plugins/omudpspoof/omudpspoof.c	/^closeUDPSockets(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
closeUDPSockets	tools/omfwd.c	/^closeUDPSockets(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
closeZMQ	contrib/omzmq3/omzmq3.c	/^static void closeZMQ(instanceData* pData) {$/;"	f	file:
close_conn	tools/logctl.c	/^void close_conn(struct db_connect *db_conn)$/;"	f
cmdOnSizeLimit	outchannel.h	/^	uchar *cmdOnSizeLimit;$/;"	m	struct:outchannel
cmpOp	runtime/linkedlist.h	/^	int (*cmpOp)(void*, void*); \/* pointer to key compare operation function, retval like strcmp *\/$/;"	m	struct:linkedList_s
cnfDoBSDHost	grammar/testdriver.c	/^void cnfDoBSDHost(char *ln)$/;"	f
cnfDoBSDHost	runtime/rsconf.c	/^void cnfDoBSDHost(char *ln)$/;"	f
cnfDoBSDTag	grammar/testdriver.c	/^void cnfDoBSDTag(char *ln)$/;"	f
cnfDoBSDTag	runtime/rsconf.c	/^void cnfDoBSDTag(char *ln)$/;"	f
cnfDoCfsysline	grammar/testdriver.c	/^void cnfDoCfsysline(char *ln)$/;"	f
cnfDoCfsysline	runtime/rsconf.c	/^void cnfDoCfsysline(char *ln)$/;"	f
cnfDoInclude	grammar/rainerscript.c	/^cnfDoInclude(char *name)$/;"	f
cnfDoObj	grammar/testdriver.c	/^void cnfDoObj(struct cnfobj *o)$/;"	f
cnfDoObj	runtime/rsconf.c	/^void cnfDoObj(struct cnfobj *o)$/;"	f
cnfDoRule	grammar/testdriver.c	/^void cnfDoRule(struct cnfrule *rule)$/;"	f
cnfDoScript	runtime/rsconf.c	/^void cnfDoScript(struct cnfstmt *script)$/;"	f
cnfFiltType	grammar/rainerscript.h	/^enum cnfFiltType { CNFFILT_NONE, CNFFILT_PRI, CNFFILT_PROP, CNFFILT_SCRIPT };$/;"	g
cnfFiltType2str	grammar/rainerscript.h	/^cnfFiltType2str(enum cnfFiltType filttype)$/;"	f
cnfIteratorDestruct	grammar/rainerscript.c	/^cnfIteratorDestruct(struct cnfitr *itr)$/;"	f	file:
cnfName	runtime/modules.h	/^	uchar*		cnfName;	\/* name to be used in config statements (e.g. 'name="omusrmsg"') *\/$/;"	m	struct:modInfo_s
cnfNewIterator	grammar/rainerscript.c	/^cnfNewIterator(char *var, struct cnfexpr *collection)$/;"	f
cnfSetDefaults	runtime/rsconf.c	/^void cnfSetDefaults(rsconf_t *pThis)$/;"	f
cnfactType	grammar/rainerscript.h	/^enum cnfactType { CNFACT_V2, CNFACT_LEGACY };$/;"	g
cnfarray	grammar/rainerscript.h	/^struct cnfarray {$/;"	s
cnfarrayAdd	grammar/rainerscript.c	/^cnfarrayAdd(struct cnfarray *__restrict__ const ar, es_str_t *__restrict__ val)$/;"	f
cnfarrayContentDestruct	grammar/rainerscript.c	/^cnfarrayContentDestruct(struct cnfarray *ar)$/;"	f
cnfarrayDup	grammar/rainerscript.c	/^cnfarrayDup(struct cnfarray *old)$/;"	f
cnfarrayNew	grammar/rainerscript.c	/^cnfarrayNew(es_str_t *val)$/;"	f
cnfarrayPrint	grammar/rainerscript.c	/^cnfarrayPrint(struct cnfarray *ar, int indent)$/;"	f	file:
cnfcurrfn	grammar/parserif.h	/^char *cnfcurrfn;$/;"	v
cnfexpr	grammar/rainerscript.h	/^struct cnfexpr {$/;"	s
cnfexprDestruct	grammar/rainerscript.c	/^cnfexprDestruct(struct cnfexpr *__restrict__ const expr)$/;"	f
cnfexprEval	grammar/rainerscript.c	/^cnfexprEval(const struct cnfexpr *__restrict__ const expr, struct var *__restrict__ const ret,$/;"	f
cnfexprEvalBool	grammar/rainerscript.c	/^cnfexprEvalBool(struct cnfexpr *__restrict__ const expr, void *__restrict__ const usrptr)$/;"	f
cnfexprEvalCollection	grammar/rainerscript.c	/^cnfexprEvalCollection(struct cnfexpr *__restrict__ const expr, void *__restrict__ const usrptr)$/;"	f
cnfexprNew	grammar/rainerscript.c	/^cnfexprNew(unsigned nodetype, struct cnfexpr *l, struct cnfexpr *r)$/;"	f
cnfexprOptimize	grammar/rainerscript.c	/^cnfexprOptimize(struct cnfexpr *expr)$/;"	f
cnfexprOptimize_AND_OR	grammar/rainerscript.c	/^cnfexprOptimize_AND_OR(struct cnfexpr *expr)$/;"	f	file:
cnfexprOptimize_CMPEQ_arr	grammar/rainerscript.c	/^cnfexprOptimize_CMPEQ_arr(struct cnfarray *arr)$/;"	f	file:
cnfexprOptimize_CMP_severity_facility	grammar/rainerscript.c	/^cnfexprOptimize_CMP_severity_facility(struct cnfexpr *expr)$/;"	f	file:
cnfexprOptimize_CMP_var	grammar/rainerscript.c	/^cnfexprOptimize_CMP_var(struct cnfexpr *expr)$/;"	f	file:
cnfexprOptimize_NOT	grammar/rainerscript.c	/^cnfexprOptimize_NOT(struct cnfexpr *expr)$/;"	f	file:
cnfexprPrint	grammar/rainerscript.c	/^cnfexprPrint(struct cnfexpr *expr, int indent)$/;"	f
cnffparamlst	grammar/rainerscript.h	/^struct cnffparamlst {$/;"	s
cnffparamlstNew	grammar/rainerscript.c	/^cnffparamlstNew(struct cnfexpr *expr, struct cnffparamlst *next)$/;"	f
cnffunc	grammar/rainerscript.h	/^struct cnffunc {$/;"	s
cnffuncDestruct	grammar/rainerscript.c	/^cnffuncDestruct(struct cnffunc *func)$/;"	f	file:
cnffuncNew	grammar/rainerscript.c	/^cnffuncNew(es_str_t *fname, struct cnffparamlst* paramlst)$/;"	f
cnffuncNew_prifilt	grammar/rainerscript.c	/^cnffuncNew_prifilt(int fac)$/;"	f
cnffuncid	grammar/rainerscript.h	/^enum cnffuncid {$/;"	g
cnfitr	grammar/rainerscript.h	/^struct cnfitr {$/;"	s
cnfnumval	grammar/rainerscript.h	/^struct cnfnumval {$/;"	s
cnfnumvalNew	grammar/rainerscript.c	/^cnfnumvalNew(const long long val)$/;"	f
cnfobj	grammar/rainerscript.h	/^struct cnfobj {$/;"	s
cnfobjDestruct	grammar/rainerscript.c	/^cnfobjDestruct(struct cnfobj *o)$/;"	f
cnfobjNew	grammar/rainerscript.c	/^cnfobjNew(enum cnfobjType objType, struct nvlst *lst)$/;"	f
cnfobjPrint	grammar/rainerscript.c	/^cnfobjPrint(struct cnfobj *o)$/;"	f
cnfobjType	grammar/rainerscript.h	/^enum cnfobjType {$/;"	g
cnfobjType2str	grammar/rainerscript.h	/^cnfobjType2str(enum cnfobjType ot)$/;"	f
cnfparamGetIdx	grammar/rainerscript.c	/^cnfparamGetIdx(struct cnfparamblk *params, char *name)$/;"	f
cnfparamblk	grammar/rainerscript.h	/^struct cnfparamblk { \/* now the actual param block use in API calls *\/$/;"	s
cnfparamdescr	action.c	/^static struct cnfparamdescr cnfparamdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfparamdescr	grammar/rainerscript.h	/^struct cnfparamdescr { \/* first the param description *\/$/;"	s
cnfparamdescr	runtime/glbl.c	/^static struct cnfparamdescr cnfparamdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfparamdescr	template.c	/^static struct cnfparamdescr cnfparamdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfparamdescrConstant	template.c	/^static struct cnfparamdescr cnfparamdescrConstant[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfparamdescrProperty	template.c	/^static struct cnfparamdescr cnfparamdescrProperty[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfparamsPrint	grammar/rainerscript.c	/^cnfparamsPrint(const struct cnfparamblk *params, const struct cnfparamvals *vals)$/;"	f
cnfparamvals	grammar/rainerscript.h	/^struct cnfparamvals { \/* the values we obtained for param descr. *\/$/;"	s
cnfparamvals	runtime/glbl.c	/^static struct cnfparamvals *cnfparamvals = NULL;$/;"	v	typeref:struct:cnfparamvals	file:
cnfparamvalsDestruct	contrib/imczmq/imczmq.c	/^	cnfparamvalsDestruct(pvals, &inppblk);$/;"	v
cnfparamvalsDestruct	contrib/imzmq3/imzmq3.c	/^        cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	contrib/imzmq3/imzmq3.c	/^    cnfparamvalsDestruct(pvals, &inppblk);$/;"	v
cnfparamvalsDestruct	contrib/mmcount/mmcount.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	contrib/mmgrok/mmgrok.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	contrib/mmsequence/mmsequence.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	contrib/omczmq/omczmq.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	contrib/omhiredis/omhiredis.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	contrib/omhttpfs/omhttpfs.c	/^    cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	contrib/omrabbitmq/omrabbitmq.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	contrib/omzmq3/omzmq3.c	/^    cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	grammar/rainerscript.c	/^cnfparamvalsDestruct(const struct cnfparamvals *paramvals, const struct cnfparamblk *blk)$/;"	f
cnfparamvalsDestruct	plugins/imfile/imfile.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/imfile/imfile.c	/^	cnfparamvalsDestruct(pvals, &inppblk);$/;"	v
cnfparamvalsDestruct	plugins/imjournal/imjournal.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/imklog/imklog.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/immark/immark.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/impstats/impstats.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/imptcp/imptcp.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/imptcp/imptcp.c	/^	cnfparamvalsDestruct(pvals, &inppblk);$/;"	v
cnfparamvalsDestruct	plugins/imrelp/imrelp.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/imrelp/imrelp.c	/^	cnfparamvalsDestruct(pvals, &inppblk);$/;"	v
cnfparamvalsDestruct	plugins/imtcp/imtcp.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/imtcp/imtcp.c	/^	cnfparamvalsDestruct(pvals, &inppblk);$/;"	v
cnfparamvalsDestruct	plugins/imudp/imudp.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/imudp/imudp.c	/^	cnfparamvalsDestruct(pvals, &inppblk);$/;"	v
cnfparamvalsDestruct	plugins/imuxsock/imuxsock.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/imuxsock/imuxsock.c	/^	cnfparamvalsDestruct(pvals, &inppblk);$/;"	v
cnfparamvalsDestruct	plugins/mmanon/mmanon.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/mmfields/mmfields.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/mmjsonparse/mmjsonparse.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/mmnormalize/mmnormalize.c	/^		cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/mmnormalize/mmnormalize.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/mmpstrucdata/mmpstrucdata.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/mmutf8fix/mmutf8fix.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/omelasticsearch/omelasticsearch.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/omkafka/omkafka.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/omlibdbi/omlibdbi.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/omlibdbi/omlibdbi.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/ommail/ommail.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/ommongodb/ommongodb.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/omprog/omprog.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/omrelp/omrelp.c	/^		cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/omsnmp/omsnmp.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/omudpspoof/omudpspoof.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/omudpspoof/omudpspoof.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	plugins/omuxsock/omuxsock.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	plugins/pmciscoios/pmciscoios.c	/^		cnfparamvalsDestruct(pvals, &parserpblk);$/;"	v
cnfparamvalsDestruct	tools/omfile.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	tools/omfile.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	tools/omfwd.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	tools/omfwd.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	tools/ompipe.c	/^		cnfparamvalsDestruct(pvals, &modpblk);$/;"	v
cnfparamvalsDestruct	tools/ompipe.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	tools/omusrmsg.c	/^	cnfparamvalsDestruct(pvals, &actpblk);$/;"	v
cnfparamvalsDestruct	tools/pmrfc3164.c	/^		cnfparamvalsDestruct(pvals, &parserpblk);$/;"	v
cnfparamvalsIsSet	grammar/rainerscript.c	/^cnfparamvalsIsSet(struct cnfparamblk *params, struct cnfparamvals *vals)$/;"	f
cnfpdescr	runtime/lmsig_gt.c	/^static struct cnfparamdescr cnfpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfpdescr	runtime/lmsig_ksi.c	/^static struct cnfparamdescr cnfpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfpdescr	runtime/queue.c	/^static struct cnfparamdescr cnfpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfpdescrQueue	runtime/lmcry_gcry.c	/^static struct cnfparamdescr cnfpdescrQueue[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfpdescrRegular	runtime/lmcry_gcry.c	/^static struct cnfparamdescr cnfpdescrRegular[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
cnfstmt	grammar/rainerscript.h	/^struct cnfstmt {$/;"	s
cnfstmtDestruct	grammar/rainerscript.c	/^cnfstmtDestruct(struct cnfstmt *stmt)$/;"	f	file:
cnfstmtDestructLst	grammar/rainerscript.c	/^cnfstmtDestructLst(struct cnfstmt *root)$/;"	f
cnfstmtNew	grammar/rainerscript.c	/^cnfstmtNew(unsigned s_type)$/;"	f
cnfstmtNewAct	grammar/rainerscript.c	/^cnfstmtNewAct(struct nvlst *lst)$/;"	f
cnfstmtNewCall	grammar/rainerscript.c	/^cnfstmtNewCall(es_str_t *name)$/;"	f
cnfstmtNewContinue	grammar/rainerscript.c	/^cnfstmtNewContinue(void)$/;"	f
cnfstmtNewLegaAct	grammar/rainerscript.c	/^cnfstmtNewLegaAct(char *actline)$/;"	f
cnfstmtNewPRIFILT	grammar/rainerscript.c	/^cnfstmtNewPRIFILT(char *prifilt, struct cnfstmt *t_then)$/;"	f
cnfstmtNewPROPFILT	grammar/rainerscript.c	/^cnfstmtNewPROPFILT(char *propfilt, struct cnfstmt *t_then)$/;"	f
cnfstmtNewSet	grammar/rainerscript.c	/^cnfstmtNewSet(char *var, struct cnfexpr *expr, int force_reset)$/;"	f
cnfstmtNewUnset	grammar/rainerscript.c	/^cnfstmtNewUnset(char *var)$/;"	f
cnfstmtOptimize	grammar/rainerscript.c	/^cnfstmtOptimize(struct cnfstmt *root)$/;"	f
cnfstmtOptimizeAct	grammar/rainerscript.c	/^cnfstmtOptimizeAct(struct cnfstmt *stmt)$/;"	f	file:
cnfstmtOptimizeCall	grammar/rainerscript.c	/^cnfstmtOptimizeCall(struct cnfstmt *stmt)$/;"	f	file:
cnfstmtOptimizeForeach	grammar/rainerscript.c	/^cnfstmtOptimizeForeach(struct cnfstmt *stmt)$/;"	f	file:
cnfstmtOptimizeIf	grammar/rainerscript.c	/^cnfstmtOptimizeIf(struct cnfstmt *stmt)$/;"	f	file:
cnfstmtOptimizePRIFilt	grammar/rainerscript.c	/^cnfstmtOptimizePRIFilt(struct cnfstmt *stmt)$/;"	f	file:
cnfstmtPrint	grammar/rainerscript.c	/^cnfstmtPrint(struct cnfstmt *root, int indent)$/;"	f
cnfstmtPrintOnly	grammar/rainerscript.c	/^cnfstmtPrintOnly(struct cnfstmt *stmt, int indent, sbool subtree)$/;"	f
cnfstringval	grammar/rainerscript.h	/^struct cnfstringval {$/;"	s
cnfstringvalNew	grammar/rainerscript.c	/^cnfstringvalNew(es_str_t *const estr)$/;"	f
cnfvar	grammar/rainerscript.h	/^struct cnfvar {$/;"	s
cnfvarNew	grammar/rainerscript.c	/^cnfvarNew(char *name)$/;"	f
code	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	int code;$/;"	m	struct:severMap_s	file:
collection	grammar/rainerscript.h	/^    struct cnfexpr* collection;$/;"	m	struct:cnfitr	typeref:struct:cnfitr::cnfexpr
collection	plugins/ommongodb/ommongodb.c	/^	uchar *collection;$/;"	m	struct:_instanceData	file:
commitTransaction	runtime/modules.h	/^			rsRetVal (*commitTransaction)(void *const, actWrkrIParams_t *const, const unsigned);$/;"	m	struct:modInfo_s::__anon29::__anon31
complevel	tools/omfwd.c	/^	int complevel = -1;$/;"	v
compressionLevel	plugins/omgssapi/omgssapi.c	/^	int compressionLevel; \/* 0 - no compression, else level for zlib *\/$/;"	m	struct:_instanceData	file:
compressionLevel	tools/omfwd.c	/^	int compressionLevel;	\/* 0 - no compression, else level for zlib *\/$/;"	m	struct:_instanceData	file:
compressionMode	plugins/imptcp/imptcp.c	/^	uint8_t compressionMode;$/;"	m	struct:instanceConf_s	file:
compressionMode	plugins/imptcp/imptcp.c	/^	uint8_t compressionMode;$/;"	m	struct:ptcpsess_s	file:
compressionMode	plugins/imptcp/imptcp.c	/^	uint8_t compressionMode;$/;"	m	struct:ptcpsrv_s	file:
compressionMode	tools/omfwd.c	/^	uint8_t compressionMode;$/;"	m	struct:_instanceData	file:
computedHash	runtime/librsgt.h	/^	GTDataHash *computedHash;$/;"	m	struct:gterrctx_s
computedHash	runtime/librsksi.h	/^	KSI_DataHash *computedHash;$/;"	m	struct:ksierrctx_s
condDoRun	tests/tcpflood.c	/^pthread_cond_t condDoRun;$/;"	v
condStarted	tests/tcpflood.c	/^pthread_cond_t condStarted;$/;"	v
condThrdTerm	threads.h	/^	pthread_cond_t condThrdTerm;\/* condition: thread terminates (used just for shutdown loop) *\/$/;"	m	struct:thrdInfo
condThrdTrm	runtime/wtp.h	/^	pthread_cond_t condThrdTrm;\/* signalled when threads terminate *\/$/;"	m	struct:wtp_s
conf	grammar/grammar.y	/^conf:	\/* empty (to end recursion) *\/$/;"	l
conf	runtime/conf.h	/^PROTOTYPEObj(conf);$/;"	v
confCURR_IF_VERSION	runtime/conf.h	51;"	d
confParams	plugins/omkafka/omkafka.c	/^	struct kafka_params *confParams;$/;"	m	struct:_instanceData	typeref:struct:_instanceData::kafka_params	file:
configSetViaV2Method	contrib/imkmsg/imkmsg.h	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s
configSetViaV2Method	plugins/imfile/imfile.c	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s	file:
configSetViaV2Method	plugins/imklog/imklog.h	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s
configSetViaV2Method	plugins/immark/immark.c	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s	file:
configSetViaV2Method	plugins/impstats/impstats.c	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s	file:
configSetViaV2Method	plugins/imptcp/imptcp.c	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s	file:
configSetViaV2Method	plugins/imtcp/imtcp.c	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s	file:
configSetViaV2Method	plugins/imudp/imudp.c	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s	file:
configSetViaV2Method	plugins/imuxsock/imuxsock.c	/^	sbool configSetViaV2Method;$/;"	m	struct:modConfData_s	file:
configSettings_s	action.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	contrib/imkmsg/imkmsg.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/imfile/imfile.c	/^static struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/imjournal/imjournal.c	/^static struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/imklog/imklog.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/impstats/impstats.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/imptcp/imptcp.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/imrelp/imrelp.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/imtcp/imtcp.c	/^static struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/imudp/imudp.c	/^static struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/imuxsock/imuxsock.c	/^static struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/mmexternal/mmexternal.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/mmnormalize/mmnormalize.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/mmsnmptrapd/mmsnmptrapd.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omgssapi/omgssapi.c	/^static struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omhdfs/omhdfs.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omlibdbi/omlibdbi.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/ommail/ommail.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/ommysql/ommysql.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/ompgsql/ompgsql.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omprog/omprog.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omrelp/omrelp.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omruleset/omruleset.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omsnmp/omsnmp.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omstdout/omstdout.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omtesting/omtesting.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omudpspoof/omudpspoof.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	plugins/omuxsock/omuxsock.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	tools/omfile.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	tools/omfwd.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	tools/ompipe.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_s	tools/omusrmsg.c	/^typedef struct configSettings_s {$/;"	s	file:
configSettings_t	action.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	contrib/imkmsg/imkmsg.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/imklog/imklog.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/impstats/impstats.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/imptcp/imptcp.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/imrelp/imrelp.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/mmexternal/mmexternal.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/mmnormalize/mmnormalize.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/mmsnmptrapd/mmsnmptrapd.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omhdfs/omhdfs.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omlibdbi/omlibdbi.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/ommail/ommail.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/ommysql/ommysql.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/ompgsql/ompgsql.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omprog/omprog.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omrelp/omrelp.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omruleset/omruleset.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omsnmp/omsnmp.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omstdout/omstdout.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omtesting/omtesting.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omudpspoof/omudpspoof.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	plugins/omuxsock/omuxsock.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	tools/omfile.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	tools/omfwd.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	tools/ompipe.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configSettings_t	tools/omusrmsg.c	/^} configSettings_t;$/;"	t	typeref:struct:configSettings_s	file:
configfile	plugins/ommysql/ommysql.c	/^	uchar   *configfile;			\/* MySQL Client Configuration File *\/$/;"	m	struct:_instanceData	file:
configsection	plugins/ommysql/ommysql.c	/^	uchar   *configsection;		\/* MySQL Client Configuration Section *\/$/;"	m	struct:_instanceData	file:
configureSTRMListen	runtime/strmsrv.c	/^configureSTRMListen(strmsrv_t *pThis, uchar *pszPort)$/;"	f	file:
configureSTRMListen	runtime/strmsrv.h	/^	rsRetVal (*configureSTRMListen)(strmsrv_t*, uchar *pszPort);$/;"	v
configureTCPListen	runtime/tcpsrv.c	/^configureTCPListen(tcpsrv_t *pThis, uchar *pszPort, int bSuppOctetFram, uchar *pszAddr)$/;"	f	file:
configureTCPListen	runtime/tcpsrv.h	/^	rsRetVal (*configureTCPListen)(tcpsrv_t*, uchar *pszPort, int bSuppOctetFram, uchar *pszAddr);$/;"	v
configured	plugins/imfile/imfile.c	/^	fileTable_t configured; \/* associated configured files *\/$/;"	m	struct:dirInfo_s	file:
conn	contrib/omhiredis/omhiredis.c	/^	redisContext *conn; \/* redis connection *\/$/;"	m	struct:wrkrInstanceData	file:
conn	contrib/omrabbitmq/omrabbitmq.c	/^	amqp_connection_state_t conn;$/;"	m	struct:_instanceData	file:
conn	plugins/omlibdbi/omlibdbi.c	/^	dbi_conn conn;		\/* handle to database *\/$/;"	m	struct:_instanceData	file:
conn	plugins/ommongodb/ommongodb.c	/^	mongo_sync_connection *conn;$/;"	m	struct:_instanceData	file:
conn	tools/logctl.c	/^	mongo_sync_connection *conn;	$/;"	m	struct:db_connect	file:
console_log_level	contrib/imkmsg/imkmsg.h	/^	int console_log_level;$/;"	m	struct:modConfData_s
console_log_level	plugins/imklog/imklog.c	/^	int console_log_level; \/* still used for BSD *\/$/;"	m	struct:configSettings_s	file:
console_log_level	plugins/imklog/imklog.h	/^	int console_log_level;$/;"	m	struct:modConfData_s
constFoldConcat	grammar/rainerscript.c	/^constFoldConcat(struct cnfexpr *expr)$/;"	f	file:
constSubject	plugins/ommail/ommail.c	/^	uchar *constSubject; \/* if non-NULL, constant string to be used as subject *\/$/;"	m	struct:_instanceData	file:
constant	grammar/grammar.y	/^constant: BEGIN_CONSTANT nvlst ENDOBJ	{ $$ = cnfobjNew(CNFOBJ_CONSTANT, $2); }$/;"	l
constant	template.h	/^		} constant;$/;"	m	union:templateEntry::__anon69	typeref:struct:templateEntry::__anon69::__anon70
container	plugins/mmjsonparse/mmjsonparse.c	/^	uchar *container;$/;"	m	struct:_instanceData	file:
containsGlobWildcard	runtime/srutils.c	/^containsGlobWildcard(char *str)$/;"	f
context	plugins/omelasticsearch/omelasticsearch.c	/^} context;$/;"	t	typeref:struct:exeContext	file:
convertFile	tools/rsgtutil.c	/^convertFile(char *name)$/;"	f	file:
convertFileKSI	tools/rsgtutil.c	/^convertFileKSI(char *name)$/;"	f	file:
cookie	plugins/mmjsonparse/mmjsonparse.c	/^	char *cookie;$/;"	m	struct:_instanceData	file:
copyescaped	plugins/imuxsock/imuxsock.c	/^copyescaped(uchar *dstbuf, uchar *inbuf, int inlen)$/;"	f	file:
count	contrib/omhiredis/omhiredis.c	/^	int count; \/* count of command sent for current batch *\/$/;"	m	struct:wrkrInstanceData	file:
count	plugins/imjournal/imjournal.c	/^	int count = 0;$/;"	v
country	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	m	struct:record	file:
createConstantTpe	template.c	/^createConstantTpe(struct template *pTpl, struct cnfobj *o)$/;"	f	file:
createContext	contrib/imzmq3/imzmq3.c	/^static rsRetVal createContext() {$/;"	f	file:
createInstance	contrib/imczmq/imczmq.c	/^static rsRetVal createInstance(instanceConf_t** pinst) {$/;"	f	file:
createInstance	contrib/imzmq3/imzmq3.c	/^static rsRetVal createInstance(instanceConf_t** pinst) {$/;"	f	file:
createInstance	contrib/mmcount/mmcount.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	contrib/mmgrok/mmgrok.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	contrib/mmsequence/mmsequence.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	contrib/omczmq/omczmq.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	contrib/omhiredis/omhiredis.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	contrib/omhttpfs/omhttpfs.c	/^    CHKiRet(createInstance(&pData));$/;"	v
createInstance	contrib/omrabbitmq/omrabbitmq.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	contrib/omzmq3/omzmq3.c	/^    CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/imfile/imfile.c	/^	CHKiRet(createInstance(&inst));$/;"	v
createInstance	plugins/imfile/imfile.c	/^createInstance(instanceConf_t **pinst)$/;"	f	file:
createInstance	plugins/imptcp/imptcp.c	/^	CHKiRet(createInstance(&inst));$/;"	v
createInstance	plugins/imptcp/imptcp.c	/^createInstance(instanceConf_t **pinst)$/;"	f	file:
createInstance	plugins/imrelp/imrelp.c	/^	CHKiRet(createInstance(&inst));$/;"	v
createInstance	plugins/imrelp/imrelp.c	/^createInstance(instanceConf_t **pinst)$/;"	f	file:
createInstance	plugins/imtcp/imtcp.c	/^	CHKiRet(createInstance(&inst));$/;"	v
createInstance	plugins/imtcp/imtcp.c	/^createInstance(instanceConf_t **pinst)$/;"	f	file:
createInstance	plugins/imudp/imudp.c	/^createInstance(instanceConf_t **pinst)$/;"	f	file:
createInstance	plugins/imuxsock/imuxsock.c	/^	CHKiRet(createInstance(&inst));$/;"	v
createInstance	plugins/imuxsock/imuxsock.c	/^createInstance(instanceConf_t **pinst)$/;"	f	file:
createInstance	plugins/mmanon/mmanon.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/mmaudit/mmaudit.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/mmexternal/mmexternal.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/mmfields/mmfields.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/mmjsonparse/mmjsonparse.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/mmnormalize/mmnormalize.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/mmpstrucdata/mmpstrucdata.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/mmutf8fix/mmutf8fix.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omelasticsearch/omelasticsearch.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omhdfs/omhdfs.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omjournal/omjournal.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omkafka/omkafka.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omlibdbi/omlibdbi.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/ommail/ommail.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/ommongodb/ommongodb.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/ommysql/ommysql.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omprog/omprog.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omrelp/omrelp.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omruleset/omruleset.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omsnmp/omsnmp.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omstdout/omstdout.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omudpspoof/omudpspoof.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/omuxsock/omuxsock.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	plugins/pmciscoios/pmciscoios.c	/^	CHKiRet(createInstance(&inst));$/;"	v
createInstance	plugins/pmciscoios/pmciscoios.c	/^createInstance(instanceConf_t **pinst)$/;"	f	file:
createInstance	tools/omfile.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	tools/omfwd.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	tools/ompipe.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	tools/omusrmsg.c	/^	CHKiRet(createInstance(&pData));$/;"	v
createInstance	tools/pmrfc3164.c	/^	CHKiRet(createInstance(&inst));$/;"	v
createInstance	tools/pmrfc3164.c	/^createInstance(instanceConf_t **pinst)$/;"	f	file:
createListTpl	template.c	/^createListTpl(struct template *pTpl, struct cnfobj *o)$/;"	f	file:
createListener	contrib/imczmq/imczmq.c	/^static rsRetVal createListener(struct cnfparamvals* pvals) {$/;"	f	file:
createListener	contrib/imzmq3/imzmq3.c	/^static rsRetVal createListener(struct cnfparamvals* pvals) {$/;"	f	file:
createListner	plugins/imudp/imudp.c	/^createListner(es_str_t *port, struct cnfparamvals *pvals)$/;"	f	file:
createLogSocket	plugins/imuxsock/imuxsock.c	/^createLogSocket(lstn_t *pLstn)$/;"	f	file:
createMainQueue	tests/runtime-dummy.c	/^rsRetVal createMainQueue(void) { return RS_RET_ERR; }$/;"	f
createMainQueue	tools/rsyslogd.c	/^rsRetVal createMainQueue(qqueue_t **ppQueue, uchar *pszQueueName, struct nvlst *lst)$/;"	f
createPropertyTpe	template.c	/^createPropertyTpe(struct template *pTpl, struct cnfobj *o)$/;"	f	file:
createSocket	contrib/imzmq3/imzmq3.c	/^static rsRetVal createSocket(instanceConf_t* info, void** sock) {$/;"	f	file:
createTopic	plugins/omkafka/omkafka.c	/^createTopic(instanceData *__restrict__ const pData, const uchar *__restrict__ const newTopicName, rd_kafka_topic_t** topic) {$/;"	f	file:
createWrkrInstance	runtime/modules.h	/^			rsRetVal (*createWrkrInstance)(void*ppWrkrData, void*pData);$/;"	m	struct:modInfo_s::__anon29::__anon31
create_conn	tools/logctl.c	/^struct db_connect* create_conn()$/;"	f
create_door_thr	plugins/imsolaris/sun_cddl.c	/^create_door_thr(void __attribute__((unused)) *arg)$/;"	f	file:
create_hashtable	runtime/hashtable.c	/^create_hashtable(unsigned int minsize,$/;"	f
create_objects	plugins/omelasticsearch/cJSON/test.c	/^void create_objects()$/;"	f
create_query	tools/logctl.c	/^struct query_doc* create_query(struct queryopt *opt)$/;"	f
create_reference	plugins/omelasticsearch/cJSON/cjson.c	/^static cJSON *create_reference(cJSON *item) {cJSON *ref=cJSON_New_Item();if (!ref) return 0;memcpy(ref,item,sizeof(cJSON));ref->string=0;ref->type|=cJSON_IsReference;ref->next=ref->prev=0;return ref;}$/;"	f	file:
create_select	tools/logctl.c	/^struct select_doc* create_select()$/;"	f
create_strm_socket	runtime/strmsrv.c	/^create_strm_socket(strmsrv_t *pThis)$/;"	f	file:
create_strm_socket	runtime/strmsrv.h	/^	rsRetVal (*create_strm_socket)(strmsrv_t *pThis);$/;"	v
create_tcp_socket	runtime/tcpsrv.c	/^create_tcp_socket(tcpsrv_t *pThis)$/;"	f	file:
create_tcp_socket	runtime/tcpsrv.h	/^	rsRetVal (*create_tcp_socket)(tcpsrv_t *pThis);$/;"	v
create_udp_socket	runtime/net.c	/^int *create_udp_socket(uchar *hostname, uchar *pszPort, int bIsServer, int rcvbuf)$/;"	f
create_udp_socket	runtime/net.h	/^	int *(*create_udp_socket)(uchar *hostname, uchar *LogPort, int bIsServer, int rcvbuf);$/;"	v
create_xconsole	platform/slackware/rc.rsyslogd	/^create_xconsole()$/;"	f
cry_algo	tools/rscryutil.c	/^static int cry_algo = GCRY_CIPHER_AES128;$/;"	v	file:
cry_key	tools/rscryutil.c	/^static char *cry_key = NULL;$/;"	v	file:
cry_keylen	tools/rscryutil.c	/^static unsigned cry_keylen = 0;$/;"	v	file:
cry_mode	tools/rscryutil.c	/^static int cry_mode = GCRY_CIPHER_MODE_CBC;$/;"	v	file:
cryprov	runtime/queue.h	/^	cryprov_if_t cryprov;	\/* ptr to crypto provider interface *\/$/;"	m	struct:queue_s
cryprov	runtime/stream.h	/^	cryprov_if_t *cryprov;  \/* ptr to crypto provider; NULL = do not encrypt *\/$/;"	m	struct:strm_s
cryprov	tools/omfile.c	/^	cryprov_if_t cryprov;	\/* ptr to crypto provider interface *\/$/;"	m	struct:_instanceData	file:
cryprovCURR_IF_VERSION	runtime/cryprov.h	47;"	d
cryprovData	runtime/queue.h	/^	void *cryprovData; \/* opaque data ptr for provider use *\/$/;"	m	struct:queue_s
cryprovData	runtime/stream.h	/^	void	*cryprovData;	\/* opaque data ptr for provider use *\/$/;"	m	struct:strm_s
cryprovData	tools/omfile.c	/^	void	*cryprovData;	\/* opaque data ptr for provider use *\/$/;"	m	struct:_instanceData	file:
cryprovFileData	runtime/stream.h	/^	void 	*cryprovFileData;\/* opaque data ptr for file instance *\/$/;"	m	struct:strm_s
cryprovName	runtime/queue.h	/^	uchar *cryprovName; \/* crypto provider to use *\/$/;"	m	struct:queue_s
cryprovName	tools/omfile.c	/^	uchar 	*cryprovName;	\/* crypto provider *\/$/;"	m	struct:_instanceData	file:
cryprovNameFull	runtime/queue.h	/^	uchar 	*cryprovNameFull;\/* full internal crypto provider name *\/$/;"	m	struct:queue_s
cryprovNameFull	tools/omfile.c	/^	uchar 	*cryprovNameFull;\/* full internal crypto provider name *\/$/;"	m	struct:_instanceData	file:
cs	action.c	/^configSettings_t cs;					\/* our current config settings *\/$/;"	v
cs	contrib/imkmsg/imkmsg.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/imfile/imfile.c	/^} cs;$/;"	v	typeref:struct:configSettings_s	file:
cs	plugins/imjournal/imjournal.c	/^} cs;$/;"	v	typeref:struct:configSettings_s	file:
cs	plugins/imklog/imklog.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/impstats/impstats.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/imptcp/imptcp.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/imrelp/imrelp.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/imtcp/imtcp.c	/^} cs;$/;"	v	typeref:struct:configSettings_s	file:
cs	plugins/imudp/imudp.c	/^} cs;$/;"	v	typeref:struct:configSettings_s	file:
cs	plugins/imuxsock/imuxsock.c	/^} cs;$/;"	v	typeref:struct:configSettings_s	file:
cs	plugins/mmexternal/mmexternal.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/mmnormalize/mmnormalize.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/mmsnmptrapd/mmsnmptrapd.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/omgssapi/omgssapi.c	/^} cs;$/;"	v	typeref:struct:configSettings_s	file:
cs	plugins/omhdfs/omhdfs.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/omlibdbi/omlibdbi.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/ommail/ommail.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/ommysql/ommysql.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/ompgsql/ompgsql.c	/^static configSettings_t __attribute__((unused)) cs;$/;"	v	file:
cs	plugins/omprog/omprog.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/omrelp/omrelp.c	/^static configSettings_t __attribute__((unused)) cs;$/;"	v	file:
cs	plugins/omruleset/omruleset.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/omsnmp/omsnmp.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/omstdout/omstdout.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/omtesting/omtesting.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/omudpspoof/omudpspoof.c	/^static configSettings_t cs;$/;"	v	file:
cs	plugins/omuxsock/omuxsock.c	/^static configSettings_t cs;$/;"	v	file:
cs	tools/omfile.c	/^static configSettings_t cs;$/;"	v	file:
cs	tools/omfwd.c	/^static configSettings_t cs;$/;"	v	file:
cs	tools/ompipe.c	/^static configSettings_t __attribute__((unused)) cs;$/;"	v	file:
cs	tools/omusrmsg.c	/^static configSettings_t __attribute__((unused)) cs;$/;"	v	file:
cs_save	action.c	/^configSettings_t cs_save;				\/* our saved (scope!) config settings *\/$/;"	v
cslCmdHdlr	runtime/cfsysline.h	/^	rsRetVal (*cslCmdHdlr)();		\/* function pointer to use with handler (params depending on eType) *\/$/;"	m	struct:cslCmdHdlr_s
cslCmdHdlrType	runtime/typedefs.h	/^typedef enum cslCmdHdlrType {$/;"	g
cslCmdHdlr_s	runtime/cfsysline.h	/^struct cslCmdHdlr_s { \/* config file sysline parse entry *\/$/;"	s
cslCmdHdlr_t	runtime/cfsysline.h	/^typedef struct cslCmdHdlr_s cslCmdHdlr_t;$/;"	t	typeref:struct:cslCmdHdlr_s
cslCmd_s	runtime/cfsysline.h	/^struct cslCmd_s { \/* config file sysline parse entry *\/$/;"	s
cslCmd_t	runtime/cfsysline.h	/^typedef struct cslCmd_s cslCmd_t;$/;"	t	typeref:struct:cslCmd_s
cslConfObjType	runtime/typedefs.h	/^typedef enum cslConfObjType {$/;"	g
cslcAddHdlr	runtime/cfsysline.c	/^static rsRetVal cslcAddHdlr(cslCmd_t *pThis, ecslCmdHdrlType eType, rsRetVal (*pHdlr)(), void *pData, void *pOwnerCookie, int *permitted)$/;"	f	file:
cslcConstruct	runtime/cfsysline.c	/^static rsRetVal cslcConstruct(cslCmd_t **ppThis, int bChainingPermitted)$/;"	f	file:
cslcDestruct	runtime/cfsysline.c	/^static rsRetVal cslcDestruct(void *pData)$/;"	f	file:
cslcKeyDestruct	runtime/cfsysline.c	/^static rsRetVal cslcKeyDestruct(void *pData)$/;"	f	file:
cslchCallHdlr	runtime/cfsysline.c	/^static rsRetVal cslchCallHdlr(cslCmdHdlr_t *pThis, uchar **ppConfLine)$/;"	f	file:
cslchConstruct	runtime/cfsysline.c	/^static rsRetVal cslchConstruct(cslCmdHdlr_t **ppThis)$/;"	f	file:
cslchDestruct	runtime/cfsysline.c	/^static rsRetVal cslchDestruct(void *pThis)$/;"	f	file:
cslchKeyCompare	runtime/cfsysline.c	/^static int cslchKeyCompare(void *pKey1, void *pKey2)$/;"	f	file:
cslchKeyDestruct	runtime/cfsysline.c	/^static rsRetVal cslchKeyDestruct(void __attribute__((unused)) *pData)$/;"	f	file:
cslchSetEntry	runtime/cfsysline.c	/^rsRetVal cslchSetEntry(cslCmdHdlr_t *pThis, ecslCmdHdrlType eType, rsRetVal (*pHdlr)(), void *pData, int *permitted)$/;"	f
cstr	contrib/mmsequence/mmsequence.c	/^	char *cstr;$/;"	v
cstr	plugins/imptcp/imptcp.c	/^	char *cstr;$/;"	v
cstr	plugins/mmexternal/mmexternal.c	/^	const char *cstr = NULL;$/;"	v
cstr	plugins/mmnormalize/mmnormalize.c	/^	char *cstr;$/;"	v
cstr	plugins/omelasticsearch/omelasticsearch.c	/^	char *cstr = NULL;$/;"	v
cstr	plugins/ommysql/ommysql.c	/^	char *cstr;$/;"	v
cstr	tools/omfwd.c	/^	char *cstr;$/;"	v
cstrAppendCStr	runtime/stringbuf.c	/^rsRetVal cstrAppendCStr(cstr_t *pThis, cstr_t *pstrAppend)$/;"	f
cstrAppendChar	runtime/stringbuf.h	/^static inline rsRetVal cstrAppendChar(cstr_t *pThis, uchar c)$/;"	f
cstrConstructFromESStr	runtime/stringbuf.c	/^rsRetVal cstrConstructFromESStr(cstr_t **ppThis, es_str_t *str)$/;"	f
cstrConvSzStrAndDestruct	runtime/stringbuf.c	/^rsRetVal cstrConvSzStrAndDestruct(cstr_t **ppThis, uchar **ppSz, int bRetNULL)$/;"	f
cstrDestruct	runtime/stringbuf.h	67;"	d
cstrFinalize	runtime/stringbuf.h	/^cstrFinalize(cstr_t *pThis)$/;"	f
cstrGetSzStr	runtime/stringbuf.h	/^static inline uchar*  cstrGetSzStr(cstr_t *pThis)$/;"	f
cstrGetSzStrNoNULL	runtime/stringbuf.h	/^static inline uchar*  cstrGetSzStrNoNULL(cstr_t *pThis)$/;"	f
cstrLen	runtime/stringbuf.c	/^int cstrLen(cstr_t *pThis)$/;"	f
cstrLen	runtime/stringbuf.h	218;"	d
cstrPrint	grammar/rainerscript.c	/^cstrPrint(char *text, es_str_t *estr)$/;"	f
cstrTrimTrailingWhiteSpace	runtime/stringbuf.c	/^rsRetVal cstrTrimTrailingWhiteSpace(cstr_t *pThis)$/;"	f
cstr_s	runtime/stringbuf.h	/^typedef struct cstr_s$/;"	s
cstr_t	runtime/stringbuf.h	/^} cstr_t;$/;"	t	typeref:struct:cstr_s
cstring_bytes	contrib/omrabbitmq/omrabbitmq.c	/^cstring_bytes(const char *str)$/;"	f	file:
ctrLast	runtime/statsobj.h	/^	ctr_t *ctrLast;$/;"	m	struct:statsobj_s
ctrMaxqsize	runtime/queue.h	/^	int ctrMaxqsize; \/* NOT guarded by a mutex *\/$/;"	m	struct:queue_s
ctrQueueSize	plugins/omkafka/omkafka.c	/^int ctrQueueSize;$/;"	v
ctrRoot	runtime/statsobj.h	/^	ctr_t *ctrRoot;			\/* doubly-linked list of statsobj counters *\/$/;"	m	struct:statsobj_s
ctrType	runtime/statsobj.h	/^	statsCtrType_t ctrType;$/;"	m	struct:ctr_s
ctrType_Int	runtime/statsobj.h	/^	ctrType_Int$/;"	e	enum:statsCtrType_e
ctrType_IntCtr	runtime/statsobj.h	/^	ctrType_IntCtr,$/;"	e	enum:statsCtrType_e
ctr_s	runtime/statsobj.h	/^typedef struct ctr_s {$/;"	s
ctr_t	runtime/statsobj.h	/^} ctr_t;$/;"	t	typeref:struct:ctr_s
ctx	runtime/libgcry.h	/^	gcryctx ctx;$/;"	m	struct:gcryfile_s
ctx	runtime/librsgt.h	/^	gtctx ctx;$/;"	m	struct:gtfile_s
ctx	runtime/librsksi.h	/^	rsksictx ctx;$/;"	m	struct:ksifile_s
ctx	runtime/lmcry_gcry.h	/^	gcryctx ctx;$/;"	m	struct:lmcry_gcry_s
ctx	runtime/lmsig_gt.h	/^	gtctx ctx;	\/* librsgt context - contains all we need *\/$/;"	m	struct:lmsig_gt_s
ctx	runtime/lmsig_ksi.h	/^	rsksictx ctx;	\/* librsksi context - contains all we need *\/$/;"	m	struct:lmsig_ksi_s
ctxln	plugins/mmnormalize/mmnormalize.c	/^	ln_ctx ctxln;		\/**< context to be used for liblognorm *\/$/;"	m	struct:_instanceData	file:
cur_comma	contrib/pmpanngfw/pmpanngfw.c	/^    int cur_comma = 0;$/;"	v
curl	contrib/omhttpfs/omhttpfs.c	/^    CURL* curl;$/;"	m	struct:wrkrInstanceData	file:
curlHandle	plugins/omelasticsearch/omelasticsearch.c	/^	CURL	*curlHandle;	\/* libcurl session handle *\/$/;"	m	struct:wrkrInstanceData	file:
curlPost	plugins/omelasticsearch/omelasticsearch.c	/^curlPost(wrkrInstanceData_t *pWrkrData, uchar *message, int msglen, uchar **tpls, int nmsgs)$/;"	f	file:
curlResult	plugins/omelasticsearch/omelasticsearch.c	/^curlResult(void *ptr, size_t size, size_t nmemb, void *userdata)$/;"	f
curlSetup	plugins/omelasticsearch/omelasticsearch.c	/^curlSetup(wrkrInstanceData_t *pWrkrData, instanceData *pData)$/;"	f	file:
currCnt	runtime/msg.c	/^	int currCnt;$/;"	v
currIParam	runtime/wti.h	/^			int currIParam;$/;"	m	struct:actWrkrInfo::__anon60::__anon61
currMax	plugins/imfile/imfile.c	/^	int currMax;$/;"	m	struct:fileTable_s	file:
currMaxDirs	plugins/imfile/imfile.c	/^static int currMaxDirs;$/;"	v	file:
currPartition	plugins/omkafka/omkafka.c	/^	uint32_t currPartition;$/;"	m	struct:_instanceData	file:
currRefCount	runtime/prop.c	/^	currRefCount = ATOMIC_DEC_AND_FETCH(&pThis->iRefCount, &pThis->mutRefCount);$/;"	v
currTpl1	plugins/omelasticsearch/omelasticsearch.c	/^		uchar *currTpl1;$/;"	m	struct:wrkrInstanceData::__anon17	file:
currTpl2	plugins/omelasticsearch/omelasticsearch.c	/^		uchar *currTpl2;$/;"	m	struct:wrkrInstanceData::__anon17	file:
cursor	tools/logctl.c	/^	mongo_sync_cursor *cursor;	$/;"	m	struct:db_cursor	file:
cursor_next	tools/logctl.c	/^gboolean cursor_next (struct db_cursor *db_c)$/;"	f
cver	tools/recover_qi.pl	/^sub cver { 1 }$/;"	s
cvthname	runtime/net.c	/^cvthname(struct sockaddr_storage *f, prop_t **localName, prop_t **fqdn, prop_t **ip)$/;"	f
cvthname	runtime/net.h	/^	rsRetVal (*cvthname)(struct sockaddr_storage *f, prop_t **localName, prop_t **fqdn, prop_t **ip);$/;"	v
d	grammar/rainerscript.h	/^	} d;$/;"	m	struct:cnfstmt	typeref:union:cnfstmt::__anon4
d	grammar/rainerscript.h	/^	} d;$/;"	m	struct:var	typeref:union:var::__anon3
d	runtime/lookup.h	/^	} d;$/;"	m	struct:lookup_s	typeref:union:lookup_s::__anon28
d_free	runtime/debug.h	167;"	d
d_free	runtime/debug.h	174;"	d
d_free_topic	plugins/omkafka/omkafka.c	/^d_free_topic(rd_kafka_topic_t **topic)$/;"	f	file:
d_pthread_cond_timedwait	runtime/debug.h	166;"	d
d_pthread_cond_timedwait	runtime/debug.h	173;"	d
d_pthread_cond_wait	runtime/debug.h	165;"	d
d_pthread_cond_wait	runtime/debug.h	172;"	d
d_pthread_mutex_lock	runtime/debug.h	162;"	d
d_pthread_mutex_lock	runtime/debug.h	169;"	d
d_pthread_mutex_trylock	runtime/debug.h	163;"	d
d_pthread_mutex_trylock	runtime/debug.h	170;"	d
d_pthread_mutex_unlock	runtime/debug.h	164;"	d
d_pthread_mutex_unlock	runtime/debug.h	171;"	d
data	plugins/imrelp/imrelp.c	/^	} data;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::__anon15	file:
data	plugins/omelasticsearch/omelasticsearch.c	/^		es_str_t *data;$/;"	m	struct:wrkrInstanceData::__anon17	file:
data	runtime/librsgt_common.h	/^			uint8_t *data;$/;"	m	struct:block_sig_s::__anon26::__anon27
data	runtime/librsgt_common.h	/^	uint8_t *data;$/;"	m	struct:imprint_s
data	runtime/librsgt_common.h	/^	uint8_t data[64*1024];	\/* the actual data part (of length tlvlen) *\/$/;"	m	struct:tlvrecord_s
data	template.h	/^	} data;$/;"	m	struct:templateEntry	typeref:union:templateEntry::__anon69
dataFP	tests/tcpflood.c	/^FILE *dataFP = NULL;		\/* file pointer for data file, if used *\/$/;"	v
dataFile	tests/tcpflood.c	/^static char *dataFile = NULL;	\/* name of data file, if NULL, generate own data *\/$/;"	v	file:
datatype	grammar/rainerscript.h	/^	char datatype; \/* 'N' number, 'S' string, 'J' JSON, 'A' array$/;"	m	struct:var
date	tools/logctl.c	/^	char *date;$/;"	m	struct:ofields	file:
date_r	tools/logctl.c	/^	gint64 date_r;$/;"	m	struct:ofields	file:
datetime	plugins/impstats/statslog-analyzer.py	/^import datetime$/;"	i
datetime	plugins/impstats/statslog-graph.py	/^import datetime$/;"	i
datetime	plugins/impstats/statslog-splitter.py	/^import datetime$/;"	i
datetime	runtime/datetime.h	/^PROTOTYPEObj(datetime);$/;"	v
datetimeCURR_IF_VERSION	runtime/datetime.h	51;"	d
datetime_s	runtime/datetime.h	/^typedef struct datetime_s {$/;"	s
datetime_t	runtime/datetime.h	/^} datetime_t;$/;"	t	typeref:struct:datetime_s
day	runtime/syslogd-types.h	/^	intTiny day;$/;"	m	struct:syslogTime
daysInYear	runtime/msg.c	/^static char *daysInYear[366] = {$/;"	v	file:
db	plugins/ommongodb/ommongodb.c	/^        uchar *db;$/;"	m	struct:_instanceData	file:
dbName	plugins/omlibdbi/omlibdbi.c	/^	uchar *dbName;		\/* database to use *\/$/;"	m	struct:_instanceData	file:
dbName	plugins/omlibdbi/omlibdbi.c	/^	uchar *dbName;		\/* database to use *\/$/;"	m	struct:configSettings_s	file:
dbNcoll	plugins/ommongodb/ommongodb.c	/^	uchar *dbNcoll;$/;"	m	struct:_instanceData	file:
dbRandConnDrop	tests/tcpflood.c	/^static double dbRandConnDrop = 0.95; \/* random drop probability *\/$/;"	v	file:
db_connect	tools/logctl.c	/^struct db_connect$/;"	s	file:
db_cursor	tools/logctl.c	/^struct db_cursor $/;"	s	file:
dbgCallStackDestruct	runtime/debug.c	/^static void dbgCallStackDestruct(void *arg)$/;"	f	file:
dbgCallStackListLast	runtime/debug.c	/^static dbgThrdInfo_t *dbgCallStackListLast = NULL;$/;"	v	file:
dbgCallStackListRoot	runtime/debug.c	/^static dbgThrdInfo_t *dbgCallStackListRoot = NULL;$/;"	v	file:
dbgCallStackPrint	runtime/debug.c	/^static void dbgCallStackPrint(dbgThrdInfo_t *pThrd)$/;"	f	file:
dbgCallStackPrintAll	runtime/debug.c	/^void dbgCallStackPrintAll(void)$/;"	f
dbgCallStack_s	runtime/debug.h	/^typedef struct dbgCallStack_s {$/;"	s
dbgClassExit	runtime/debug.c	/^rsRetVal dbgClassExit(void)$/;"	f
dbgClassInit	runtime/debug.c	/^rsRetVal dbgClassInit(void)$/;"	f
dbgCondTimedWait	runtime/debug.c	/^int dbgCondTimedWait(pthread_cond_t *cond, pthread_mutex_t *pmut, const struct timespec *abstime, dbgFuncDB_t *pFuncDB, int ln, int iStackPtr)$/;"	f
dbgCondWait	runtime/debug.c	/^int dbgCondWait(pthread_cond_t *cond, pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int ln, int iStackPtr)$/;"	f
dbgEntrFunc	runtime/debug.c	/^int dbgEntrFunc(dbgFuncDB_t **ppFuncDB, const char *file, const char *func, int line)$/;"	f
dbgExitFunc	runtime/debug.c	/^void dbgExitFunc(dbgFuncDB_t *pFuncDB, int iStackPtrRestore, int iRet)$/;"	f
dbgFUNCDB_MAGIC	runtime/debug.h	63;"	d
dbgFindThrd	runtime/debug.c	/^static inline dbgThrdInfo_t *dbgFindThrd(pthread_t thrd)$/;"	f	file:
dbgFree	runtime/debug.c	/^void dbgFree(void *pMem, dbgFuncDB_t *pFuncDB, int ln, int iStackPtr)$/;"	f
dbgFuncDBAddMutexLock	runtime/debug.c	/^static inline void dbgFuncDBAddMutexLock(dbgFuncDB_t *pFuncDB, pthread_mutex_t *pmut, int lockLn)$/;"	f	file:
dbgFuncDBFindFreeMutexInfo	runtime/debug.c	/^static inline dbgFuncDBmutInfoEntry_t *dbgFuncDBFindFreeMutexInfo(dbgFuncDB_t *pFuncDB)$/;"	f	file:
dbgFuncDBGetMutexInfo	runtime/debug.c	/^static inline dbgFuncDBmutInfoEntry_t *dbgFuncDBGetMutexInfo(dbgFuncDB_t *pFuncDB, pthread_mutex_t *pmut)$/;"	f	file:
dbgFuncDBListEntry_s	runtime/debug.c	/^typedef struct dbgFuncDBListEntry_s {$/;"	s	file:
dbgFuncDBListEntry_t	runtime/debug.c	/^} dbgFuncDBListEntry_t;$/;"	t	typeref:struct:dbgFuncDBListEntry_s	file:
dbgFuncDBPrint	runtime/debug.c	/^static void dbgFuncDBPrint(dbgFuncDB_t *pFuncDB)$/;"	f	file:
dbgFuncDBPrintActiveMutexes	runtime/debug.c	/^dbgFuncDBPrintActiveMutexes(dbgFuncDB_t *pFuncDB, char *pszHdrText, pthread_t thrd)$/;"	f	file:
dbgFuncDBPrintAll	runtime/debug.c	/^static void dbgFuncDBPrintAll(void)$/;"	f	file:
dbgFuncDBRemoveMutexLock	runtime/debug.c	/^static inline void dbgFuncDBRemoveMutexLock(dbgFuncDB_t *pFuncDB, pthread_mutex_t *pmut)$/;"	f	file:
dbgFuncDB_s	runtime/debug.h	/^typedef struct dbgFuncDB_s {$/;"	s
dbgFuncDB_t	runtime/debug.h	/^} dbgFuncDB_t;$/;"	t	typeref:struct:dbgFuncDB_s
dbgFuncDB_t_INITIALIZER	runtime/debug.h	64;"	d
dbgFuncDBmutInfoEntry_s	runtime/debug.h	/^typedef struct dbgFuncDBmutInfoEntry_s {$/;"	s
dbgFuncDBmutInfoEntry_t	runtime/debug.h	/^} dbgFuncDBmutInfoEntry_t;$/;"	t	typeref:struct:dbgFuncDBmutInfoEntry_s
dbgGetDbglogFd	runtime/debug.c	/^dbgGetDbglogFd(void)$/;"	f
dbgGetRTOptNamVal	runtime/debug.c	/^dbgGetRTOptNamVal(uchar **ppszOpt, uchar **ppOptName, uchar **ppOptVal)$/;"	f	file:
dbgGetRuntimeOptions	runtime/debug.c	/^dbgGetRuntimeOptions(void)$/;"	f	file:
dbgGetThrdInfo	runtime/debug.c	/^static dbgThrdInfo_t *dbgGetThrdInfo(void)$/;"	f	file:
dbgGetThrdName	runtime/debug.c	/^static void dbgGetThrdName(char *pszBuf, size_t lenBuf, pthread_t thrd, int bIncludeNumID)$/;"	f	file:
dbgMutLogAddEntry	runtime/debug.c	/^dbgMutLog_t *dbgMutLogAddEntry(pthread_mutex_t *pmut, short mutexOp, dbgFuncDB_t *pFuncDB, int lockLn)$/;"	f
dbgMutLogDelEntry	runtime/debug.c	/^void dbgMutLogDelEntry(dbgMutLog_t *pLog)$/;"	f
dbgMutLogFindFromBack	runtime/debug.c	/^dbgMutLog_t *dbgMutLogFindFromBack(pthread_mutex_t *pmut, dbgMutLog_t *pLast)$/;"	f
dbgMutLogFindHolder	runtime/debug.c	/^dbgMutLog_t *dbgMutLogFindHolder(pthread_mutex_t *pmut)$/;"	f
dbgMutLogFindSpecific	runtime/debug.c	/^dbgMutLog_t *dbgMutLogFindSpecific(pthread_mutex_t *pmut, short mutop, dbgFuncDB_t *pFuncDB)$/;"	f
dbgMutLogListLast	runtime/debug.c	/^static dbgMutLog_t *dbgMutLogListLast = NULL;$/;"	v	file:
dbgMutLogListRoot	runtime/debug.c	/^static dbgMutLog_t *dbgMutLogListRoot = NULL;$/;"	v	file:
dbgMutLogPrintAll	runtime/debug.c	/^static void dbgMutLogPrintAll(void)$/;"	f	file:
dbgMutLogPrintOne	runtime/debug.c	/^static void dbgMutLogPrintOne(dbgMutLog_t *pLog)$/;"	f	file:
dbgMutLog_s	runtime/debug.c	/^typedef struct dbgMutLog_s {$/;"	s	file:
dbgMutLog_t	runtime/debug.c	/^} dbgMutLog_t;$/;"	t	typeref:struct:dbgMutLog_s	file:
dbgMutexCancelCleanupHdlr	runtime/debug.c	/^static void dbgMutexCancelCleanupHdlr(void *pmut)$/;"	f	file:
dbgMutexLock	runtime/debug.c	/^int dbgMutexLock(pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int ln, int iStackPtr)$/;"	f
dbgMutexLockLog	runtime/debug.c	/^static inline void dbgMutexLockLog(pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int lockLn)$/;"	f	file:
dbgMutexPreLockLog	runtime/debug.c	/^static inline void dbgMutexPreLockLog(pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int ln)$/;"	f	file:
dbgMutexPreTryLockLog	runtime/debug.c	/^static inline void dbgMutexPreTryLockLog(pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int ln)$/;"	f	file:
dbgMutexTryLock	runtime/debug.c	/^int dbgMutexTryLock(pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int ln, int iStackPtr)$/;"	f
dbgMutexTryLockLog	runtime/debug.c	/^static inline void dbgMutexTryLockLog(pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int lockLn)$/;"	f	file:
dbgMutexUnlock	runtime/debug.c	/^int dbgMutexUnlock(pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int ln, int iStackPtr)$/;"	f
dbgMutexUnlockLog	runtime/debug.c	/^static inline void dbgMutexUnlockLog(pthread_mutex_t *pmut, dbgFuncDB_t *pFuncDB, int unlockLn)$/;"	f	file:
dbgOutputTID	runtime/debug.c	/^dbgOutputTID(char* name)$/;"	f
dbgPrintAllDebugInfo	runtime/debug.c	/^void dbgPrintAllDebugInfo(void)$/;"	f
dbgPrintCfSysLineHandlers	runtime/cfsysline.c	/^void dbgPrintCfSysLineHandlers(void)$/;"	f
dbgPrintInstInfo	runtime/modules.h	/^	rsRetVal (*dbgPrintInstInfo)(void*);\/* called before termination or module unload *\/$/;"	m	struct:modInfo_s
dbgPrintNameAdd	runtime/debug.c	/^dbgPrintNameAdd(uchar *pName, dbgPrintName_t **ppRoot)$/;"	f	file:
dbgPrintNameIsInList	runtime/debug.c	/^dbgPrintNameIsInList(const uchar *pName, dbgPrintName_t *pRoot)$/;"	f	file:
dbgPrintName_s	runtime/debug.c	/^typedef struct dbgPrintName_s {$/;"	s	file:
dbgPrintName_t	runtime/debug.c	/^} dbgPrintName_t;$/;"	t	typeref:struct:dbgPrintName_s	file:
dbgRecordExecLocation	runtime/debug.c	/^dbgRecordExecLocation(int iStackPtr, int line)$/;"	f	file:
dbgSetDebugFile	runtime/debug.c	/^dbgSetDebugFile(uchar *fn)$/;"	f
dbgSetDebugLevel	runtime/debug.c	/^dbgSetDebugLevel(int level)$/;"	f
dbgSetExecLocation	runtime/debug.c	/^dbgSetExecLocation(int iStackPtr, int line)$/;"	f
dbgSetThrdName	runtime/debug.c	/^void dbgSetThrdName(uchar *pszName)$/;"	f
dbgThrdInfo_t	runtime/debug.h	/^} dbgThrdInfo_t;$/;"	t	typeref:struct:dbgCallStack_s
dbgmalloc	runtime/debug.c	/^dbgmalloc(size_t size)$/;"	f
dbgoprint	runtime/debug.c	/^dbgoprint(obj_t *pObj, char *fmt, ...)$/;"	f
dbgprint	runtime/debug.c	/^dbgprint(obj_t *pObj, char *pszMsg, size_t lenMsg)$/;"	f	file:
dbgprintf	grammar/testdriver.c	/^dbgprintf(char *fmt, ...)$/;"	f
dbgprintf	runtime/debug.c	/^dbgprintf(char *fmt, ...)$/;"	f
dbiDrvrDir	plugins/omlibdbi/omlibdbi.c	/^	uchar *dbiDrvrDir;	\/* global: where do the dbi drivers reside? *\/$/;"	m	struct:configSettings_s	file:
dbiDrvrDir	plugins/omlibdbi/omlibdbi.c	/^	uchar *dbiDrvrDir;	\/* where do the dbi drivers reside? *\/$/;"	m	struct:_instanceData	file:
dbiDrvrDir	plugins/omlibdbi/omlibdbi.c	/^	uchar *dbiDrvrDir;	\/* where do the dbi drivers reside? *\/$/;"	m	struct:modConfData_s	file:
dbiInst	plugins/omlibdbi/omlibdbi.c	/^static dbi_inst dbiInst;$/;"	v	file:
dbname	plugins/ommysql/ommysql.c	/^	char	dbname[_DB_MAXDBLEN+1];	\/* DB name *\/$/;"	m	struct:_instanceData	file:
dbpwd	plugins/ommysql/ommysql.c	/^	char	dbpwd[_DB_MAXPWDLEN+1];	\/* DB user's password *\/$/;"	m	struct:_instanceData	file:
dbsrv	plugins/ommysql/ommysql.c	/^	char	dbsrv[MAXHOSTNAMELEN+1];	\/* IP or hostname of DB server*\/ $/;"	m	struct:_instanceData	file:
dbsrvPort	plugins/ommysql/ommysql.c	/^	unsigned int dbsrvPort;		\/* port of MySQL server *\/$/;"	m	struct:_instanceData	file:
dbuid	plugins/ommysql/ommysql.c	/^	char	dbuid[_DB_MAXUNAMELEN+1];	\/* DB user *\/$/;"	m	struct:_instanceData	file:
debug	tools/rsgtutil.c	/^static int debug = 0; $/;"	v	file:
debugListenInfo	runtime/net.c	/^void debugListenInfo(int fd, char *type)$/;"	f
debugListenInfo	runtime/net.h	/^	void (*debugListenInfo)(int fd, char *type);$/;"	v
debugPrintAll	runtime/ruleset.c	/^debugPrintAll(rsconf_t *conf)$/;"	f	file:
debugging_on	runtime/debug.c	/^int debugging_on = 0;	 \/* read-only, except on sig USR1 *\/$/;"	v
decodeSyslogName	runtime/srutils.c	/^int decodeSyslogName(uchar *name, syslogName_t *codetab)$/;"	f
decrypt	tools/rscryutil.c	/^decrypt(char *name)$/;"	f	file:
decryptBlock	tools/rscryutil.c	/^decryptBlock(FILE *fpin, FILE *fpout, off64_t blkEnd, off64_t *pCurrOffs)$/;"	f	file:
defaultDoSubmitMessage	runtime/tcps_sess.c	/^defaultDoSubmitMessage(tcps_sess_t *pThis, struct syslogTime *stTime, time_t ttGenTime, multi_submit_t *pMultiSub)$/;"	f	file:
default_sched_param	runtime/rsyslog.c	/^struct sched_param default_sched_param;$/;"	v	typeref:struct:sched_param
default_thr_sched_policy	runtime/rsyslog.c	/^int default_thr_sched_policy;$/;"	v
default_thread_attr	runtime/rsyslog.c	/^pthread_attr_t default_thread_attr;$/;"	v
defaults	runtime/rsconf.h	/^	defaults_t defaults;$/;"	m	struct:rsconf_s
defaults_s	runtime/rsconf.h	/^struct defaults_s {$/;"	s
defaults_t	runtime/typedefs.h	/^typedef struct defaults_s defaults_t;$/;"	t	typeref:struct:defaults_s
deinitAll	tools/rsyslogd.c	/^deinitAll(void)$/;"	f	file:
deinit_strm_listener	runtime/strmsrv.c	/^	deinit_strm_listener(pThis);$/;"	v
deinit_strm_listener	runtime/strmsrv.c	/^static void deinit_strm_listener(strmsrv_t *pThis)$/;"	f	file:
deinit_tcp_listener	runtime/tcpsrv.c	/^	deinit_tcp_listener(pThis);$/;"	v
deinit_tcp_listener	runtime/tcpsrv.c	/^static void deinit_tcp_listener(tcpsrv_t *pThis)$/;"	f	file:
del	plugins/imfile/imfile.c	/^	instanceConf_t *inst, *del;$/;"	v
del	plugins/imptcp/imptcp.c	/^	instanceConf_t *inst, *del;$/;"	v
del	plugins/imrelp/imrelp.c	/^	instanceConf_t *inst, *del;$/;"	v
del	plugins/imtcp/imtcp.c	/^	instanceConf_t *inst, *del;$/;"	v
del	plugins/imudp/imudp.c	/^	instanceConf_t *inst, *del;$/;"	v
del	plugins/imuxsock/imuxsock.c	/^	instanceConf_t *inst, *del;$/;"	v
delEvent	runtime/nsdpoll_ptcp.c	/^delEvent(nsdpoll_epollevt_lst_t **ppEvtLst) {$/;"	f	file:
deliveryCallback	plugins/omkafka/omkafka.c	/^deliveryCallback(rd_kafka_t __attribute__((unused)) *rk,$/;"	f	file:
delivery_mode	contrib/omrabbitmq/omrabbitmq.c	/^	int delivery_mode;$/;"	m	struct:_instanceData	file:
deqFileNumIn	runtime/queue.h	/^			int deqFileNumIn; \/* same for the circular file numbers, mainly for  *\/$/;"	m	struct:queue_s::__anon48::__anon51
deqFileNumOut	runtime/queue.h	/^			int deqFileNumOut;\/* deleting finished files *\/$/;"	m	struct:queue_s::__anon48::__anon51
deqID	runtime/batch.h	/^	qDeqID	deqID;		\/* ID of dequeue operation that generated this batch *\/$/;"	m	struct:batch_s
deqID	runtime/queue.h	/^	qDeqID	deqID;$/;"	m	struct:toDeleteLst_s
deqIDAdd	runtime/queue.h	/^	qDeqID deqIDAdd;	\/* next dequeue ID to use during add to queue store *\/$/;"	m	struct:queue_s
deqIDDel	runtime/queue.h	/^	qDeqID deqIDDel;	\/* queue store delete position *\/$/;"	m	struct:queue_s
deqOffs	runtime/queue.h	/^			int64 deqOffs; \/* offset after dequeue batch - used for file deleter *\/$/;"	m	struct:queue_s::__anon48::__anon51
deqhead	runtime/queue.h	/^			long deqhead, head, tail;$/;"	m	struct:queue_s::__anon48::__anon49
der	runtime/librsgt_common.h	/^		} der;$/;"	m	struct:block_sig_s::__anon26	typeref:struct:block_sig_s::__anon26::__anon27
descr	grammar/rainerscript.h	/^	struct cnfparamdescr *descr;$/;"	m	struct:cnfparamblk	typeref:struct:cnfparamblk::cnfparamdescr
description	contrib/imzmq3/imzmq3.c	/^    char*                  description;$/;"	m	struct:instanceConf_s	file:
description	contrib/omzmq3/omzmq3.c	/^	uchar*  description;$/;"	m	struct:_instanceData	file:
dest	runtime/hashtable_private.h	/^    void (*dest) (void *v); \/* destructor for values, if NULL use free() *\/$/;"	m	struct:hashtable
destroyMasterParserList	runtime/parser.c	/^destroyMasterParserList(void)$/;"	f	file:
destroyMasterStrgenList	runtime/strgen.c	/^destroyMasterStrgenList(void)$/;"	f	file:
destructAllActions	runtime/ruleset.c	/^destructAllActions(rsconf_t *conf)$/;"	f	file:
destructSess	plugins/imptcp/imptcp.c	/^destructSess(ptcpsess_t *pSess)$/;"	f	file:
destructSrv	plugins/imptcp/imptcp.c	/^destructSrv(ptcpsrv_t *pSrv)$/;"	f	file:
detectFileType	tools/rsgtutil.c	/^detectFileType(char *name)$/;"	f	file:
detectFileTypeKSI	tools/rsgtutil.c	/^detectFileTypeKSI(char *name)$/;"	f	file:
dfltErrLogger	runtime/rsyslog.c	/^dfltErrLogger(const int severity, const int iErr, const uchar *errMsg)$/;"	f	file:
dfltTZ	plugins/imptcp/imptcp.c	/^	uchar *dfltTZ;$/;"	m	struct:instanceConf_s	file:
dfltTZ	plugins/imptcp/imptcp.c	/^	uchar *dfltTZ;$/;"	m	struct:ptcpsrv_s	file:
dfltTZ	plugins/imtcp/imtcp.c	/^	uchar *dfltTZ;$/;"	m	struct:instanceConf_s	file:
dfltTZ	plugins/imudp/imudp.c	/^	uchar *dfltTZ;$/;"	m	struct:instanceConf_s	file:
dfltTZ	plugins/imudp/imudp.c	/^	uchar *dfltTZ;$/;"	m	struct:lstn_s	file:
dfltTZ	runtime/msg.h	/^	char dfltTZ[8];	    \/* 7 chars max, less overhead than ptr! *\/$/;"	m	struct:msg
dfltTZ	runtime/tcpsrv.h	/^	uchar dfltTZ[8];		\/**< default TZ if none in timestamp; '\\0' =No Default *\/$/;"	m	struct:tcpLstnPortList_s
dfltTZ	runtime/tcpsrv.h	/^	uchar dfltTZ[8];	\/**< default TZ if none in timestamp; '\\0' =No Default *\/$/;"	m	struct:tcpsrv_s
dfltTplName	plugins/omhdfs/omhdfs.c	/^	uchar *dfltTplName;	\/* default template name to use *\/$/;"	m	struct:configSettings_s	file:
dflt_ratelimiter	plugins/imuxsock/imuxsock.c	/^	ratelimit_t *dflt_ratelimiter;\/*ratelimiter to apply if none else is to be used *\/$/;"	m	struct:lstn_s	file:
dflt_ratelimiter	tools/rsyslogd.c	/^ratelimit_t *dflt_ratelimiter = NULL; \/* ratelimiter for submits without explicit one *\/$/;"	v
dhBits	plugins/imrelp/imrelp.c	/^	int dhBits;$/;"	m	struct:instanceConf_s	file:
die_on_amqp_error	contrib/omrabbitmq/omrabbitmq.c	/^die_on_amqp_error(amqp_rpc_reply_t x, char const *context)$/;"	f	file:
die_on_error	contrib/omrabbitmq/omrabbitmq.c	/^die_on_error(int x, char const *context)$/;"	f	file:
dirGID	tools/omfile.c	/^	gid_t	dirGID;$/;"	m	struct:_instanceData	file:
dirGID	tools/omfile.c	/^	gid_t dirGID;$/;"	m	struct:modConfData_s	file:
dirGID	tools/omfile.c	/^	uid_t	dirGID;		\/* GID to be used for newly created directories *\/$/;"	m	struct:configSettings_s	file:
dirIdx	plugins/imfile/imfile.c	/^	int dirIdx;	\/* index into dirs table, undefined if pLstn == NULL *\/$/;"	m	struct:wd_map_s	file:
dirInfoFiles_s	plugins/imfile/imfile.c	/^struct dirInfoFiles_s { \/* associated files *\/$/;"	s	file:
dirInfoFiles_t	plugins/imfile/imfile.c	/^typedef struct dirInfoFiles_s dirInfoFiles_t;$/;"	t	typeref:struct:dirInfoFiles_s	file:
dirInfo_s	plugins/imfile/imfile.c	/^struct dirInfo_s {$/;"	s	file:
dirInfo_t	plugins/imfile/imfile.c	/^typedef struct dirInfo_s dirInfo_t;$/;"	t	typeref:struct:dirInfo_s	file:
dirName	plugins/imfile/imfile.c	/^	uchar *dirName;$/;"	m	struct:dirInfo_s	file:
dirUID	tools/omfile.c	/^	uid_t	dirUID;		\/* UID to be used for newly created directories *\/$/;"	m	struct:configSettings_s	file:
dirUID	tools/omfile.c	/^	uid_t	dirUID;$/;"	m	struct:_instanceData	file:
dirUID	tools/omfile.c	/^	uid_t dirUID;$/;"	m	struct:modConfData_s	file:
dirs	plugins/imfile/imfile.c	/^static dirInfo_t *dirs = NULL;$/;"	v	file:
dirsAdd	plugins/imfile/imfile.c	/^dirsAdd(uchar *dirName)$/;"	f	file:
dirsAddFile	plugins/imfile/imfile.c	/^dirsAddFile(lstn_t *__restrict__ pLstn, const int bActive)$/;"	f	file:
dirsFindDir	plugins/imfile/imfile.c	/^dirsFindDir(uchar *dir)$/;"	f	file:
dirsInit	plugins/imfile/imfile.c	/^dirsInit(void)$/;"	f	file:
disabled	runtime/librsgt.h	/^	uint8_t disabled; \/* permits to disable this file --> set to 1 *\/$/;"	m	struct:gtfile_s
disabled	runtime/librsksi.h	/^	uint8_t disabled; \/* permits to disable this file --> set to 1 *\/$/;"	m	struct:ksifile_s
discardLogSockets	plugins/imuxsock/imuxsock.c	/^static rsRetVal discardLogSockets(void)$/;"	f	file:
disk	runtime/queue.h	/^		} disk;$/;"	m	struct:queue_s::__anon48	typeref:struct:queue_s::__anon48::__anon51
dispRuntime	tools/syncdemo.c	/^dispRuntime(unsigned rt)$/;"	f
displayBatchState	runtime/queue.c	/^static inline void displayBatchState(batch_t *pBatch)$/;"	f	file:
displayTzinfos	runtime/glbl.c	/^displayTzinfos(void)$/;"	f	file:
display_ctx_flags	runtime/gss-misc.c	/^static void display_ctx_flags(OM_uint32 flags)$/;"	f	file:
display_ctx_flags	runtime/gss-misc.h	/^	void (*display_ctx_flags)(OM_uint32 flags);$/;"	v
display_status	runtime/gss-misc.c	/^static void display_status(char *m, OM_uint32 maj_stat, OM_uint32 min_stat)$/;"	f	file:
display_status	runtime/gss-misc.h	/^	void (*display_status)(char *m, OM_uint32 maj_stat, OM_uint32 min_stat);$/;"	v
display_status_	runtime/gss-misc.c	/^static void display_status_(char *m, OM_uint32 code, int type)$/;"	f	file:
dlhandle_s	runtime/modules.h	/^struct dlhandle_s {$/;"	s
dnsCache	runtime/dnscache.c	/^static dnscache_t dnsCache;$/;"	v	file:
dnscacheDeinit	runtime/dnscache.c	/^dnscacheDeinit(void)$/;"	f
dnscacheInit	runtime/dnscache.c	/^dnscacheInit(void)$/;"	f
dnscacheLookup	runtime/dnscache.c	/^dnscacheLookup(struct sockaddr_storage *addr, prop_t **fqdn, prop_t **fqdnLowerCase,$/;"	f
dnscache_entry_s	runtime/dnscache.c	/^struct dnscache_entry_s {$/;"	s	file:
dnscache_entry_t	runtime/dnscache.c	/^typedef struct dnscache_entry_s dnscache_entry_t;$/;"	t	typeref:struct:dnscache_entry_s	file:
dnscache_s	runtime/dnscache.c	/^struct dnscache_s {$/;"	s	file:
dnscache_t	runtime/dnscache.c	/^typedef struct dnscache_s dnscache_t;$/;"	t	typeref:struct:dnscache_s	file:
doAction	runtime/modules.h	/^			rsRetVal (*doAction)(uchar**, void*);$/;"	m	struct:modInfo_s::__anon29::__anon31
doAsyncWriteInternal	runtime/stream.c	/^doAsyncWriteInternal(strm_t *pThis, size_t lenBuf)$/;"	f	file:
doAtExit	tests/nettester.c	/^void doAtExit(void)$/;"	f
doBinaryOptionLine	runtime/cfsysline.c	/^static rsRetVal doBinaryOptionLine(uchar **pp, rsRetVal (*pSetHdlr)(void*, int), void *pVal)$/;"	f	file:
doCC	plugins/mmutf8fix/mmutf8fix.c	/^doCC(instanceData *pData, uchar *msg, int lenMsg)$/;"	f	file:
doConnect	plugins/omrelp/omrelp.c	/^static rsRetVal doConnect(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
doCreateRelpClient	plugins/omrelp/omrelp.c	/^doCreateRelpClient(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
doCustomHdlr	runtime/cfsysline.c	/^static rsRetVal doCustomHdlr(uchar **pp, rsRetVal (*pSetHdlr)(uchar**, void*), void *pVal)$/;"	f	file:
doDecrypt	tools/rscryutil.c	/^doDecrypt(FILE *logfp, FILE *eifp, FILE *outfp)$/;"	f	file:
doDropPrivGid	runtime/rsconf.c	/^static void doDropPrivGid(int iGid)$/;"	f	file:
doDropPrivUid	runtime/rsconf.c	/^static void doDropPrivUid(int iUid)$/;"	f	file:
doEmergencyEscape	template.c	/^static void doEmergencyEscape(register uchar *p, int mode)$/;"	f	file:
doEnqSingleObj	runtime/queue.c	/^doEnqSingleObj(qqueue_t *pThis, flowControl_t flowCtlType, msg_t *pMsg)$/;"	f	file:
doEscape	template.c	/^doEscape(uchar **pp, rs_size_t *pLen, unsigned short *pbMustBeFreed, int mode)$/;"	f
doExtractFieldByChar	grammar/rainerscript.c	/^doExtractFieldByChar(uchar *str, uchar delim, const int matchnbr, uchar **resstr)$/;"	f	file:
doExtractFieldByStr	grammar/rainerscript.c	/^doExtractFieldByStr(uchar *str, char *delim, const rs_size_t lenDelim, const int matchnbr, uchar **resstr)$/;"	f	file:
doFacility	runtime/cfsysline.c	/^doFacility(uchar **pp, rsRetVal (*pSetHdlr)(void*, int), void *pVal)$/;"	f	file:
doFail	plugins/omtesting/omtesting.c	/^static rsRetVal doFail(instanceData *pData)$/;"	f	file:
doFailOnResume	plugins/omtesting/omtesting.c	/^static rsRetVal doFailOnResume(instanceData *pData)$/;"	f	file:
doFileCreateMode	runtime/cfsysline.c	/^static rsRetVal doFileCreateMode(uchar **pp, rsRetVal (*pSetHdlr)(void*, uid_t), void *pVal)$/;"	f	file:
doFork	tools/rsyslogd.c	/^static int doFork = 1; 	\/* fork - run in daemon mode - read-only after startup *\/$/;"	v	file:
doFuncCall	grammar/rainerscript.c	/^doFuncCall(struct cnffunc *__restrict__ const func, struct var *__restrict__ const ret,$/;"	f	file:
doFuncReplace	grammar/rainerscript.c	/^doFuncReplace(struct var *__restrict__ const operandVal, struct var *__restrict__ const findVal, struct var *__restrict__ const replaceWithVal) {$/;"	f	file:
doFuncWrap	grammar/rainerscript.c	/^doFuncWrap(struct var *__restrict__ const sourceVal, struct var *__restrict__ const wrapperVal, struct var *__restrict__ const escaperVal) {$/;"	f	file:
doFunc_exec_template	grammar/rainerscript.c	/^doFunc_exec_template(struct cnffunc *__restrict__ const func,$/;"	f	file:
doFunc_re_extract	grammar/rainerscript.c	/^doFunc_re_extract(struct cnffunc *func, struct var *ret, void* usrptr)$/;"	f	file:
doGetArray	grammar/rainerscript.c	/^doGetArray(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetBinary	grammar/rainerscript.c	/^doGetBinary(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetChar	grammar/rainerscript.c	/^doGetChar(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetChar	runtime/cfsysline.c	/^static rsRetVal doGetChar(uchar **pp, rsRetVal (*pSetHdlr)(void*, uid_t), void *pVal)$/;"	f	file:
doGetFileCreateMode	grammar/rainerscript.c	/^doGetFileCreateMode(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetGID	grammar/rainerscript.c	/^doGetGID(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetGID	runtime/cfsysline.c	/^static rsRetVal doGetGID(uchar **pp, rsRetVal (*pSetHdlr)(void*, uid_t), void *pVal)$/;"	f	file:
doGetInt	grammar/rainerscript.c	/^doGetInt(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetInt	runtime/cfsysline.c	/^static rsRetVal doGetInt(uchar **pp, rsRetVal (*pSetHdlr)(void*, uid_t), void *pVal)$/;"	f	file:
doGetNonNegInt	grammar/rainerscript.c	/^doGetNonNegInt(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetPositiveInt	grammar/rainerscript.c	/^doGetPositiveInt(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetQueueType	grammar/rainerscript.c	/^doGetQueueType(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetSize	grammar/rainerscript.c	/^doGetSize(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetSize	runtime/cfsysline.c	/^static rsRetVal doGetSize(uchar **pp, rsRetVal (*pSetHdlr)(void*, int64), void *pVal)$/;"	f	file:
doGetUID	grammar/rainerscript.c	/^doGetUID(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetUID	runtime/cfsysline.c	/^static rsRetVal doGetUID(uchar **pp, rsRetVal (*pSetHdlr)(void*, uid_t), void *pVal)$/;"	f	file:
doGetWord	grammar/rainerscript.c	/^doGetWord(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
doGetWord	runtime/cfsysline.c	/^static rsRetVal doGetWord(uchar **pp, rsRetVal (*pSetHdlr)(void*, uchar*), void *pVal)$/;"	f	file:
doGoneAway	runtime/cfsysline.c	/^doGoneAway(__attribute__((unused)) uchar **pp,$/;"	f	file:
doHUP	runtime/modules.h	/^	rsRetVal (*doHUP)(void *);		\/* HUP handler, action level *\/$/;"	m	struct:modInfo_s
doHUP	tools/rsyslogd.c	/^doHUP(void)$/;"	f	file:
doHUPWrkr	runtime/modules.h	/^	rsRetVal (*doHUPWrkr)(void *);		\/* HUP handler, wrkr instance level *\/$/;"	m	struct:modInfo_s
doIdleProcessing	runtime/wti.c	/^doIdleProcessing(wti_t *pThis, wtp_t *pWtp, int *pbInactivityTOOccured)$/;"	f	file:
doIndent	grammar/rainerscript.c	/^doIndent(int indent)$/;"	f	file:
doInjectMsg	plugins/imdiag/imdiag.c	/^doInjectMsg(int iNum, ratelimit_t *ratelimiter)$/;"	f	file:
doLastMessageRepeatedNTimes	runtime/ratelimit.c	/^doLastMessageRepeatedNTimes(ratelimit_t *ratelimit, msg_t *pMsg, msg_t **ppRepMsg)$/;"	f	file:
doLogMsg	runtime/errmsg.c	/^doLogMsg(const int iErrno, const int iErrCode,  const int severity, const char *msg)$/;"	f	file:
doLogToFile	plugins/impstats/impstats.c	/^doLogToFile(uchar *ln, size_t lenLn)$/;"	f	file:
doModInit	runtime/modules.c	/^doModInit(rsRetVal (*modInit)(int, int*, rsRetVal(**)(), rsRetVal(*)(), modInfo_t*),$/;"	f	file:
doModInit	runtime/modules.h	/^	rsRetVal (*doModInit)(rsRetVal (*modInit)(), uchar *name, void *pModHdlr, modInfo_t **pNew);$/;"	v
doModLoad	runtime/conf.c	/^doModLoad(uchar **pp, __attribute__((unused)) void* pVal)$/;"	f
doModLoad	runtime/conf.h	/^	rsRetVal (*doModLoad)(uchar **pp, __attribute__((unused)) void* pVal);$/;"	v
doNameLine	runtime/conf.c	/^doNameLine(uchar **pp, void* pVal)$/;"	f
doNameLine	runtime/conf.h	/^	rsRetVal (*doNameLine)(uchar **pp, void* pVal);$/;"	v
doOpenLstnSocks	plugins/imdiag/imdiag.c	/^doOpenLstnSocks(tcpsrv_t *pSrv)$/;"	f	file:
doOpenLstnSocks	plugins/imgssapi/imgssapi.c	/^doOpenLstnSocks(tcpsrv_t *pSrv)$/;"	f	file:
doOpenLstnSocks	plugins/imtcp/imtcp.c	/^doOpenLstnSocks(tcpsrv_t *pSrv)$/;"	f	file:
doOpenLstnSocks	runtime/strmsrv.c	/^doOpenLstnSocks(strmsrv_t *pSrv)$/;"	f	file:
doOptions	template.c	/^static void doOptions(unsigned char **pp, struct templateEntry *pTpe)$/;"	f	file:
doParseOnOffOption	runtime/cfsysline.c	/^static int doParseOnOffOption(uchar **pp)$/;"	f	file:
doPhysOpen	runtime/stream.c	/^doPhysOpen(strm_t *pThis)$/;"	f	file:
doPolling	plugins/imfile/imfile.c	/^doPolling(void)$/;"	f	file:
doProcessing	tests/diagtalker.c	/^doProcessing()$/;"	f	file:
doRandFail	plugins/omtesting/omtesting.c	/^static rsRetVal doRandFail(void)$/;"	f	file:
doRandomGen	grammar/rainerscript.c	/^doRandomGen(struct var *__restrict__ const sourceVal) {$/;"	f	file:
doRcvData	plugins/imdiag/imdiag.c	/^doRcvData(tcps_sess_t *pSess, char *buf, size_t lenBuf, ssize_t *piLenRcvd)$/;"	f	file:
doRcvData	plugins/imgssapi/imgssapi.c	/^doRcvData(tcps_sess_t *pSess, char *buf, size_t lenBuf, ssize_t *piLenRcvd)$/;"	f	file:
doRcvData	plugins/imtcp/imtcp.c	/^doRcvData(tcps_sess_t *pSess, char *buf, size_t lenBuf, ssize_t *piLenRcvd)$/;"	f	file:
doRcvData	runtime/strmsrv.c	/^doRcvData(strms_sess_t *pSess, char *buf, size_t lenBuf, ssize_t *piLenRcvd)$/;"	f	file:
doRebind	plugins/omrelp/omrelp.c	/^doRebind(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
doReceive	runtime/tcpsrv.c	/^doReceive(tcpsrv_t *pThis, tcps_sess_t **ppSess, nspoll_t *pPoll)$/;"	f	file:
doRetry	runtime/nsdsel_gtls.c	/^doRetry(nsd_gtls_t *pNsd)$/;"	f	file:
doRulesetAddParser	runtime/ruleset.c	/^doRulesetAddParser(ruleset_t *pRuleset, uchar *pName)$/;"	f	file:
doRulesetCreateQueue	runtime/ruleset.c	/^doRulesetCreateQueue(rsconf_t *conf, int *pNewVal)$/;"	f	file:
doRun	tests/tcpflood.c	/^int doRun;			\/* shall sender thread begin to run? *\/$/;"	v
doSIGTTIN	plugins/imrelp/imrelp.c	/^doSIGTTIN(int __attribute__((unused)) sig)$/;"	f	file:
doSeverity	runtime/cfsysline.c	/^doSeverity(uchar **pp, rsRetVal (*pSetHdlr)(void*, int), void *pVal)$/;"	f	file:
doSizeLimitProcessing	runtime/stream.c	/^doSizeLimitProcessing(strm_t *pThis)$/;"	f	file:
doSleep	plugins/omtesting/omtesting.c	/^static rsRetVal doSleep(instanceData *pData)$/;"	f	file:
doStatsLine	plugins/impstats/impstats.c	/^doStatsLine(void __attribute__((unused)) *usrptr, cstr_t *cstr)$/;"	f	file:
doSubmitMsg	plugins/impstats/impstats.c	/^doSubmitMsg(uchar *line)$/;"	f	file:
doSubmitMsg	plugins/imptcp/imptcp.c	/^doSubmitMsg(ptcpsess_t *pThis, struct syslogTime *stTime, time_t ttGenTime, multi_submit_t *pMultiSub)$/;"	f	file:
doSubmitToActionQ	action.c	/^doSubmitToActionQ(action_t * const pAction, wti_t * const pWti, msg_t *pMsg)$/;"	f	file:
doSubmitToActionQComplex	action.c	/^doSubmitToActionQComplex(action_t * const pAction, wti_t * const pWti, msg_t *pMsg)$/;"	f	file:
doSubmitToActionQNotAllMark	action.c	/^doSubmitToActionQNotAllMark(action_t * const pAction, wti_t * const pWti, msg_t * const pMsg)$/;"	f	file:
doSyslogName	runtime/cfsysline.c	/^doSyslogName(uchar **pp, rsRetVal (*pSetHdlr)(void*, int),$/;"	f	file:
doTerm	tests/uxsockrcvr.c	/^doTerm(int __attribute__((unused)) signum)$/;"	f
doTest	tools/syncdemo.c	/^doTest(syncType_t st)$/;"	f
doTests	tests/nettester.c	/^doTests(int fd, char *files)$/;"	f
doTransaction	action.c	/^doTransaction(action_t *__restrict__ const pThis, wti_t *__restrict__ const pWti)$/;"	f	file:
doTryResume	plugins/omgssapi/omgssapi.c	/^static rsRetVal doTryResume(instanceData *pData)$/;"	f	file:
doTryResume	plugins/omudpspoof/omudpspoof.c	/^static rsRetVal doTryResume(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
doTryResume	plugins/omuxsock/omuxsock.c	/^static rsRetVal doTryResume(instanceData *pData)$/;"	f	file:
doTryResume	tools/omfwd.c	/^static rsRetVal doTryResume(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
doUTF8	plugins/mmutf8fix/mmutf8fix.c	/^doUTF8(instanceData *pData, uchar *msg, int lenMsg)$/;"	f	file:
doUnescape	grammar/rainerscript.c	/^doUnescape(unsigned char *c, int len, int *iSrc, int iDst)$/;"	f	file:
doVarsInExpected	tests/nettester.c	/^doVarsInExpected(char **pe)$/;"	f	file:
doVerifyRec	tools/rsgtutil.c	/^doVerifyRec(FILE *logfp, FILE *sigfp, FILE *nsigfp,$/;"	f	file:
doVerifyRecKSI	tools/rsgtutil.c	/^doVerifyRecKSI(FILE *logfp, FILE *sigfp, FILE *nsigfp,$/;"	f	file:
doWrite	tools/omfile.c	/^doWrite(instanceData *__restrict__ const pData, uchar *__restrict__ const pszBuf, const int lenBuf)$/;"	f	file:
doWriteCall	runtime/stream.c	/^doWriteCall(strm_t *pThis, uchar *pBuf, size_t *pLenBuf)$/;"	f	file:
doWriteInternal	runtime/stream.c	/^doWriteInternal(strm_t *pThis, uchar *pBuf, size_t lenBuf, int bFlush)$/;"	f	file:
doZipFinish	plugins/imptcp/imptcp.c	/^doZipFinish(ptcpsess_t *pSess)$/;"	f	file:
doZipFinish	runtime/stream.c	/^doZipFinish(strm_t *pThis)$/;"	f	file:
doZipFinish	tools/omfwd.c	/^doZipFinish(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
doZipWrite	runtime/stream.c	/^doZipWrite(strm_t *pThis, uchar *pBuf, size_t lenBuf, int bFlush)$/;"	f	file:
do_Constant	template.c	/^do_Constant(unsigned char **pp, struct template *pTpl, int bDoEscapes)$/;"	f	file:
do_Parameter	template.c	/^do_Parameter(uchar **pp, struct template *pTpl)$/;"	f	file:
do_dbgprint	runtime/debug.c	/^do_dbgprint(uchar *pszObjName, char *pszMsg, size_t lenMsg)$/;"	f	file:
do_inotify	plugins/imfile/imfile.c	/^do_inotify()$/;"	f	file:
do_rd_kafka_destroy	plugins/omkafka/omkafka.c	/^do_rd_kafka_destroy(instanceData *const __restrict pData)$/;"	f	file:
doc	plugins/ommongodb/ommongodb.c	/^		bson_free(doc);$/;"	v
doc	plugins/ommongodb/ommongodb.c	/^	bson *doc = NULL;$/;"	v
dofile	plugins/omelasticsearch/cJSON/test.c	/^void dofile(char *filename)$/;"	f
doit	plugins/omelasticsearch/cJSON/test.c	/^void doit(char *text)$/;"	f
done	runtime/ratelimit.h	/^	unsigned done;$/;"	m	struct:ratelimit_s
door_server_cnt	plugins/imsolaris/sun_cddl.c	/^static uint_t door_server_cnt = 0;$/;"	v	file:
door_server_cnt_lock	plugins/imsolaris/sun_cddl.c	/^static pthread_mutex_t door_server_cnt_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
door_server_pool	plugins/imsolaris/sun_cddl.c	/^door_server_pool(door_info_t __attribute__((unused)) *dip)$/;"	f	file:
door_thr_attr	plugins/imsolaris/sun_cddl.c	/^static pthread_attr_t door_thr_attr;$/;"	v	file:
dropPrivileges	runtime/rsconf.c	/^dropPrivileges(rsconf_t *cnf)$/;"	f	file:
drvrName	plugins/omlibdbi/omlibdbi.c	/^	uchar *drvrName;	\/* driver to use *\/$/;"	m	struct:_instanceData	file:
drvrName	plugins/omlibdbi/omlibdbi.c	/^	uchar *drvrName;	\/* driver to use *\/$/;"	m	struct:configSettings_s	file:
dummy	plugins/mmaudit/mmaudit.c	/^	int dummy; \/* remove when the first real parameter is needed *\/$/;"	m	struct:_instanceData	file:
dummy	runtime/datetime.h	/^    	char dummy;$/;"	m	struct:datetime_s
dummy	runtime/errmsg.h	/^    	char dummy;$/;"	m	struct:errmsg_s
dummy	runtime/modules.h	/^		    	char dummy;$/;"	m	struct:modInfo_s::__anon29::__anon32
dummyBeginTransaction	runtime/modules.c	/^dummyBeginTransaction() $/;"	f	file:
dummyEndTransaction	runtime/modules.c	/^dummyEndTransaction() $/;"	f	file:
dummyIsCompatibleWithFeature	runtime/modules.c	/^dummyIsCompatibleWithFeature() $/;"	f	file:
dummyLoad	tools/syncdemo.c	/^static int dummyLoad = 0;     \/* number of dummy load iterations to generate *\/$/;"	v	file:
dummynewActInst	runtime/modules.c	/^dummynewActInst(uchar *modName, struct nvlst __attribute__((unused)) *dummy1,$/;"	f	file:
dumpFile	tools/rsgtutil.c	/^dumpFile(char *name)$/;"	f	file:
dumpFileKSI	tools/rsgtutil.c	/^dumpFileKSI(char *name)$/;"	f	file:
durable	contrib/omrabbitmq/omrabbitmq.c	/^	int durable;$/;"	m	struct:_instanceData	file:
dynBulkId	plugins/omelasticsearch/omelasticsearch.c	/^	sbool dynBulkId;$/;"	m	struct:_instanceData	file:
dynCache	plugins/omkafka/omkafka.c	/^	dynaTopicCacheEntry **dynCache;$/;"	m	struct:_instanceData	file:
dynCache	tools/omfile.c	/^	dynaFileCacheEntry **dynCache;$/;"	m	struct:_instanceData	file:
dynFileIDs	tests/tcpflood.c	/^static int dynFileIDs = 0;$/;"	v	file:
dynParent	plugins/omelasticsearch/omelasticsearch.c	/^	sbool dynParent;$/;"	m	struct:_instanceData	file:
dynSrchIdx	plugins/omelasticsearch/omelasticsearch.c	/^	sbool dynSrchIdx;$/;"	m	struct:_instanceData	file:
dynSrchType	plugins/omelasticsearch/omelasticsearch.c	/^	sbool dynSrchType;$/;"	m	struct:_instanceData	file:
dynaFileCacheEntry	tools/omfile.c	/^typedef struct s_dynaFileCacheEntry dynaFileCacheEntry;$/;"	t	typeref:struct:s_dynaFileCacheEntry	file:
dynaFileDelCacheEntry	tools/omfile.c	/^dynaFileDelCacheEntry(instanceData *__restrict__ const pData, const int iEntry, const int bFreeEntry)$/;"	f	file:
dynaFileFreeCache	tools/omfile.c	/^static void dynaFileFreeCache(instanceData *__restrict__ const pData)$/;"	f	file:
dynaFileFreeCacheEntries	tools/omfile.c	/^dynaFileFreeCacheEntries(instanceData *__restrict__ const pData)$/;"	f	file:
dynaTopic	plugins/omkafka/omkafka.c	/^	sbool dynaTopic;$/;"	m	struct:_instanceData	file:
dynaTopicCacheEntry	plugins/omkafka/omkafka.c	/^typedef struct s_dynaTopicCacheEntry dynaTopicCacheEntry;$/;"	t	typeref:struct:s_dynaTopicCacheEntry	file:
dynaTopicDelCacheEntry	plugins/omkafka/omkafka.c	/^dynaTopicDelCacheEntry(instanceData *__restrict__ const pData, const int iEntry, const int bFreeEntry)$/;"	f	file:
dynaTopicFreeCacheEntries	plugins/omkafka/omkafka.c	/^dynaTopicFreeCacheEntries(instanceData *__restrict__ const pData)$/;"	f	file:
e	runtime/hashtable_itr.h	/^    struct entry *e;$/;"	m	struct:hashtable_itr	typeref:struct:hashtable_itr::entry
eAtStrtFram	plugins/imptcp/imptcp.c	/^		eAtStrtFram,$/;"	e	enum:ptcpsess_s::__anon12	file:
eAtStrtFram	runtime/tcps_sess.h	/^		eAtStrtFram,$/;"	e	enum:tcps_sess_s::__anon54
eCaseConv	template.h	/^			enum tplFormatCaseConvTypes eCaseConv;$/;"	m	struct:templateEntry::__anon69::__anon71	typeref:enum:templateEntry::__anon69::__anon71::tplFormatCaseConvTypes
eCmdHdlrArray	runtime/typedefs.h	/^	eCmdHdlrArray,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrBinary	runtime/typedefs.h	/^	eCmdHdlrBinary,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrCustomHandler	runtime/typedefs.h	/^	eCmdHdlrCustomHandler,		\/* custom handler, just call handler function *\/$/;"	e	enum:cslCmdHdlrType
eCmdHdlrFacility	runtime/typedefs.h	/^	eCmdHdlrFacility,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrFileCreateMode	runtime/typedefs.h	/^	eCmdHdlrFileCreateMode,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrGID	runtime/typedefs.h	/^	eCmdHdlrGID,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrGetChar	runtime/typedefs.h	/^	eCmdHdlrGetChar,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrGetWord	runtime/typedefs.h	/^	eCmdHdlrGetWord,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrGoneAway	runtime/typedefs.h	/^	eCmdHdlrGoneAway		\/* statment existed, but is no longer supported *\/$/;"	e	enum:cslCmdHdlrType
eCmdHdlrInt	runtime/typedefs.h	/^	eCmdHdlrInt,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrInvalid	runtime/typedefs.h	/^	eCmdHdlrInvalid = 0,		\/* invalid handler type - indicates a coding error *\/$/;"	e	enum:cslCmdHdlrType
eCmdHdlrNonNegInt	runtime/typedefs.h	/^	eCmdHdlrNonNegInt,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrPositiveInt	runtime/typedefs.h	/^	eCmdHdlrPositiveInt,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrQueueType	runtime/typedefs.h	/^	eCmdHdlrQueueType,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrSeverity	runtime/typedefs.h	/^	eCmdHdlrSeverity,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrSize	runtime/typedefs.h	/^	eCmdHdlrSize,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrString	runtime/typedefs.h	/^	eCmdHdlrString,$/;"	e	enum:cslCmdHdlrType
eCmdHdlrUID	runtime/typedefs.h	/^	eCmdHdlrUID,$/;"	e	enum:cslCmdHdlrType
eConfObjAction	runtime/typedefs.h	/^	eConfObjAction,		\/* action-specific directives *\/$/;"	e	enum:cslConfObjType
eConfObjActionWaitEnd	runtime/typedefs.h	/^	eConfObjActionWaitEnd,$/;"	e	enum:cslConfObjType
eConfObjAlways	runtime/typedefs.h	/^	eConfObjAlways		\/* always valid, very special case (guess $End only!) *\/$/;"	e	enum:cslConfObjType
eConfObjGlobal	runtime/typedefs.h	/^	eConfObjGlobal = 0,	\/* global directives *\/$/;"	e	enum:cslConfObjType
eConfObjType	runtime/cfsysline.h	/^	ecslConfObjType __attribute__((deprecated)) eConfObjType;		\/* which config object is this for? *\/$/;"	m	struct:cslCmdHdlr_s
eDateFormat	template.h	/^			enum tplFormatTypes eDateFormat;$/;"	m	struct:templateEntry::__anon69::__anon71	typeref:enum:templateEntry::__anon69::__anon71::tplFormatTypes
eDestFORW	plugins/omgssapi/omgssapi.c	/^		eDestFORW,$/;"	e	enum:_instanceData::__anon18	file:
eDestFORW_SUSP	plugins/omgssapi/omgssapi.c	/^		eDestFORW_SUSP,$/;"	e	enum:_instanceData::__anon18	file:
eDestFORW_UNKN	plugins/omgssapi/omgssapi.c	/^		eDestFORW_UNKN$/;"	e	enum:_instanceData::__anon18	file:
eDestState	plugins/omgssapi/omgssapi.c	/^	} eDestState;$/;"	m	struct:_instanceData	typeref:enum:_instanceData::__anon18	file:
eDfltHostnameCmpMode	runtime/conf.c	/^EHostnameCmpMode eDfltHostnameCmpMode = HN_NO_COMP;$/;"	v
eDirective	runtime/conf.h	/^enum eDirective { DIR_TEMPLATE = 0, DIR_OUTCHANNEL = 1, DIR_ALLOWEDSENDER = 2};$/;"	g
eEntryType	template.h	/^	enum EntryTypes eEntryType;$/;"	m	struct:templateEntry	typeref:enum:templateEntry::EntryTypes
eFLOWCTL_FULL_DELAY	runtime/typedefs.h	/^	eFLOWCTL_FULL_DELAY = 2	\/**< delay possible for extended period of time *\/$/;"	e	enum:__anon55
eFLOWCTL_LIGHT_DELAY	runtime/typedefs.h	/^	eFLOWCTL_LIGHT_DELAY = 1,	\/**< some light delay possible, but no extended period of time *\/$/;"	e	enum:__anon55
eFLOWCTL_NO_DELAY	runtime/typedefs.h	/^	eFLOWCTL_NO_DELAY = 0,		\/**< UDP and other non-delayable sources *\/$/;"	e	enum:__anon55
eFraming	plugins/imptcp/imptcp.c	/^	TCPFRAMINGMODE eFraming;$/;"	m	struct:ptcpsess_s	file:
eFraming	runtime/tcps_sess.h	/^	TCPFRAMINGMODE eFraming;$/;"	m	struct:tcps_sess_s
eInMsg	plugins/imptcp/imptcp.c	/^		eInMsg$/;"	e	enum:ptcpsess_s::__anon12	file:
eInMsg	runtime/tcps_sess.h	/^		eInMsg$/;"	e	enum:tcps_sess_s::__anon54
eInOctetCnt	plugins/imptcp/imptcp.c	/^		eInOctetCnt,$/;"	e	enum:ptcpsess_s::__anon12	file:
eInOctetCnt	runtime/tcps_sess.h	/^		eInOctetCnt,$/;"	e	enum:tcps_sess_s::__anon54
eKeepType	runtime/modules.h	/^	eModKeepType_t	eKeepType;	\/* keep the module dynamically linked on unload *\/$/;"	m	struct:modInfo_s
eLastPgSQLStatus	plugins/ompgsql/ompgsql.c	/^	ConnStatusType	eLastPgSQLStatus; 	\/* last status from postgres *\/$/;"	m	struct:_instanceData	file:
eLinkType	runtime/modules.h	/^	eModLinkType_t	eLinkType;$/;"	m	struct:modInfo_s
eMOD_ANY	runtime/modules.h	/^	eMOD_ANY = 5	\/* meta-name for "any type of module" -- to be used in function calls *\/$/;"	e	enum:eModType_
eMOD_IN	runtime/modules.h	/^	eMOD_IN = 0,	\/* input module *\/$/;"	e	enum:eModType_
eMOD_KEEP	runtime/modules.h	/^	eMOD_KEEP$/;"	e	enum:eModKeepType_
eMOD_LIB	runtime/modules.h	/^	eMOD_LIB = 2,	\/* library module *\/$/;"	e	enum:eModType_
eMOD_LINK_ALL	runtime/modules.h	/^	eMOD_LINK_ALL			\/* special: all linkage types, e.g. for unload *\/$/;"	e	enum:eModLinkType_
eMOD_LINK_DYNAMIC_LOADED	runtime/modules.h	/^	eMOD_LINK_DYNAMIC_LOADED,	\/* dynalink module, currently loaded *\/$/;"	e	enum:eModLinkType_
eMOD_LINK_DYNAMIC_UNLOADED	runtime/modules.h	/^	eMOD_LINK_DYNAMIC_UNLOADED,	\/* dynalink module, currently not loaded *\/$/;"	e	enum:eModLinkType_
eMOD_LINK_STATIC	runtime/modules.h	/^	eMOD_LINK_STATIC,$/;"	e	enum:eModLinkType_
eMOD_NOKEEP	runtime/modules.h	/^	eMOD_NOKEEP,$/;"	e	enum:eModKeepType_
eMOD_OUT	runtime/modules.h	/^	eMOD_OUT = 1,	\/* output module *\/$/;"	e	enum:eModType_
eMOD_PARSER	runtime/modules.h	/^	eMOD_PARSER = 3,\/* parser module *\/$/;"	e	enum:eModType_
eMOD_STRGEN	runtime/modules.h	/^	eMOD_STRGEN = 4,\/* strgen module *\/$/;"	e	enum:eModType_
eModKeepType_	runtime/modules.h	/^typedef enum eModKeepType_ {$/;"	g
eModKeepType_t	runtime/modules.h	/^} eModKeepType_t;$/;"	t	typeref:enum:eModKeepType_
eModLinkType_	runtime/modules.h	/^typedef enum eModLinkType_ {$/;"	g
eModLinkType_t	runtime/modules.h	/^} eModLinkType_t;$/;"	t	typeref:enum:eModLinkType_
eModType_	runtime/modules.h	/^typedef enum eModType_ {$/;"	g
eModType_t	runtime/modules.h	/^} eModType_t;$/;"	t	typeref:enum:eModType_
eNOWType	runtime/msg.c	/^typedef enum ENOWType { NOW_NOW, NOW_YEAR, NOW_MONTH, NOW_DAY, NOW_HOUR, NOW_HHOUR, NOW_QHOUR, NOW_MINUTE } eNOWType;$/;"	t	typeref:enum:ENOWType	file:
eTCPsyslogFramingAnomaly	runtime/tcpsrv.h	/^} eTCPsyslogFramingAnomaly;$/;"	t	typeref:enum:ETCPsyslogFramingAnomaly
eType	runtime/cfsysline.h	/^	ecslCmdHdrlType eType;			\/* which type of handler is this? *\/$/;"	m	struct:cslCmdHdlr_s
eType	runtime/modules.h	/^	eModType_t	eType;		\/* type of this module *\/$/;"	m	struct:modInfo_s
e_date	tools/logctl.c	/^	char *e_date;$/;"	m	struct:queryopt	file:
e_dateu	tools/logctl.c	/^	char *e_dateu;$/;"	m	struct:queryopt	file:
e_level	tools/logctl.c	/^	char *e_level;$/;"	m	struct:queryopt	file:
e_msg	tools/logctl.c	/^	char *e_msg;$/;"	m	struct:queryopt	file:
e_ret	tools/logctl.c	/^	gint32 e_ret;$/;"	m	struct:queryopt	file:
e_sever	tools/logctl.c	/^	gint32 e_sever;$/;"	m	struct:queryopt	file:
e_skip	tools/logctl.c	/^	gint32 e_skip;$/;"	m	struct:queryopt	file:
e_sys	tools/logctl.c	/^	char *e_sys;	$/;"	m	struct:queryopt	file:
ecslCmdHdrlType	runtime/typedefs.h	/^} ecslCmdHdrlType;$/;"	t	typeref:enum:cslCmdHdlrType
ecslConfObjType	runtime/typedefs.h	/^} ecslConfObjType;$/;"	t	typeref:enum:cslConfObjType
efd	runtime/nsdpoll_ptcp.h	/^	int efd;		\/* file descriptor used by epoll *\/$/;"	m	struct:nsdpoll_ptcp_s
eiCheckFiletype	runtime/libgcry.c	/^eiCheckFiletype(gcryfile gf)$/;"	f	file:
eiCheckFiletype	tools/rscryutil.c	/^eiCheckFiletype(FILE *eifp)$/;"	f	file:
eiClose	runtime/libgcry.c	/^eiClose(gcryfile gf, off64_t offsLogfile)$/;"	f	file:
eiGetEND	runtime/libgcry.c	/^eiGetEND(gcryfile gf, off64_t *offs)$/;"	f	file:
eiGetEND	tools/rscryutil.c	/^eiGetEND(FILE *eifp, off64_t *offs)$/;"	f	file:
eiGetIV	runtime/libgcry.c	/^eiGetIV(gcryfile gf, uchar *iv, size_t leniv)$/;"	f	file:
eiGetIV	tools/rscryutil.c	/^eiGetIV(FILE *eifp, char *iv, size_t leniv)$/;"	f	file:
eiGetRecord	runtime/libgcry.c	/^eiGetRecord(gcryfile gf, char *rectype, char *value)$/;"	f	file:
eiGetRecord	tools/rscryutil.c	/^eiGetRecord(FILE *eifp, char *rectype, char *value)$/;"	f	file:
eiName	runtime/libgcry.h	/^	uchar *eiName; \/* name of .encinfo file *\/$/;"	m	struct:gcryfile_s
eiOpenAppend	runtime/libgcry.c	/^eiOpenAppend(gcryfile gf)$/;"	f	file:
eiOpenRead	runtime/libgcry.c	/^eiOpenRead(gcryfile gf)$/;"	f	file:
eiRead	runtime/libgcry.c	/^eiRead(gcryfile gf)$/;"	f	file:
eiReadChar	runtime/libgcry.c	/^eiReadChar(gcryfile gf)$/;"	f	file:
eiWriteIV	runtime/libgcry.c	/^eiWriteIV(gcryfile gf, uchar *iv)$/;"	f	file:
eiWriteRec	runtime/libgcry.c	/^eiWriteRec(gcryfile gf, char *recHdr, size_t lenRecHdr, char *buf, size_t lenBuf)$/;"	f	file:
eltState	runtime/batch.h	/^	batch_state_t *eltState;\/* state (array!) for individual objects.$/;"	m	struct:batch_s
enableStats	runtime/statsobj.c	/^enableStats()$/;"	f	file:
enabled	runtime/tcpsrv.c	/^	sbool enabled;$/;"	m	struct:wrkrInfo_s	file:
endCnfLoad	runtime/modules.h	/^	rsRetVal (*endCnfLoad)(void*Cnf);$/;"	m	struct:modInfo_s
endTiming	tests/tcpflood.c	/^endTiming(struct timeval *tvStart, struct runstats *stats)$/;"	f	file:
endTiming	tools/syncdemo.c	/^static void endTiming(void)$/;"	f	file:
endTransaction	runtime/modules.h	/^			rsRetVal (*endTransaction)(void*);$/;"	m	struct:modInfo_s::__anon29::__anon31
end_preg	plugins/imfile/imfile.c	/^	regex_t end_preg;	\/* compiled version of startRegex *\/$/;"	m	struct:lstn_s	file:
endutent	tools/omusrmsg.c	164;"	d	file:
enqLine	plugins/imfile/imfile.c	/^static rsRetVal enqLine(lstn_t *const __restrict__ pLstn,$/;"	f	file:
enqMsg	contrib/imkmsg/imkmsg.c	/^enqMsg(uchar *msg, uchar* pszTag, syslog_pri_t pri, struct timeval *tp, struct json_object *json)$/;"	f	file:
enqMsg	plugins/imjournal/imjournal.c	/^enqMsg(uchar *msg, uchar *pszTag, int iFacility, int iSeverity, struct timeval *tp, struct json_object *json, int sharedJsonProperties)$/;"	f	file:
enqMsg	plugins/imklog/imklog.c	/^enqMsg(uchar *const __restrict__ msg, uchar* pszTag, const syslog_pri_t pri, struct timeval *tp)$/;"	f	file:
entry	runtime/hashtable_private.h	/^struct entry$/;"	s
entryDestruct	runtime/dnscache.c	/^entryDestruct(dnscache_entry_t *etry)$/;"	f	file:
entrycount	runtime/hashtable_private.h	/^    unsigned int entrycount;$/;"	m	struct:hashtable
ep	plugins/omelasticsearch/cJSON/cjson.c	/^static const char *ep;$/;"	v	file:
epd	plugins/imptcp/imptcp.c	/^	epolld_t *epd;$/;"	m	struct:ptcplstn_s	file:
epd	plugins/imptcp/imptcp.c	/^	epolld_t *epd;$/;"	m	struct:ptcpsess_s	file:
epoll_event_t	runtime/typedefs.h	/^typedef struct epoll_event epoll_event_t;$/;"	t	typeref:struct:epoll_event
epolld_lstn	plugins/imptcp/imptcp.c	/^	epolld_lstn,$/;"	e	enum:__anon13	file:
epolld_s	plugins/imptcp/imptcp.c	/^struct epolld_s {$/;"	s	file:
epolld_sess	plugins/imptcp/imptcp.c	/^	epolld_sess$/;"	e	enum:__anon13	file:
epolld_t	plugins/imptcp/imptcp.c	/^typedef struct epolld_s epolld_t;$/;"	t	typeref:struct:epolld_s	file:
epolld_type_t	plugins/imptcp/imptcp.c	/^} epolld_type_t;$/;"	t	typeref:enum:__anon13	file:
epollfd	plugins/imptcp/imptcp.c	/^	close(epollfd);$/;"	v
epollfd	plugins/imptcp/imptcp.c	/^static int epollfd = -1;			\/* (sole) descriptor for epoll *\/$/;"	v	file:
eqfn	runtime/hashtable_private.h	/^    int (*eqfn) (void *k1, void *k2);$/;"	m	struct:hashtable
equalkeys	runtime/hashtable/tester.c	/^equalkeys(void *k1, void *k2)$/;"	f	file:
errCallBack	plugins/mmnormalize/mmnormalize.c	/^errCallBack(void __attribute__((unused)) *cookie, const char *msg,$/;"	f
errFunc	runtime/librsgt.h	/^	void (*errFunc)(void *, unsigned char*);$/;"	m	struct:gtctx_s
errFunc	runtime/librsksi.h	/^	void (*errFunc)(void *, unsigned char*);$/;"	m	struct:rsksictx_s
errLogFunc_t	runtime/typedefs.h	/^typedef rsRetVal (*errLogFunc_t)(uchar*); \/* this is a trick to store a function ptr to a function returning a function ptr... *\/$/;"	t
errRec	runtime/librsgt.h	/^	char *errRec;$/;"	m	struct:gterrctx_s
errRec	runtime/librsksi.h	/^	char *errRec;$/;"	m	struct:ksierrctx_s
errRoot	plugins/omelasticsearch/omelasticsearch.c	/^	cJSON *errRoot;$/;"	m	struct:exeContext	file:
errbuf	plugins/omudpspoof/omudpspoof.c	/^	char errbuf[LIBNET_ERRBUF_SIZE];$/;"	m	struct:wrkrInstanceData	file:
errfunc	runtime/librsgt_read.c	/^errfunc(__attribute__((unused)) void *usrptr, uchar *emsg)$/;"	f	file:
errfunc	runtime/lmsig_gt.c	/^errfunc(__attribute__((unused)) void *usrptr, uchar *emsg)$/;"	f	file:
errfunc	runtime/lmsig_ksi.c	/^errfunc(__attribute__((unused)) void *usrptr, uchar *emsg)$/;"	f	file:
errmsg	contrib/mmcount/mmcount.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	contrib/mmgrok/mmgrok.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	contrib/mmsequence/mmsequence.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/mmanon/mmanon.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/mmaudit/mmaudit.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/mmjsonparse/mmjsonparse.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/mmnormalize/mmnormalize.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/mmpstrucdata/mmpstrucdata.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/mmsnmptrapd/mmsnmptrapd.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/mmutf8fix/mmutf8fix.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/omjournal/omjournal.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	plugins/omruleset/omruleset.c	/^DEFobjCurrIf(errmsg);$/;"	v
errmsg	runtime/errmsg.h	/^PROTOTYPEObj(errmsg);$/;"	v
errmsgCURR_IF_VERSION	runtime/errmsg.h	40;"	d
errmsg_s	runtime/errmsg.h	/^typedef struct errmsg_s {$/;"	s
errmsg_t	runtime/errmsg.h	/^} errmsg_t;$/;"	t	typeref:struct:errmsg_s
error	plugins/omgssapi/omgssapi.c	/^        int error;$/;"	v
errorCallback	plugins/omkafka/omkafka.c	/^errorCallback(rd_kafka_t __attribute__((unused)) *rk,$/;"	f	file:
errorFile	plugins/external/solr/rsyslog_solr.py	/^errorFile = open("\/var\/log\/rsyslog_solr_oopsies.log", "a")$/;"	v
errorFile	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *errorFile;$/;"	m	struct:_instanceData	file:
errorFile	plugins/omkafka/omkafka.c	/^	uchar *errorFile;$/;"	m	struct:_instanceData	file:
errorOnly	plugins/omelasticsearch/omelasticsearch.c	/^	sbool errorOnly;$/;"	m	struct:_instanceData	file:
errorlog	plugins/impstats/statslog-analyzer.py	/^errorlog = open("statslog-analyzer.corrupted.log", 'w')$/;"	v
errorlog	plugins/impstats/statslog-splitter.py	/^errorlog = open("statslog-splitter.corrupted.log", 'w')$/;"	v
errout	tests/minitcpsrvr.c	/^errout(char *reason)$/;"	f	file:
errsToReport	tools/omfwd.c	/^	int errsToReport;	\/* (remaining) number of errors to report *\/$/;"	m	struct:wrkrInstanceData	file:
errsToReport	tools/omfwd.c	/^	int errsToReport;	\/* max number of errors to report (per instance) *\/$/;"	m	struct:_instanceData	file:
escapeLF	plugins/imfile/imfile.c	/^	sbool escapeLF;	\/* escape LF inside the MSG content? *\/$/;"	m	struct:lstn_s	file:
escapeLF	plugins/imfile/imfile.c	/^	sbool escapeLF;$/;"	m	struct:instanceConf_s	file:
estr	contrib/mmcount/mmcount.c	/^	es_str_t *estr = NULL;$/;"	v
estr	grammar/rainerscript.h	/^		es_str_t *estr;$/;"	m	union:var::__anon3
estr	grammar/rainerscript.h	/^	es_str_t *estr;$/;"	m	struct:cnfstringval
estrBinary	plugins/mmexternal/mmexternal.c	/^	es_str_t *estrBinary;$/;"	v
estrBinary	plugins/omprog/omprog.c	/^	es_str_t *estrBinary;$/;"	v
estrParams	plugins/mmexternal/mmexternal.c	/^	es_str_t *estrParams;$/;"	v
estrParams	plugins/omprog/omprog.c	/^	es_str_t *estrParams;$/;"	v
estrTmp	plugins/mmexternal/mmexternal.c	/^	es_str_t *estrTmp;$/;"	v
estrTmp	plugins/omprog/omprog.c	/^	es_str_t *estrTmp;$/;"	v
etryType	runtime/net.h	/^	} etryType;$/;"	m	struct:permittedPeers_s	typeref:enum:permittedPeers_s::__anon41
ev	plugins/imptcp/imptcp.c	/^	struct epoll_event ev;$/;"	m	struct:epolld_s	typeref:struct:epolld_s::epoll_event	file:
evalPROPFILT	runtime/ruleset.c	/^evalPROPFILT(struct cnfstmt *stmt, msg_t *pMsg)$/;"	f	file:
evalStrArrayCmp	grammar/rainerscript.c	/^evalStrArrayCmp(es_str_t *const estr_l,$/;"	f	file:
evalVar	grammar/rainerscript.c	/^evalVar(struct cnfvar *__restrict__ const var, void *__restrict__ const usrptr,$/;"	f	file:
event	plugins/imptcp/imptcp.c	/^	struct epoll_event *event; \/* event == NULL -> idle *\/$/;"	m	struct:wrkrInfo_s	typeref:struct:wrkrInfo_s::epoll_event	file:
event	runtime/nsdpoll_ptcp.h	/^	epoll_event_t event;$/;"	m	struct:nsdpoll_epollevt_lst_s
events	plugins/imptcp/imptcp.c	/^	struct epoll_event events[128];$/;"	v	typeref:struct:epoll_event
exception	contrib/omhttpfs/omhttpfs.c	/^    char exception[256];$/;"	m	struct:_HTTPFS_JSON_REMOTE_EXCEPTION	file:
exchange	contrib/omrabbitmq/omrabbitmq.c	/^	char *exchange;$/;"	m	struct:_instanceData	file:
exchange_type	contrib/omrabbitmq/omrabbitmq.c	/^	char *exchange_type;$/;"	m	struct:_instanceData	file:
exeContext	plugins/omelasticsearch/omelasticsearch.c	/^typedef struct exeContext{$/;"	s	file:
execAct	runtime/ruleset.c	/^execAct(struct cnfstmt *stmt, msg_t *pMsg, wti_t *pWti)$/;"	f	file:
execBinary	plugins/mmexternal/mmexternal.c	/^execBinary(wrkrInstanceData_t *pWrkrData, int fdStdin, int fdStdOutErr)$/;"	f	file:
execBinary	plugins/omprog/omprog.c	/^execBinary(wrkrInstanceData_t *pWrkrData, int fdStdin, int fdStdOutErr)$/;"	f	file:
execCall	runtime/ruleset.c	/^execCall(struct cnfstmt *stmt, msg_t *pMsg, wti_t *pWti)$/;"	f	file:
execForeach	runtime/ruleset.c	/^execForeach(struct cnfstmt *stmt, msg_t *pMsg, wti_t *pWti)$/;"	f	file:
execIf	runtime/ruleset.c	/^execIf(struct cnfstmt *stmt, msg_t *pMsg, wti_t *pWti)$/;"	f	file:
execKeyScript	runtime/libgcry_common.c	/^execKeyScript(char *cmd, int pipefd[])$/;"	f	file:
execPRIFILT	runtime/ruleset.c	/^execPRIFILT(struct cnfstmt *stmt, msg_t *pMsg, wti_t *pWti)$/;"	f	file:
execPROPFILT	runtime/ruleset.c	/^execPROPFILT(struct cnfstmt *stmt, msg_t *pMsg, wti_t *pWti)$/;"	f	file:
execProg	runtime/srutils.c	/^int execProg(uchar *program, int bWait, uchar *arg)$/;"	f
execSet	runtime/ruleset.c	/^execSet(struct cnfstmt *stmt, msg_t *pMsg)$/;"	f	file:
execState	runtime/wti.h	/^	} execState;	\/* state for the execution engine *\/$/;"	m	struct:wti_s	typeref:struct:wti_s::__anon63
execUnset	runtime/ruleset.c	/^execUnset(struct cnfstmt *stmt, msg_t *pMsg)$/;"	f	file:
expr	grammar/grammar.y	/^expr:	  expr AND expr			{ $$ = cnfexprNew(AND, $1, $3); }$/;"	l
expr	grammar/rainerscript.h	/^			struct cnfexpr *expr;$/;"	m	struct:cnfstmt::__anon4::__anon5	typeref:struct:cnfstmt::__anon4::__anon5::cnfexpr
expr	grammar/rainerscript.h	/^			struct cnfexpr *expr;$/;"	m	struct:cnfstmt::__anon4::__anon6	typeref:struct:cnfstmt::__anon4::__anon6::cnfexpr
expr	grammar/rainerscript.h	/^	struct cnfexpr *expr;$/;"	m	struct:cnffparamlst	typeref:struct:cnffparamlst::cnfexpr
expr	grammar/rainerscript.h	/^	struct cnfexpr *expr[];$/;"	m	struct:cnffunc	typeref:struct:cnffunc::cnfexpr
extraDataLen	tests/tcpflood.c	/^static int extraDataLen = 0; \/* amount of extra data to add to message *\/$/;"	v	file:
extractField	plugins/mmfields/mmfields.c	/^extractField(instanceData *pData, uchar *msgtext, int lenMsg, int *curridx, uchar *fieldbuf)$/;"	f	file:
f3_commas	contrib/pmpanngfw/pmpanngfw.c	/^    uchar *f3_commas[3];$/;"	v
fCreateMode	tools/omfile.c	/^	int	fCreateMode;	\/* file creation mode for open() *\/$/;"	m	struct:_instanceData	file:
fCreateMode	tools/omfile.c	/^	int fCreateMode; \/* default mode to use when creating files *\/$/;"	m	struct:modConfData_s	file:
fCreateMode	tools/omfile.c	/^	int fCreateMode; \/* mode to use when creating files *\/$/;"	m	struct:configSettings_s	file:
fDirCreateMode	tools/omfile.c	/^	int	fDirCreateMode;	\/* creation mode for mkdir() *\/$/;"	m	struct:_instanceData	file:
fDirCreateMode	tools/omfile.c	/^	int fDirCreateMode; \/* default mode to use when creating files *\/$/;"	m	struct:modConfData_s	file:
fDirCreateMode	tools/omfile.c	/^	int fDirCreateMode; \/* mode to use when creating files *\/$/;"	m	struct:configSettings_s	file:
fID	grammar/rainerscript.h	/^	enum cnffuncid fID; \/* function ID for built-ins, 0 means use name *\/$/;"	m	struct:cnffunc	typeref:enum:cnffunc::cnffuncid
f_addr	plugins/omgssapi/omgssapi.c	/^	struct addrinfo *f_addr;$/;"	m	struct:_instanceData	typeref:struct:_instanceData::addrinfo	file:
f_addr	plugins/omudpspoof/omudpspoof.c	/^	struct addrinfo *f_addr;$/;"	m	struct:wrkrInstanceData	typeref:struct:wrkrInstanceData::addrinfo	file:
f_addr	tools/omfwd.c	/^	struct addrinfo *f_addr;$/;"	m	struct:wrkrInstanceData	typeref:struct:wrkrInstanceData::addrinfo	file:
f_dbname	plugins/ompgsql/ompgsql.c	/^	char	f_dbname[_DB_MAXDBLEN+1];	\/* DB name *\/$/;"	m	struct:_instanceData	file:
f_dbpwd	plugins/ompgsql/ompgsql.c	/^	char	f_dbpwd[_DB_MAXPWDLEN+1];	\/* DB user's password *\/$/;"	m	struct:_instanceData	file:
f_dbsrv	plugins/ompgsql/ompgsql.c	/^	char	f_dbsrv[MAXHOSTNAMELEN+1];	\/* IP or hostname of DB server*\/ $/;"	m	struct:_instanceData	file:
f_dbuid	plugins/ompgsql/ompgsql.c	/^	char	f_dbuid[_DB_MAXUNAMELEN+1];	\/* DB user *\/$/;"	m	struct:_instanceData	file:
f_hname	plugins/omgssapi/omgssapi.c	/^	char	*f_hname;$/;"	m	struct:_instanceData	file:
f_hpgsql	plugins/ompgsql/ompgsql.c	/^	PGconn	*f_hpgsql;			\/* handle to PgSQL *\/$/;"	m	struct:_instanceData	file:
f_time	action.h	/^	time_t	f_time;		\/* used for "max. n messages in m seconds" processing *\/$/;"	m	struct:action_s
facilityHdlr	plugins/imjournal/imjournal.c	/^static rsRetVal facilityHdlr(uchar **pp, void *pVal)$/;"	f	file:
farray	runtime/queue.h	/^		} farray;$/;"	m	struct:queue_s::__anon48	typeref:struct:queue_s::__anon48::__anon49
fd	plugins/imuxsock/imuxsock.c	/^	int fd;			\/* read-only after startup *\/$/;"	m	struct:lstn_s	file:
fd	plugins/imuxsock/imuxsock.c	/^	int fd;$/;"	v
fd	runtime/libgcry.h	/^	int fd; \/* descriptor of .encinfo file (-1 if not open) *\/$/;"	m	struct:gcryfile_s
fd	runtime/librsgt.h	/^	int fd;$/;"	m	struct:gtfile_s
fd	runtime/librsksi.h	/^	int fd;$/;"	m	struct:ksifile_s
fd	runtime/stream.h	/^	int fd;		\/* the file descriptor, -1 if closed *\/$/;"	m	struct:strm_s
fd	tools/ompipe.c	/^	short	fd;		\/* pipe descriptor for (current) pipe *\/$/;"	m	struct:_instanceData	file:
fdDir	runtime/stream.h	/^	int fdDir;	\/* the directory's descriptor, in case bSync is requested (-1 if closed) *\/$/;"	m	struct:strm_s
fdErrFile	plugins/omelasticsearch/omelasticsearch.c	/^	int fdErrFile;		\/* error file fd or -1 if not open *\/$/;"	m	struct:_instanceData	file:
fdErrFile	plugins/omkafka/omkafka.c	/^	int fdErrFile;		\/* error file fd or -1 if not open *\/$/;"	m	struct:_instanceData	file:
fdOutput	plugins/mmexternal/mmexternal.c	/^	int fdOutput;		\/* it's fd (-1 if closed) *\/$/;"	m	struct:wrkrInstanceData	file:
fdOutput	plugins/omprog/omprog.c	/^	int fdOutput;		\/* it's fd (-1 if closed) *\/$/;"	m	struct:wrkrInstanceData	file:
fdPipeIn	plugins/mmexternal/mmexternal.c	/^	int fdPipeIn;		\/* fd we receive messages from the program (if we want to) *\/$/;"	m	struct:wrkrInstanceData	file:
fdPipeIn	plugins/omprog/omprog.c	/^	int fdPipeIn;		\/* fd we receive messages from the program (if we want to) *\/$/;"	m	struct:wrkrInstanceData	file:
fdPipeOut	plugins/mmexternal/mmexternal.c	/^	int fdPipeOut;		\/* file descriptor to write to *\/$/;"	m	struct:wrkrInstanceData	file:
fdPipeOut	plugins/omprog/omprog.c	/^	int fdPipeOut;		\/* file descriptor to write to *\/$/;"	m	struct:wrkrInstanceData	file:
fh	plugins/omhdfs/omhdfs.c	/^	hdfsFile fh;$/;"	m	struct:__anon19	file:
field	template.h	/^		} field;$/;"	m	union:templateEntry::__anon69	typeref:struct:templateEntry::__anon69::__anon71
fieldName	template.h	/^	uchar *fieldName;	\/**< field name to be used for structured output *\/$/;"	m	struct:templateEntry
field_delim	template.h	/^			unsigned char field_delim; \/* support for field-counting: field delemiter char *\/$/;"	m	struct:templateEntry::__anon69::__anon71
field_expand	template.h	/^			int field_expand;	\/* use multiple instances of the field delimiter as a single one? *\/$/;"	m	struct:templateEntry::__anon69::__anon71
file	contrib/omhttpfs/omhttpfs.c	/^    uchar* file;$/;"	m	struct:_instanceData	file:
file	contrib/omhttpfs/omhttpfs.c	/^    uchar* file;$/;"	m	struct:wrkrInstanceData	file:
file	runtime/debug.h	/^	char *file;$/;"	m	struct:dbgFuncDB_s
fileClose	plugins/omhdfs/omhdfs.c	/^fileClose(file_t *pFile)$/;"	f	file:
fileGID	tools/omfile.c	/^	gid_t	fileGID;$/;"	m	struct:_instanceData	file:
fileGID	tools/omfile.c	/^	gid_t fileGID;$/;"	m	struct:modConfData_s	file:
fileGID	tools/omfile.c	/^	uid_t	fileGID;	\/* GID to be used for newly created files *\/$/;"	m	struct:configSettings_s	file:
fileHash	runtime/librsgt.h	/^	imprint_t *fileHash;$/;"	m	struct:gterrctx_s
fileHash	runtime/librsksi.h	/^	imprint_t *fileHash;$/;"	m	struct:ksierrctx_s
fileInfo	tests/rscript.c	/^	struct stat fileInfo;$/;"	v	typeref:struct:stat
fileName	plugins/omhdfs/omhdfs.c	/^	uchar *fileName;	$/;"	m	struct:configSettings_s	file:
fileName	tests/randomgen.c	/^static char *fileName = NULL;		\/* name of output file *\/$/;"	v	file:
fileObjAddUser	plugins/omhdfs/omhdfs.c	/^fileObjAddUser(file_t *pFile)$/;"	f	file:
fileObjConstruct	plugins/omhdfs/omhdfs.c	/^fileObjConstruct(file_t **ppFile)$/;"	f	file:
fileObjDestruct	plugins/omhdfs/omhdfs.c	/^fileObjDestruct(file_t **ppFile)$/;"	f	file:
fileObjDestruct4Hashtable	plugins/omhdfs/omhdfs.c	/^fileObjDestruct4Hashtable(void *ptr)$/;"	f	file:
fileOpen	plugins/omhdfs/omhdfs.c	/^fileOpen(file_t *pFile)$/;"	f	file:
filePrepare	plugins/omhdfs/omhdfs.c	/^filePrepare(file_t *pFile)$/;"	f	file:
fileSize	tests/randomgen.c	/^static long long fileSize = 1024*1024;	\/* file size in K, 1MB default *\/$/;"	v	file:
fileTableAddFile	plugins/imfile/imfile.c	/^fileTableAddFile(fileTable_t *const __restrict__ tab, lstn_t *const __restrict__ pLstn)$/;"	f	file:
fileTableDelFile	plugins/imfile/imfile.c	/^fileTableDelFile(fileTable_t *const __restrict__ tab, lstn_t *const __restrict__ pLstn)$/;"	f	file:
fileTableInit	plugins/imfile/imfile.c	/^fileTableInit(fileTable_t *const __restrict__ tab, const int nelem)$/;"	f	file:
fileTableSearch	plugins/imfile/imfile.c	/^fileTableSearch(fileTable_t *const __restrict__ tab, uchar *const __restrict__ fn)$/;"	f	file:
fileTableSearchNoWildcard	plugins/imfile/imfile.c	/^fileTableSearchNoWildcard(fileTable_t *const __restrict__ tab, uchar *const __restrict__ fn)$/;"	f	file:
fileTable_s	plugins/imfile/imfile.c	/^struct fileTable_s {$/;"	s	file:
fileTable_t	plugins/imfile/imfile.c	/^typedef struct fileTable_s fileTable_t;$/;"	t	typeref:struct:fileTable_s	file:
fileUID	tools/omfile.c	/^	uid_t	fileUID;	\/* IDs for creation *\/$/;"	m	struct:_instanceData	file:
fileUID	tools/omfile.c	/^	uid_t	fileUID;	\/* UID to be used for newly created files *\/$/;"	m	struct:configSettings_s	file:
fileUID	tools/omfile.c	/^	uid_t fileUID;	\/* default IDs for creation *\/$/;"	m	struct:modConfData_s	file:
fileWrite	plugins/omhdfs/omhdfs.c	/^fileWrite(file_t *pFile, uchar *buf, size_t *lenWrite)$/;"	f	file:
file_t	plugins/omhdfs/omhdfs.c	/^} file_t;$/;"	t	typeref:struct:__anon19	file:
filedate	plugins/impstats/statslog-analyzer.py	/^						filedate = datetime.datetime.strptime(result[ loglineindexes[iLogRegExIndex]["LN_MONTH"] ] + " " + str(datetime.datetime.now().year) + " " + result[ loglineindexes[iLogRegExIndex]["LN_DAY"] ] + " " + result[ loglineindexes[iLogRegExIndex]["LN_TIME"] ] ,"%b %Y %d %H:%M:%S")$/;"	v
filedate	plugins/impstats/statslog-analyzer.py	/^						filedate = datetime.datetime.strptime(result[ loglineindexes[iLogRegExIndex]["LN_MONTH"] ] + " " + str(datetime.datetime.now().year) + " " + result[ loglineindexes[iLogRegExIndex]["LN_DAY"] ] + " " + result[ loglineindexes[iLogRegExIndex]["LN_TIME"] ] ,"%m %Y %d %H:%M:%S")$/;"	v
filedate	plugins/impstats/statslog-splitter.py	/^						filedate = datetime.datetime.strptime(result[ loglineindexes[iLogRegExIndex]["LN_MONTH"] ] + " " + str(datetime.datetime.now().year) + " " + result[ loglineindexes[iLogRegExIndex]["LN_DAY"] ] + " " + result[ loglineindexes[iLogRegExIndex]["LN_TIME"] ] ,"%b %Y %d %H:%M:%S")$/;"	v
filedate	plugins/impstats/statslog-splitter.py	/^						filedate = datetime.datetime.strptime(result[ loglineindexes[iLogRegExIndex]["LN_MONTH"] ] + " " + str(datetime.datetime.now().year) + " " + result[ loglineindexes[iLogRegExIndex]["LN_DAY"] ] + " " + result[ loglineindexes[iLogRegExIndex]["LN_TIME"] ] ,"%m %Y %d %H:%M:%S")$/;"	v
filename	runtime/librsgt.h	/^	char *filename;$/;"	m	struct:gterrctx_s
filename	runtime/librsksi.h	/^	char *filename;$/;"	m	struct:ksierrctx_s
filename	runtime/lookup.h	/^	uchar *filename;$/;"	m	struct:lookup_s
files	plugins/omhdfs/omhdfs.c	/^static struct hashtable *files;		\/* holds all file objects that we know *\/$/;"	v	typeref:struct:hashtable	file:
filesDisplay	plugins/imfile/imfile.c	/^filesDisplay(void)$/;"	f	file:
findEntry	runtime/dnscache.c	/^findEntry(struct sockaddr_storage *addr)$/;"	f	file:
findModule	runtime/modules.c	/^findModule(uchar *pModName, int iModNameLen, modInfo_t **pMod)$/;"	f	file:
findRatelimiter	plugins/imuxsock/imuxsock.c	/^findRatelimiter(lstn_t *pLstn, struct ucred *cred, ratelimit_t **prl)$/;"	f	file:
findnl_bkwd	plugins/imklog/solaris_cddl.c	/^findnl_bkwd(const char *buf, const size_t len)$/;"	f
fiop_t	runtime/typedefs.h	/^} fiop_t;$/;"	t	typeref:enum:__anon56
firstByteMark	plugins/omelasticsearch/cJSON/cjson.c	/^static const unsigned char firstByteMark[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };$/;"	v	file:
fixInvldMBSeq	plugins/mmutf8fix/mmutf8fix.c	/^fixInvldMBSeq(instanceData *pData, uchar *msg, int lenMsg, int strtIdx, int *endIdx, int8_t seqLen)$/;"	f	file:
fixPID	plugins/imuxsock/imuxsock.c	/^fixPID(uchar *bufTAG, int *lenTag, struct ucred *cred)$/;"	f	file:
fixedPartition	plugins/omkafka/omkafka.c	/^	int fixedPartition;$/;"	m	struct:_instanceData	file:
fklog	contrib/imkmsg/kmsg.c	/^static int	fklog = -1;	\/* kernel log fd *\/$/;"	v	file:
fklog	plugins/imklog/bsd.c	/^static int	fklog = -1;	\/* kernel log fd *\/$/;"	v	file:
fklog	plugins/imklog/solaris.c	/^static int fklog; \/\/ TODO: remove$/;"	v	file:
flags	grammar/rainerscript.h	/^	unsigned flags;$/;"	m	struct:cnfparamdescr
flags	plugins/imuxsock/imuxsock.c	/^	int flags;		\/* should parser parse host name?  read-only after startup *\/$/;"	m	struct:lstn_s	file:
flags	runtime/net.h	/^  uint8_t flags;$/;"	m	struct:NetAddr
flags	runtime/statsobj.h	/^	int8_t flags;$/;"	m	struct:ctr_s
flags	runtime/wti.h	/^	} flags;$/;"	m	struct:actWrkrInfo	typeref:struct:actWrkrInfo::__anon59
flowControl_t	runtime/typedefs.h	/^} flowControl_t;$/;"	t	typeref:enum:__anon55
flowCtl	plugins/imuxsock/imuxsock.c	/^	int flowCtl;		\/* flow control settings for this socket *\/$/;"	m	struct:lstn_s	file:
flowCtlType	runtime/msg.h	/^	flowControl_t flowCtlType; \/**< type of flow control we can apply, for enqueueing, needs not to be persisted because$/;"	m	struct:msg
fmt	tests/syslog_caller.c	/^	} fmt = FMT_NATIVE;$/;"	v	typeref:enum:__anon74	file:
fname	grammar/rainerscript.h	/^	es_str_t *fname;$/;"	m	struct:cnffunc
fname	tools/omfile.c	/^	uchar	*fname;	\/* file or template name (display only) *\/$/;"	m	struct:_instanceData	file:
fname	tools/omfile.c	/^	uchar fname[MAXFNAME];$/;"	v
foosddaemonhfoo	runtime/sd-daemon.h	4;"	d
force_reset	grammar/rainerscript.h	/^			int force_reset;$/;"	m	struct:cnfstmt::__anon4::__anon6
forkRsyslog	tools/rsyslogd.c	/^forkRsyslog(void)$/;"	f
formatTimestamp3164	runtime/datetime.c	/^int formatTimestamp3164(struct syslogTime *ts, char* pBuf, int bBuggyDay)$/;"	f
formatTimestamp3164	runtime/datetime.h	/^	int (*formatTimestamp3164)(struct syslogTime *ts, char* pBuf, int);$/;"	v
formatTimestamp3339	runtime/datetime.c	/^int formatTimestamp3339(struct syslogTime *ts, char* pBuf)$/;"	f
formatTimestamp3339	runtime/datetime.h	/^	int (*formatTimestamp3339)(struct syslogTime *ts, char* pBuf);$/;"	v
formatTimestampSecFrac	runtime/datetime.c	/^int formatTimestampSecFrac(struct syslogTime *ts, char* pBuf)$/;"	f
formatTimestampSecFrac	runtime/datetime.h	/^	int (*formatTimestampSecFrac)(struct syslogTime *ts, char* pBuf);$/;"	v
formatTimestampToMySQL	runtime/datetime.c	/^int formatTimestampToMySQL(struct syslogTime *ts, char* pBuf)$/;"	f
formatTimestampToMySQL	runtime/datetime.h	/^	int (*formatTimestampToMySQL)(struct syslogTime *ts, char* pDst);$/;"	v
formatTimestampToPgSQL	runtime/datetime.c	/^int formatTimestampToPgSQL(struct syslogTime *ts, char *pBuf)$/;"	f
formatTimestampToPgSQL	runtime/datetime.h	/^	int (*formatTimestampToPgSQL)(struct syslogTime *ts, char *pDst);$/;"	v
formatTimestampUnix	runtime/datetime.c	/^int formatTimestampUnix(struct syslogTime *ts, char *pBuf)$/;"	f
formatTimestampUnix	runtime/datetime.h	/^	int (*formatTimestampUnix)(struct syslogTime *ts, char*pBuf);$/;"	v
formater	tools/logctl.c	/^void formater(struct ofields *fields)$/;"	f
fp	runtime/librsgt.h	/^	FILE *fp;	\/**< file for error messages *\/$/;"	m	struct:gterrctx_s
fp	runtime/librsksi.h	/^	FILE *fp;	\/**< file for error messages *\/$/;"	m	struct:ksierrctx_s
fpIn	tests/filewriter.c	/^static FILE *fpIn;$/;"	v	file:
fpOut	tests/filewriter.c	/^static FILE *fpOut;$/;"	v	file:
fparams	grammar/grammar.y	/^fparams:  expr				{ $$ = cnffparamlstNew($1, NULL); }$/;"	l
fqdn	runtime/dnscache.c	/^	prop_t *fqdn;$/;"	m	struct:dnscache_entry_s	file:
fqdnLowerCase	runtime/dnscache.c	/^	prop_t *fqdnLowerCase;$/;"	m	struct:dnscache_entry_s	file:
frameDelim	tests/tcpflood.c	/^static char frameDelim = '\\n';	\/* default frame delimiter *\/$/;"	v	file:
frame_CiscoIOS	runtime/tcpsrv.h	/^	frame_CiscoIOS = 2$/;"	e	enum:ETCPsyslogFramingAnomaly
frame_NetScreen	runtime/tcpsrv.h	/^	frame_NetScreen = 1,$/;"	e	enum:ETCPsyslogFramingAnomaly
frame_normal	runtime/tcpsrv.h	/^	frame_normal = 0,$/;"	e	enum:ETCPsyslogFramingAnomaly
free	runtime/glbl.c	/^	free(pszDfltNetstrmDrvrCAF);$/;"	v
freeBuf	plugins/mmnormalize/mmnormalize.c	/^	unsigned short freeBuf = 0;$/;"	v
freeCnf	runtime/modules.h	/^	rsRetVal (*freeCnf)(void*Cnf);$/;"	m	struct:modInfo_s
freeCnf	runtime/rsconf.c	/^freeCnf(rsconf_t *pThis)$/;"	f	file:
freeConfigVariables	plugins/ommail/ommail.c	/^static rsRetVal freeConfigVariables(void)$/;"	f	file:
freeConfigVars	plugins/omudpspoof/omudpspoof.c	/^freeConfigVars(void)$/;"	f	file:
freeConfigVars	plugins/omuxsock/omuxsock.c	/^freeConfigVars(void)$/;"	f	file:
freeConfigVars	tools/omfwd.c	/^freeConfigVars(void)$/;"	f	file:
freeFdSet	runtime/unlimited_select.h	/^void freeFdSet(fd_set *p) {$/;"	f
freeFdSet	runtime/unlimited_select.h	42;"	d
freeHOSTNAME	runtime/msg.c	/^static inline void freeHOSTNAME(msg_t *pThis)$/;"	f	file:
freeInstance	runtime/modules.h	/^	rsRetVal (*freeInstance)(void*);\/* called before termination or module unload *\/$/;"	m	struct:modInfo_s
freeParserInst	runtime/modules.h	/^			rsRetVal (*freeParserInst)(void *pinst);$/;"	m	struct:modInfo_s::__anon29::__anon33
freeTAG	runtime/msg.c	/^static inline void freeTAG(msg_t *pThis)$/;"	f	file:
freeTimezoneInfo	runtime/glbl.c	/^freeTimezoneInfo(void)$/;"	f	file:
freeWrkrInstance	runtime/modules.h	/^			rsRetVal (*freeWrkrInstance)(void*pWrkrData);$/;"	m	struct:modInfo_s::__anon29::__anon31
free_cursor	tools/logctl.c	/^void free_cursor(struct db_cursor *db_c)$/;"	f
free_fn	plugins/omelasticsearch/cJSON/cjson.h	/^      void (*free_fn)(void *ptr);$/;"	m	struct:cJSON_Hooks
freeifaddrs	compat/getifaddrs.c	/^freeifaddrs(struct ifaddrs *ifa)$/;"	f
freekey	runtime/hashtable_private.h	47;"	d
fromHost	runtime/strms_sess.h	/^	uchar *fromHost;$/;"	m	struct:strms_sess_s
fromHost	runtime/tcps_sess.h	/^	prop_t *fromHost;	\/* host name we received messages from *\/$/;"	m	struct:tcps_sess_s
fromHostIP	runtime/strms_sess.h	/^	prop_t *fromHostIP;$/;"	m	struct:strms_sess_s
fromHostIP	runtime/tcps_sess.h	/^	prop_t *fromHostIP;$/;"	m	struct:tcps_sess_s
frstRecInBlk	runtime/librsgt.h	/^	char *frstRecInBlk; \/* This holds the first message seen inside the current block *\/$/;"	m	struct:gterrctx_s
frstRecInBlk	runtime/librsksi.h	/^	char *frstRecInBlk; \/* This holds the first message seen inside the current block *\/$/;"	m	struct:ksierrctx_s
fs	plugins/omhdfs/omhdfs.c	/^	hdfsFS fs;$/;"	m	struct:__anon19	file:
func	runtime/debug.h	/^	char *func;$/;"	m	struct:dbgFuncDB_s
funcData_prifilt	grammar/rainerscript.h	/^struct funcData_prifilt {$/;"	s
funcName2ID	grammar/rainerscript.c	/^funcName2ID(es_str_t *fname, unsigned short nParams)$/;"	f	file:
funcdata	grammar/rainerscript.h	/^	void *funcdata;	\/* global data for function-specific use (e.g. compiled regex) *\/$/;"	m	struct:cnffunc
gcryCtxNew	runtime/libgcry.c	/^gcryCtxNew(void)$/;"	f
gcryGetKeyFromFile	runtime/libgcry_common.c	/^gcryGetKeyFromFile(char *fn, char **key, unsigned *keylen)$/;"	f
gcryGetKeyFromProg	runtime/libgcry_common.c	/^gcryGetKeyFromProg(char *cmd, char **key, unsigned *keylen)$/;"	f
gcry_chd	tools/rscryutil.c	/^static gcry_cipher_hd_t gcry_chd;$/;"	v	file:
gcryctx	runtime/libgcry.h	/^typedef struct gcryctx_s *gcryctx;$/;"	t	typeref:struct:gcryctx_s
gcryctx_s	runtime/libgcry.h	/^struct gcryctx_s {$/;"	s
gcryfile	runtime/libgcry.h	/^typedef struct gcryfile_s *gcryfile;$/;"	t	typeref:struct:gcryfile_s
gcryfileConstruct	runtime/libgcry.c	/^gcryfileConstruct(gcryctx ctx, gcryfile *pgf, uchar *logfn)$/;"	f	file:
gcryfileDeleteState	runtime/libgcry.c	/^gcryfileDeleteState(uchar *logfn)$/;"	f
gcryfileDestruct	runtime/libgcry.c	/^gcryfileDestruct(gcryfile gf, off64_t offsLogfile)$/;"	f
gcryfileGetBytesLeftInBlock	runtime/libgcry.c	/^gcryfileGetBytesLeftInBlock(gcryfile gf, ssize_t *left)$/;"	f
gcryfileSetDeleteOnClose	runtime/libgcry.h	/^gcryfileSetDeleteOnClose(gcryfile gf, int val)$/;"	f
gcryfile_s	runtime/libgcry.h	/^struct gcryfile_s {$/;"	s
genCopies	tests/filewriter.c	/^genCopies()$/;"	f	file:
genFile	tests/randomgen.c	/^genFile()$/;"	f	file:
genFileName	runtime/srutils.c	/^rsRetVal genFileName(uchar **ppName, uchar *pDirName, size_t lenDirName, uchar *pFName,$/;"	f
genMsg	tests/syslog_caller.c	/^genMsg(char *buf, const int sev, const int iRun)$/;"	f	file:
genMsg	tests/tcpflood.c	/^genMsg(char *buf, size_t maxBuf, int *pLenBuf, struct instdata *inst)$/;"	f	file:
genStats	tests/tcpflood.c	/^genStats(struct runstats *stats)$/;"	f	file:
generateStatsMsgs	plugins/impstats/impstats.c	/^generateStatsMsgs(void)$/;"	f	file:
getAPPNAME	runtime/msg.c	/^char *getAPPNAME(msg_t * const pM, sbool bLockMutex)$/;"	f
getAPPNAMELen	runtime/msg.c	/^static int getAPPNAMELen(msg_t * const pM, sbool bLockMutex)$/;"	f	file:
getActNow	action.c	/^getActNow(action_t * const pThis)$/;"	f	file:
getActStateName	action.c	/^static uchar *getActStateName(action_t * const pThis, wti_t * const pWti)$/;"	f	file:
getActionJustResumed	runtime/wti.h	/^getActionJustResumed(wti_t * const pWti, action_t * const pAction)$/;"	f
getActionNbrResRtry	runtime/wti.h	/^getActionNbrResRtry(wti_t * const pWti, action_t * const pAction)$/;"	f
getActionResumeInRow	runtime/wti.h	/^getActionResumeInRow(wti_t * const pWti, action_t * const pAction)$/;"	f
getActionState	runtime/wti.h	/^getActionState(wti_t * const pWti, action_t * const pAction)$/;"	f
getActionStateByNbr	runtime/wti.h	/^getActionStateByNbr(wti_t * const pWti, const int iActNbr)$/;"	f
getAllStatsLines	runtime/statsobj.c	/^getAllStatsLines(rsRetVal(*cb)(void*, cstr_t*), void *usrptr, statsFmtType_t fmt, int8_t bResetCtrs)$/;"	f	file:
getBasename	plugins/imfile/imfile.c	/^getBasename(uchar *const __restrict__ basen, uchar *const __restrict__ path)$/;"	f	file:
getClockFileAccess	tools/omfile.c	/^getClockFileAccess(void)$/;"	f	file:
getClockTopicAccess	plugins/omkafka/omkafka.c	/^getClockTopicAccess(void)$/;"	f	file:
getConstNumber	grammar/rainerscript.c	/^getConstNumber(struct cnfexpr *expr, long long *l, long long *r)$/;"	f	file:
getCounter	contrib/mmcount/mmcount.c	/^getCounter(struct hashtable *ht, char *str) {$/;"	f	file:
getCounter	contrib/mmsequence/mmsequence.c	/^getCounter(struct hashtable *ht, char *str, int initial) {$/;"	f	file:
getCurrTime	runtime/datetime.c	/^static void getCurrTime(struct syslogTime *t, time_t *ttSeconds)$/;"	f	file:
getCurrTime	runtime/datetime.h	/^	void (*getCurrTime)(struct syslogTime *t, time_t *ttSeconds);$/;"	v
getDataErrorDefault	plugins/omelasticsearch/omelasticsearch.c	/^getDataErrorDefault(wrkrInstanceData_t *pWrkrData,cJSON **pReplyRoot,uchar *reqmsg,char **rendered)$/;"	f	file:
getDataErrorOnly	plugins/omelasticsearch/omelasticsearch.c	/^getDataErrorOnly(context *ctx,int itemStatus,char *request,char *response)$/;"	f	file:
getDataErrorOnlyInterleaved	plugins/omelasticsearch/omelasticsearch.c	/^getDataErrorOnlyInterleaved(context *ctx,int itemStatus,char *request,char *response)$/;"	f	file:
getDataInterleaved	plugins/omelasticsearch/omelasticsearch.c	/^getDataInterleaved(context *ctx,int itemStatus,char *request,char *response)$/;"	f	file:
getDefPFFamily	runtime/glbl.c	/^getDefPFFamily(void)$/;"	f	file:
getDefaultBSON	plugins/ommongodb/ommongodb.c	/^getDefaultBSON(msg_t *pMsg)$/;"	f	file:
getDfltTpl	plugins/omlibdbi/omlibdbi.c	/^getDfltTpl(void)$/;"	f	file:
getDfltTpl	plugins/omudpspoof/omudpspoof.c	/^getDfltTpl(void)$/;"	f	file:
getDfltTpl	plugins/omuxsock/omuxsock.c	/^getDfltTpl(void)$/;"	f	file:
getDfltTpl	tools/omfile.c	/^getDfltTpl(void)$/;"	f	file:
getDfltTpl	tools/omfwd.c	/^getDfltTpl(void)$/;"	f	file:
getDfltTpl	tools/ompipe.c	/^getDfltTpl(void)$/;"	f	file:
getDisableDNS	runtime/glbl.c	/^getDisableDNS(void)$/;"	f	file:
getFIOPName	grammar/rainerscript.c	/^getFIOPName(const unsigned iFIOP)$/;"	f
getFacility	runtime/msg.c	/^static inline char *getFacility(msg_t * const pM)$/;"	f	file:
getFacilityStr	runtime/msg.c	/^static inline char *getFacilityStr(msg_t * const pM)$/;"	f	file:
getFileSize	runtime/srutils.c	/^getFileSize(uchar *pszName, off_t *pSize)$/;"	f
getFirstWord	plugins/imdiag/imdiag.c	/^getFirstWord(uchar **ppszSrc, uchar *pszBuf, size_t lenBuf, int options)$/;"	f	file:
getFwdPt	plugins/omudpspoof/omudpspoof.c	/^static inline uchar *getFwdPt(instanceData *pData)$/;"	f	file:
getFwdSyslogPt	plugins/omgssapi/omgssapi.c	/^static char *getFwdSyslogPt(instanceData *pData)$/;"	f	file:
getHOSTNAME	runtime/msg.c	/^char *getHOSTNAME(msg_t * const pM)$/;"	f
getHOSTNAMELen	runtime/msg.c	/^int getHOSTNAMELen(msg_t * const pM)$/;"	f
getHostname	tests/nettester.c	/^getHostname(void)$/;"	f	file:
getIFIPAddr	runtime/net.c	/^getIFIPAddr(uchar *szif, int family, uchar *pszbuf, int lenBuf)$/;"	f	file:
getIVLen	runtime/librsgt.h	/^getIVLen(block_hdr_t *bh)$/;"	f
getIVLenKSI	runtime/librsksi.h	/^getIVLenKSI(block_hdr_t *bh)$/;"	f
getIndexTypeAndParent	plugins/omelasticsearch/omelasticsearch.c	/^getIndexTypeAndParent(instanceData *pData, uchar **tpls,$/;"	f	file:
getInputName	runtime/msg.c	/^getInputName(msg_t * const pM, uchar **ppsz, int *plen)$/;"	f	file:
getJSONPropVal	runtime/msg.c	/^getJSONPropVal(msg_t * const pMsg, msgPropDescr_t *pProp, uchar **pRes, rs_size_t *buflen, unsigned short *pbMustBeFreed)$/;"	f
getKeyFromFile	tools/rscryutil.c	/^getKeyFromFile(char *fn)$/;"	f	file:
getLoadLimit	runtime/hashtable.c	/^getLoadLimit(unsigned size)$/;"	f	file:
getLocalHostname	runtime/net.c	/^getLocalHostname(uchar **ppName)$/;"	f	file:
getLocalHostname	runtime/net.h	/^	rsRetVal (*getLocalHostname)(uchar**);$/;"	v
getLogicalQueueSize	runtime/queue.c	/^getLogicalQueueSize(qqueue_t *pThis)$/;"	f	file:
getLumberjackLevel	plugins/ommongodb/ommongodb.c	/^getLumberjackLevel(short severity)$/;"	f	file:
getMSG	runtime/msg.c	/^uchar *getMSG(msg_t * const pM)$/;"	f
getMSGID	runtime/msg.c	/^static inline char *getMSGID(msg_t * const pM)$/;"	f	file:
getMSGLen	runtime/msg.c	/^int getMSGLen(msg_t * const pM)$/;"	f
getMsgs	plugins/imsolaris/imsolaris.c	/^getMsgs(thrdInfo_t *pThrd, int timeout)$/;"	f	file:
getNOW	runtime/msg.c	/^static uchar *getNOW(eNOWType eNow, struct syslogTime *t)$/;"	f	file:
getNextDeqID	runtime/queue.c	/^static inline qDeqID getNextDeqID(qqueue_t *pQueue)$/;"	f	file:
getNumberDigits	runtime/srutils.c	/^int getNumberDigits(long lNum)$/;"	f
getOption_DisallowWarning	runtime/glbl.c	/^getOption_DisallowWarning(void)$/;"	f	file:
getOrdinal	runtime/datetime.c	/^int getOrdinal(struct syslogTime *ts)$/;"	f
getPRI	runtime/msg.c	/^getPRI(msg_t * const pM)$/;"	f
getPRIi	runtime/msg.c	/^static int getPRIi(msg_t * const pM)$/;"	f	file:
getPROCID	runtime/msg.c	/^char *getPROCID(msg_t * const pM, sbool bLockMutex)$/;"	f
getParseHOSTNAMEandTAG	runtime/glbl.c	/^getParseHOSTNAMEandTAG(void)$/;"	f	file:
getParseSuccess	runtime/msg.c	/^static inline char *getParseSuccess(msg_t * const pM)$/;"	f	file:
getPartition	plugins/omkafka/omkafka.c	/^getPartition(instanceData *const __restrict__ pData)$/;"	f	file:
getPeerNames	plugins/imptcp/imptcp.c	/^getPeerNames(prop_t **peerName, prop_t **peerIP, struct sockaddr *pAddr)$/;"	f	file:
getPhysicalQueueSize	runtime/queue.c	/^getPhysicalQueueSize(qqueue_t *pThis)$/;"	f	file:
getProgramName	runtime/msg.c	/^uchar *getProgramName(msg_t * const pM, sbool bLockMutex)$/;"	f
getProtocolVersionString	runtime/msg.c	/^char *getProtocolVersionString(msg_t * const pM)$/;"	f
getQueueTypeName	runtime/queue.c	/^getQueueTypeName(queueType_t t)$/;"	f	file:
getRandomKey	tools/rscryutil.c	/^getRandomKey(void)$/;"	f	file:
getRawMsg	runtime/msg.c	/^getRawMsg(msg_t * const pM, uchar **pBuf, int *piLen)$/;"	f
getRawMsgAfterPRI	runtime/msg.c	/^getRawMsgAfterPRI(msg_t * const pM, uchar **pBuf, int *piLen)$/;"	f
getRcvChar	plugins/ommail/ommail.c	/^getRcvChar(wrkrInstanceData_t *pWrkrData, char *pC)$/;"	f	file:
getRcvFrom	runtime/msg.c	/^uchar *getRcvFrom(msg_t * const pM)$/;"	f
getRcvFromIP	runtime/msg.c	/^getRcvFromIP(msg_t * const pM)$/;"	f	file:
getRelpPt	plugins/omrelp/omrelp.c	/^static uchar *getRelpPt(instanceData *pData)$/;"	f	file:
getReturnCode	action.c	/^static rsRetVal getReturnCode(action_t * const pThis, wti_t * const pWti)$/;"	f	file:
getSDID	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^getSDID(uchar *sdbuf, int sdlen, int *rootIdx, uchar *sdid)$/;"	f	file:
getSection	plugins/omelasticsearch/omelasticsearch.c	/^getSection(const char* bulkRequest,char **bulkRequestNextSectionStart )$/;"	f	file:
getSeverity	runtime/msg.c	/^static inline char *getSeverity(msg_t * const pM)$/;"	f	file:
getSeverityStr	runtime/msg.c	/^static inline char *getSeverityStr(msg_t * const pM)$/;"	f	file:
getSingleRequest	plugins/omelasticsearch/omelasticsearch.c	/^getSingleRequest(const char* bulkRequest, char** singleRequest ,char **lastLocation)$/;"	f	file:
getSocketAction	contrib/imzmq3/imzmq3.c	/^static int getSocketAction(char* name) {$/;"	f	file:
getSocketAction	contrib/omzmq3/omzmq3.c	/^static int getSocketAction(char* name) {$/;"	f	file:
getSocketType	contrib/imzmq3/imzmq3.c	/^static int getSocketType(char* name) {$/;"	f	file:
getSocketType	contrib/omzmq3/omzmq3.c	/^int getSocketType(char* name) {$/;"	f
getStateFileName	plugins/imfile/imfile.c	/^getStateFileName(lstn_t *const __restrict__ pLstn,$/;"	f	file:
getStatsLine	runtime/statsobj.c	/^getStatsLine(statsobj_t *pThis, cstr_t **ppcstr, int8_t bResetCtrs)$/;"	f	file:
getStatsLineCEE	runtime/statsobj.c	/^getStatsLineCEE(statsobj_t *pThis, cstr_t **ppcstr, const statsFmtType_t fmt, const int8_t bResetCtrs)$/;"	f	file:
getSubString	runtime/srutils.c	/^int getSubString(uchar **ppSrc,  char *pDst, size_t DstSize, char cSep)$/;"	f
getSubstring	plugins/mmsnmptrapd/mmsnmptrapd.c	/^getSubstring(uchar **psrc, uchar delim, uchar *dst, int lenDst)$/;"	f	file:
getSyncMethName	tools/syncdemo.c	/^getSyncMethName(syncType_t st)$/;"	f	file:
getTAG	runtime/msg.c	/^getTAG(msg_t * const pM, uchar **ppBuf, int *piLen)$/;"	f
getTagComponent	plugins/mmsnmptrapd/mmsnmptrapd.c	/^getTagComponent(uchar *tag, uchar *dst, int *lenDst)$/;"	f	file:
getTime	runtime/datetime.c	/^getTime(time_t *ttSeconds)$/;"	f	file:
getTimeGenerated	runtime/msg.c	/^static char *getTimeGenerated(msg_t * const pM, enum tplFormatTypes eFmt)$/;"	f	file:
getTimeReported	runtime/msg.c	/^getTimeReported(msg_t * const pM, enum tplFormatTypes eFmt)$/;"	f
getTrustedExe	plugins/imuxsock/imuxsock.c	/^getTrustedExe(struct ucred *cred, uchar *buf, size_t lenBuf, int* lenProp)$/;"	f	file:
getTrustedProp	plugins/imuxsock/imuxsock.c	/^getTrustedProp(struct ucred *cred, char *propName, uchar *buf, size_t lenBuf, int *lenProp)$/;"	f	file:
getUUID	runtime/msg.c	/^void getUUID(msg_t * const pM, uchar **pBuf, int *piLen)$/;"	f
getWeek	runtime/datetime.c	/^int getWeek(struct syslogTime *ts)$/;"	f
getWeekdayNbr	runtime/datetime.c	/^int getWeekdayNbr(struct syslogTime *ts)$/;"	f
getWord	runtime/cfsysline.c	/^getWord(uchar **pp, cstr_t **ppStrB)$/;"	f	file:
get_Field	outchannel.c	/^static rsRetVal get_Field(uchar **pp, uchar **pField)$/;"	f	file:
get_data	tools/logctl.c	/^struct ofields* get_data(struct results *res)$/;"	f
get_off_t	outchannel.c	/^static int get_off_t(uchar **pp, off_t *pOff_t)$/;"	f	file:
get_restOfLine	outchannel.c	/^static inline rsRetVal get_restOfLine(uchar **pp, uchar **pBuf)$/;"	f	file:
getallifaddrs	compat/getifaddrs.c	/^getallifaddrs(sa_family_t af, struct ifaddrs **ifap, int64_t flags)$/;"	f
getallifs	compat/getifaddrs.c	/^getallifs(int s, sa_family_t af, struct lifreq **lifr, int *numifs,$/;"	f
getifaddrs	compat/getifaddrs.c	/^getifaddrs(struct ifaddrs **ifap)$/;"	f
getline	tests/getline.c	/^ssize_t getline(char **lineptr, size_t *n, FILE *fp)$/;"	f
getline_abort	tests/nettester.c	/^getline_abort(char **lineptr, size_t *const n, FILE *stream)$/;"	f	file:
getnum	plugins/mmanon/mmanon.c	/^getnum(uchar *msg, int lenMsg, int *idx)$/;"	f	file:
getoptions	tools/logctl.c	/^void getoptions(int argc, char *argv[], struct queryopt *opt)$/;"	f
gettid	tools/syncdemo.c	/^gettid()$/;"	f	file:
getutent	tools/omusrmsg.c	163;"	d	file:
ght	contrib/mmsequence/mmsequence.c	/^static struct hashtable *ght;$/;"	v	typeref:struct:hashtable	file:
ght_mutex	contrib/mmsequence/mmsequence.c	/^static pthread_mutex_t ght_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
gid	plugins/imuxsock/imuxsock.c	/^struct ucred { int pid; uid_t uid; gid_t gid; };$/;"	m	struct:ucred	file:
gidDropPriv	runtime/rsconf.h	/^	int gidDropPriv;	\/* group-id to which priveleges should be dropped to *\/$/;"	m	struct:globals_s
glbl	runtime/glbl.h	/^PROTOTYPEObj(glbl);$/;"	v
glblCURR_IF_VERSION	runtime/glbl.h	105;"	d
glblDestructMainqCnfObj	runtime/glbl.c	/^glblDestructMainqCnfObj()$/;"	f
glblDoneLoadCnf	runtime/glbl.c	/^glblDoneLoadCnf(void)$/;"	f
glblErrLogger	runtime/rsyslog.c	/^void (*glblErrLogger)(const int, const int, const uchar*) = dfltErrLogger; \/* the error logger to use by the errmsg module *\/$/;"	v
glblFindTimezoneInfo	runtime/glbl.c	/^glblFindTimezoneInfo(char *id)$/;"	f
glblGetIOBufSize	runtime/glbl.h	40;"	d
glblGetOurPid	runtime/glbl.h	/^static inline pid_t glblGetOurPid(void) { return glbl_ourpid; }$/;"	f
glblGetWorkDirRaw	runtime/glbl.c	/^glblGetWorkDirRaw(void)$/;"	f
glblModPath	runtime/rsyslog.c	/^uchar *glblModPath; \/* module load path *\/$/;"	v
glblPrepCnf	runtime/glbl.c	/^glblPrepCnf(void)$/;"	f
glblProcessCnf	runtime/glbl.c	/^glblProcessCnf(struct cnfobj *o)$/;"	f
glblProcessMainQCnf	runtime/glbl.c	/^glblProcessMainQCnf(struct cnfobj *o)$/;"	f
glblProcessTimezone	runtime/glbl.c	/^glblProcessTimezone(struct cnfobj *o)$/;"	f
glblSetOurPid	runtime/glbl.h	/^static inline void glblSetOurPid(pid_t pid) { glbl_ourpid = pid; }$/;"	f
glblVars_lock	runtime/msg.c	/^static pthread_mutex_t glblVars_lock;$/;"	v	file:
glbl_ourpid	runtime/glbl.c	/^pid_t glbl_ourpid;$/;"	v
glbliActionResumeInterval	action.c	/^	int glbliActionResumeInterval;$/;"	m	struct:configSettings_s	file:
glbliActionResumeRetryCount	action.c	/^	int glbliActionResumeRetryCount;		\/* how often should suspended actions be retried? *\/$/;"	m	struct:configSettings_s	file:
global_int	tools/syncdemo.c	/^static int global_int = 0;	\/* our global counter *\/$/;"	v	file:
global_var_root	runtime/msg.c	/^struct json_object *global_var_root = NULL;$/;"	v	typeref:struct:json_object
globals	runtime/rsconf.h	/^	globals_t globals;$/;"	m	struct:rsconf_s
globals_s	runtime/rsconf.h	/^struct globals_s {$/;"	s
globals_t	runtime/typedefs.h	/^typedef struct globals_s globals_t;$/;"	t	typeref:struct:globals_s
goal	tools/syncdemo.c	/^static unsigned goal = 50000000; \/* 50 million *\/$/;"	v	file:
gss_base_service_name	plugins/omgssapi/omgssapi.c	/^	char *gss_base_service_name;$/;"	m	struct:configSettings_s	file:
gss_context	plugins/imgssapi/imgssapi.c	/^	gss_ctx_id_t gss_context;$/;"	m	struct:gss_sess_s	file:
gss_context	plugins/omgssapi/omgssapi.c	/^	gss_ctx_id_t gss_context;$/;"	m	struct:_instanceData	file:
gss_flags	plugins/imgssapi/imgssapi.c	/^	OM_uint32 gss_flags;$/;"	m	struct:gss_sess_s	file:
gss_flags	plugins/omgssapi/omgssapi.c	/^	OM_uint32 gss_flags;$/;"	m	struct:_instanceData	file:
gss_listen_service_name	plugins/imgssapi/imgssapi.c	/^static char *gss_listen_service_name = NULL;$/;"	v	file:
gss_mode	plugins/omgssapi/omgssapi.c	/^	gss_mode_t gss_mode;$/;"	m	struct:configSettings_s	file:
gss_mode_e	plugins/omgssapi/omgssapi.c	/^typedef enum gss_mode_e {$/;"	g	file:
gss_mode_t	plugins/omgssapi/omgssapi.c	/^} gss_mode_t;$/;"	t	typeref:enum:gss_mode_e	file:
gss_server_creds	plugins/imgssapi/imgssapi.c	/^static gss_cred_id_t gss_server_creds = GSS_C_NO_CREDENTIAL;$/;"	v	file:
gss_sess_s	plugins/imgssapi/imgssapi.c	/^typedef struct gss_sess_s {$/;"	s	file:
gss_sess_t	plugins/imgssapi/imgssapi.c	/^} gss_sess_t;$/;"	t	typeref:struct:gss_sess_s	file:
gsssrv_s	plugins/imgssapi/imgssapi.c	/^typedef struct gsssrv_s {$/;"	s	file:
gsssrv_t	plugins/imgssapi/imgssapi.c	/^} gsssrv_t;$/;"	t	typeref:struct:gsssrv_s	file:
gssutil	runtime/gss-misc.h	/^PROTOTYPEObj(gssutil);$/;"	v
gssutilCURR_IF_VERSION	runtime/gss-misc.h	35;"	d
gtctx	runtime/librsgt.h	/^typedef struct gtctx_s *gtctx;$/;"	t	typeref:struct:gtctx_s
gtctx_s	runtime/librsgt.h	/^struct gtctx_s {$/;"	s
gterrctx_s	runtime/librsgt.h	/^struct gterrctx_s {$/;"	s
gterrctx_t	runtime/librsgt.h	/^typedef struct gterrctx_s gterrctx_t;$/;"	t	typeref:struct:gterrctx_s
gtfile	runtime/librsgt.h	/^typedef struct gtfile_s *gtfile;$/;"	t	typeref:struct:gtfile_s
gtfile_s	runtime/librsgt.h	/^struct gtfile_s {$/;"	s
gtlsAddOurCert	runtime/nsd_gtls.c	/^gtlsAddOurCert(void)$/;"	f	file:
gtlsChkOnePeerName	runtime/nsd_gtls.c	/^gtlsChkOnePeerName(nsd_gtls_t *pThis, uchar *pszPeerID, int *pbFoundPositiveMatch)$/;"	f	file:
gtlsChkPeerAuth	runtime/nsd_gtls.c	/^gtlsChkPeerAuth(nsd_gtls_t *pThis)$/;"	f
gtlsChkPeerCertValidity	runtime/nsd_gtls.c	/^gtlsChkPeerCertValidity(nsd_gtls_t *pThis)$/;"	f	file:
gtlsChkPeerFingerprint	runtime/nsd_gtls.c	/^gtlsChkPeerFingerprint(nsd_gtls_t *pThis, gnutls_x509_crt_t *pCert)$/;"	f	file:
gtlsChkPeerID	runtime/nsd_gtls.c	/^gtlsChkPeerID(nsd_gtls_t *pThis)$/;"	f	file:
gtlsChkPeerName	runtime/nsd_gtls.c	/^gtlsChkPeerName(nsd_gtls_t *pThis, gnutls_x509_crt_t *pCert)$/;"	f	file:
gtlsClientCertCallback	runtime/nsd_gtls.c	/^gtlsClientCertCallback(gnutls_session_t session,$/;"	f	file:
gtlsEndSess	runtime/nsd_gtls.c	/^gtlsEndSess(nsd_gtls_t *pThis)$/;"	f	file:
gtlsGetCN	runtime/nsd_gtls.c	/^gtlsGetCN(gnutls_x509_crt_t *pCert, cstr_t **ppstrCN)$/;"	f	file:
gtlsGetCertInfo	runtime/nsd_gtls.c	/^gtlsGetCertInfo(nsd_gtls_t *pThis, cstr_t **ppStr)$/;"	f	file:
gtlsGlblExit	runtime/nsd_gtls.c	/^gtlsGlblExit(void)$/;"	f	file:
gtlsGlblInit	runtime/nsd_gtls.c	/^gtlsGlblInit(void)$/;"	f	file:
gtlsGlblInitLstn	runtime/nsd_gtls.c	/^gtlsGlblInitLstn(void)$/;"	f	file:
gtlsHasRcvInBuffer	runtime/nsd_gtls.h	/^static inline rsRetVal gtlsHasRcvInBuffer(nsd_gtls_t *pThis) {$/;"	f
gtlsInitSession	runtime/nsd_gtls.c	/^gtlsInitSession(nsd_gtls_t *pThis)$/;"	f	file:
gtlsLoadOurCertKey	runtime/nsd_gtls.c	/^gtlsLoadOurCertKey(nsd_gtls_t *pThis)$/;"	f	file:
gtlsRecordRecv	runtime/nsd_gtls.c	/^gtlsRecordRecv(nsd_gtls_t *pThis)$/;"	f
gtlsRtryCall_t	runtime/nsd_gtls.h	/^} gtlsRtryCall_t;		\/**< IDs of calls that needs to be retried *\/$/;"	t	typeref:enum:__anon42
gtlsRtry_None	runtime/nsd_gtls.h	/^	gtlsRtry_None = 0,	\/**< no call needs to be retried *\/$/;"	e	enum:__anon42
gtlsRtry_handshake	runtime/nsd_gtls.h	/^	gtlsRtry_handshake = 1,$/;"	e	enum:__anon42
gtlsRtry_recv	runtime/nsd_gtls.h	/^	gtlsRtry_recv = 2$/;"	e	enum:__anon42
gtlsSetTransportPtr	runtime/nsd_gtls.c	/^gtlsSetTransportPtr(nsd_gtls_t *pThis, int sock)$/;"	f	file:
gtlsStrerror	runtime/nsd_gtls.c	/^uchar *gtlsStrerror(int error)$/;"	f
gtstate	runtime/librsgt.h	/^	int gtstate;	\/* status from last relevant GT.*() function call *\/$/;"	m	struct:gterrctx_s
h	runtime/hashtable_itr.h	/^    struct hashtable *h;$/;"	m	struct:hashtable_itr	typeref:struct:hashtable_itr::hashtable
h	runtime/hashtable_private.h	/^    unsigned int h;$/;"	m	struct:entry
hadErrMsgs	runtime/errmsg.c	/^hadErrMsgs(void)$/;"	f
handleActionExecResult	action.c	/^handleActionExecResult(action_t *__restrict__ const pThis,$/;"	f	file:
handlePoll	contrib/imczmq/imczmq.c	/^static int handlePoll(zloop_t __attribute__((unused)) *loop, zmq_pollitem_t *poller, void* args) {$/;"	f	file:
handlePoll	contrib/imzmq3/imzmq3.c	/^static int handlePoll(zloop_t __attribute__((unused)) * loop, zmq_pollitem_t *poller, void* pd) {$/;"	f	file:
hasFormat	template.c	/^static int hasFormat(struct templateEntry *pTpe) {$/;"	f	file:
hasWildcard	plugins/imfile/imfile.c	/^	sbool hasWildcard;$/;"	m	struct:lstn_s	file:
has_fields	template.h	/^			unsigned has_fields; \/* support for field-counting: field to extract *\/$/;"	m	struct:templateEntry::__anon69::__anon71
has_regex	template.h	/^			short has_regex;$/;"	m	struct:templateEntry::__anon69::__anon71
hash	runtime/hashtable.c	/^hash(struct hashtable *h, void *k)$/;"	f
hashAlg	runtime/librsgt.h	/^	enum GTHashAlgorithm hashAlg;$/;"	m	struct:gtctx_s	typeref:enum:gtctx_s::GTHashAlgorithm
hashAlg	runtime/librsgt.h	/^	enum GTHashAlgorithm hashAlg;$/;"	m	struct:gtfile_s	typeref:enum:gtfile_s::GTHashAlgorithm
hashAlg	runtime/librsksi.h	/^	KSI_HashAlgorithm hashAlg;$/;"	m	struct:ksifile_s
hashAlg	runtime/librsksi.h	/^	KSI_HashAlgorithm hashAlg;$/;"	m	struct:rsksictx_s
hashAlgName	runtime/librsgt.h	/^hashAlgName(uint8_t hashID)$/;"	f
hashAlgNameKSI	runtime/librsksi.h	/^hashAlgNameKSI(uint8_t hashID)$/;"	f
hashID	runtime/librsgt.h	/^	uint8_t hashID;$/;"	m	struct:rsgtstatefile
hashID	runtime/librsgt_common.h	/^	uint8_t hashID;$/;"	m	struct:imprint_s
hashID	runtime/librsgt_common.h	/^ 	uint8_t hashID;$/;"	m	struct:block_hdr_s
hashID	runtime/librsksi.h	/^	uint8_t hashID;$/;"	m	struct:rsksistatefile
hashID2Alg	runtime/librsgt.h	/^hashID2Alg(uint8_t hashID)$/;"	f
hashID2AlgKSI	runtime/librsksi.h	/^hashID2AlgKSI(uint8_t hashID)$/;"	f
hashIdentifier	runtime/librsgt.h	/^hashIdentifier(enum GTHashAlgorithm hashID)$/;"	f
hashIdentifierKSI	runtime/librsksi.h	/^hashIdentifierKSI(KSI_HashAlgorithm hashID)$/;"	f
hashMsg	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^hashMsg(instanceData *pData, msg_t *pMsg)$/;"	f	file:
hashOutputLengthOctets	runtime/librsgt.h	/^hashOutputLengthOctets(uint8_t hashID)$/;"	f
hashOutputLengthOctetsKSI	runtime/librsksi.h	/^hashOutputLengthOctetsKSI(uint8_t hashID)$/;"	f
hash_from_key_fn	contrib/mmcount/mmcount.c	/^hash_from_key_fn(void *k)$/;"	f	file:
hash_from_key_fn	plugins/imuxsock/imuxsock.c	/^hash_from_key_fn(void *k)$/;"	f	file:
hash_from_key_fn	runtime/dnscache.c	/^hash_from_key_fn(void *k) $/;"	f
hash_from_string	runtime/hashtable.c	/^hash_from_string(void *k) $/;"	f
hash_m	runtime/librsgt.c	/^hash_m(gtfile gf, GTDataHash **m)$/;"	f
hash_m_ksi	runtime/librsksi.c	/^hash_m_ksi(ksifile ksi, KSI_DataHash **m)$/;"	f
hash_node	runtime/librsgt.c	/^hash_node(gtfile gf, GTDataHash **node, GTDataHash *m, GTDataHash *rec,$/;"	f
hash_node_ksi	runtime/librsksi.c	/^hash_node_ksi(ksifile ksi, KSI_DataHash **node, KSI_DataHash *m, KSI_DataHash *rec,$/;"	f
hash_r	runtime/librsgt.c	/^hash_r(gtfile gf, GTDataHash **r, const uchar *rec, const size_t len)$/;"	f
hash_r_ksi	runtime/librsksi.c	/^hash_r_ksi(ksifile ksi, KSI_DataHash **r, const uchar *rec, const size_t len)$/;"	f
hashfn	runtime/hashtable_private.h	/^    unsigned int (*hashfn) (void *k);$/;"	m	struct:hashtable
hashfromkey	runtime/hashtable/tester.c	/^hashfromkey(void *ky)$/;"	f	file:
hashtable	runtime/hashtable_private.h	/^struct hashtable {$/;"	s
hashtable_change	runtime/hashtable/hashtable_utility.c	/^hashtable_change(struct hashtable *h, void *k, void *v)$/;"	f
hashtable_count	runtime/hashtable.c	/^hashtable_count(struct hashtable *h)$/;"	f
hashtable_destroy	runtime/hashtable.c	/^hashtable_destroy(struct hashtable *h, int free_values)$/;"	f
hashtable_expand	runtime/hashtable.c	/^hashtable_expand(struct hashtable *h)$/;"	f	file:
hashtable_insert	runtime/hashtable.c	/^hashtable_insert(struct hashtable *h, void *k, void *v)$/;"	f
hashtable_iterator	runtime/hashtable_itr.c	/^hashtable_iterator(struct hashtable *h)$/;"	f
hashtable_iterator_advance	runtime/hashtable_itr.c	/^hashtable_iterator_advance(struct hashtable_itr *itr)$/;"	f
hashtable_iterator_key	runtime/hashtable_itr.h	/^hashtable_iterator_key(struct hashtable_itr *i)$/;"	f
hashtable_iterator_remove	runtime/hashtable_itr.c	/^hashtable_iterator_remove(struct hashtable_itr *itr)$/;"	f
hashtable_iterator_search	runtime/hashtable_itr.c	/^hashtable_iterator_search(struct hashtable_itr *itr,$/;"	f
hashtable_iterator_value	runtime/hashtable_itr.h	/^hashtable_iterator_value(struct hashtable_itr *i)$/;"	f
hashtable_itr	runtime/hashtable_itr.h	/^struct hashtable_itr$/;"	s
hashtable_remove	runtime/hashtable.c	/^hashtable_remove(struct hashtable *h, void *k)$/;"	f
hashtable_search	runtime/hashtable.c	/^hashtable_search(struct hashtable *h, void *k)$/;"	f
hdfsHost	plugins/omhdfs/omhdfs.c	/^	const char *hdfsHost;$/;"	m	struct:__anon19	file:
hdfsHost	plugins/omhdfs/omhdfs.c	/^	uchar *hdfsHost;	$/;"	m	struct:configSettings_s	file:
hdfsPort	plugins/omhdfs/omhdfs.c	/^	int hdfsPort;$/;"	m	struct:configSettings_s	file:
hdfsPort	plugins/omhdfs/omhdfs.c	/^	tPort hdfsPort;$/;"	m	struct:__anon19	file:
hdlr_enable	tools/rsyslogd.c	/^hdlr_enable(int signal, void (*hdlr)())$/;"	f	file:
hdlr_sigchld	tools/rsyslogd.c	/^hdlr_sigchld()$/;"	f	file:
hdlr_sighup	tools/rsyslogd.c	/^hdlr_sighup()$/;"	f	file:
hdlr_sigttin	tools/rsyslogd.c	/^hdlr_sigttin()$/;"	f	file:
hdr	runtime/librsgt.h	/^	char hdr[8];	\/* must be "GTSTAT10" *\/$/;"	m	struct:rsgtstatefile
hdr	runtime/librsgt_common.h	/^	uint8_t hdr[4]; \/* the raw header (as persisted to file) *\/$/;"	m	struct:tlvrecord_s
hdr	runtime/librsksi.h	/^	char hdr[9];	\/* must be "KSISTAT10" *\/$/;"	m	struct:rsksistatefile
head	runtime/queue.h	/^			long deqhead, head, tail;$/;"	m	struct:queue_s::__anon48::__anon49
hexDigitVal	grammar/rainerscript.c	/^hexDigitVal(char c)$/;"	f	file:
hexdigit	runtime/msg.c	/^static char hexdigit[16] =$/;"	v	file:
hexdigit	runtime/parser.c	/^static char hexdigit[16] =$/;"	v	file:
hexify	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^hexify(uchar *bin, int len, uchar *print)$/;"	f	file:
hints	plugins/omgssapi/omgssapi.c	/^        struct addrinfo hints, *res;$/;"	v	typeref:struct:addrinfo
hmysql	plugins/ommysql/ommysql.c	/^	MYSQL	*hmysql;			\/* handle to MySQL *\/$/;"	m	struct:wrkrInstanceData	file:
host	contrib/omhttpfs/omhttpfs.c	/^    uchar* host;$/;"	m	struct:_instanceData	file:
host	contrib/omrabbitmq/omrabbitmq.c	/^	uchar *host;$/;"	m	struct:_instanceData	file:
host	plugins/omlibdbi/omlibdbi.c	/^	uchar *host;		\/* host to connect to *\/$/;"	m	struct:_instanceData	file:
host	plugins/omlibdbi/omlibdbi.c	/^	uchar *host;		\/* host to connect to *\/$/;"	m	struct:configSettings_s	file:
host	plugins/omudpspoof/omudpspoof.c	/^	uchar	*host;$/;"	m	struct:_instanceData	file:
hostName	plugins/imuxsock/imuxsock.c	/^	prop_t *hostName;	\/* host-name override - if set, use this instead of actual name *\/$/;"	m	struct:lstn_s	file:
hour	runtime/syslogd-types.h	/^	intTiny hour; \/* 24 hour clock *\/$/;"	m	struct:syslogTime
ht	contrib/mmcount/mmcount.c	/^	struct hashtable *ht;$/;"	m	struct:_instanceData	typeref:struct:_instanceData::hashtable	file:
ht	plugins/imuxsock/imuxsock.c	/^	struct hashtable *ht;	\/* our hashtable for rate-limiting *\/$/;"	m	struct:lstn_s	typeref:struct:lstn_s::hashtable	file:
ht	runtime/dnscache.c	/^	struct hashtable *ht;$/;"	m	struct:dnscache_s	typeref:struct:dnscache_s::hashtable	file:
httpfs_append_file	contrib/omhttpfs/omhttpfs.c	/^httpfs_append_file(wrkrInstanceData_t *pWrkrData, uchar* buf)$/;"	f	file:
httpfs_build_url	contrib/omhttpfs/omhttpfs.c	/^httpfs_build_url(wrkrInstanceData_t *pWrkrData, char* op, es_str_t** url_buf)$/;"	f	file:
httpfs_create_file	contrib/omhttpfs/omhttpfs.c	/^httpfs_create_file(wrkrInstanceData_t *pWrkrData, uchar* buf)$/;"	f	file:
httpfs_curl_add_header	contrib/omhttpfs/omhttpfs.c	/^httpfs_curl_add_header(struct curl_slist* headers, int hdr_count, ...)$/;"	f
httpfs_curl_result_callback	contrib/omhttpfs/omhttpfs.c	/^httpfs_curl_result_callback(void *contents, size_t size, size_t nmemb, void *userp)$/;"	f	file:
httpfs_curl_set_get	contrib/omhttpfs/omhttpfs.c	/^void httpfs_curl_set_get(CURL* curl)$/;"	f
httpfs_curl_set_post	contrib/omhttpfs/omhttpfs.c	/^void httpfs_curl_set_post(CURL* curl)$/;"	f
httpfs_curl_set_put	contrib/omhttpfs/omhttpfs.c	/^void httpfs_curl_set_put(CURL* curl)$/;"	f
httpfs_init_curl	contrib/omhttpfs/omhttpfs.c	/^httpfs_init_curl(wrkrInstanceData_t *pWrkrData, instanceData *pData)$/;"	f	file:
httpfs_json_remote_exception	contrib/omhttpfs/omhttpfs.c	/^} httpfs_json_remote_exception;$/;"	t	typeref:struct:_HTTPFS_JSON_REMOTE_EXCEPTION	file:
httpfs_log	contrib/omhttpfs/omhttpfs.c	/^httpfs_log(wrkrInstanceData_t *pWrkrData, uchar* buf)$/;"	f	file:
httpfs_parse_exception	contrib/omhttpfs/omhttpfs.c	/^httpfs_parse_exception(char* buf, int length, httpfs_json_remote_exception* jre)$/;"	f	file:
httpfs_permission_to_string	contrib/omhttpfs/omhttpfs.c	/^int httpfs_permission_to_string(int permission, char* perm_string)$/;"	f
httpfs_set_url	contrib/omhttpfs/omhttpfs.c	/^void httpfs_set_url(wrkrInstanceData_t *pWrkrData, char* op)$/;"	f
httplib	plugins/external/solr/rsyslog_solr.py	/^import httplib$/;"	i
https	contrib/omhttpfs/omhttpfs.c	/^    sbool https;$/;"	m	struct:_instanceData	file:
i	contrib/imczmq/imczmq.c	/^	int i;$/;"	v
i	contrib/imzmq3/imzmq3.c	/^    int i;$/;"	v
i	contrib/mmcount/mmcount.c	/^	int i;$/;"	v
i	contrib/mmgrok/mmgrok.c	/^	int i;$/;"	v
i	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	int i;$/;"	v
i	contrib/mmsequence/mmsequence.c	/^	int i;$/;"	v
i	contrib/omczmq/omczmq.c	/^	int i;$/;"	v
i	contrib/omhiredis/omhiredis.c	/^	int i;$/;"	v
i	contrib/omhttpfs/omhttpfs.c	/^    int i;$/;"	v
i	contrib/omrabbitmq/omrabbitmq.c	/^	int i;$/;"	v
i	contrib/omzmq3/omzmq3.c	/^    int i;$/;"	v
i	plugins/imfile/imfile.c	/^	int i;$/;"	v
i	plugins/imjournal/imjournal.c	/^	int i;$/;"	v
i	plugins/imklog/imklog.c	/^	int i;$/;"	v
i	plugins/immark/immark.c	/^	int i;$/;"	v
i	plugins/impstats/impstats.c	/^	int i;$/;"	v
i	plugins/imptcp/imptcp.c	/^	int i;$/;"	v
i	plugins/imrelp/imrelp.c	/^	int i,j;$/;"	v
i	plugins/imrelp/imrelp.c	/^	int i;$/;"	v
i	plugins/imtcp/imtcp.c	/^	int i;$/;"	v
i	plugins/imudp/imudp.c	/^	int i;$/;"	v
i	plugins/imuxsock/imuxsock.c	/^	int i;$/;"	v
i	plugins/mmanon/mmanon.c	/^	int i;$/;"	v
i	plugins/mmaudit/mmaudit.c	/^	int i;$/;"	v
i	plugins/mmexternal/mmexternal.c	/^	int i;$/;"	v
i	plugins/mmfields/mmfields.c	/^	int i;$/;"	v
i	plugins/mmjsonparse/mmjsonparse.c	/^	int i;$/;"	v
i	plugins/mmnormalize/mmnormalize.c	/^	int i;$/;"	v
i	plugins/mmpstrucdata/mmpstrucdata.c	/^	int i;$/;"	v
i	plugins/mmutf8fix/mmutf8fix.c	/^	int i;$/;"	v
i	plugins/omelasticsearch/omelasticsearch.c	/^	int i;$/;"	v
i	plugins/omgssapi/omgssapi.c	/^	int i;$/;"	v
i	plugins/omkafka/omkafka.c	/^	int i;$/;"	v
i	plugins/omlibdbi/omlibdbi.c	/^	int i;$/;"	v
i	plugins/ommail/ommail.c	/^	int i, j;$/;"	v
i	plugins/ommongodb/ommongodb.c	/^	int i;$/;"	v
i	plugins/ommysql/ommysql.c	/^	int i;$/;"	v
i	plugins/omprog/omprog.c	/^	int i;$/;"	v
i	plugins/omrelp/omrelp.c	/^	int i,j;$/;"	v
i	plugins/omrelp/omrelp.c	/^	int i;$/;"	v
i	plugins/omsnmp/omsnmp.c	/^	int i;$/;"	v
i	plugins/omtesting/omtesting.c	/^	int i;$/;"	v
i	plugins/omudpspoof/omudpspoof.c	/^	int i;$/;"	v
i	plugins/omuxsock/omuxsock.c	/^	int i;$/;"	v
i	plugins/pmciscoios/pmciscoios.c	/^	int i;$/;"	v
i	tests/rscript.c	/^	size_t i = 0;$/;"	v
i	tools/omfile.c	/^	int i;$/;"	v
i	tools/omfile.c	/^	unsigned i;$/;"	v
i	tools/omfwd.c	/^	int i;$/;"	v
i	tools/omfwd.c	/^	unsigned i;$/;"	v
i	tools/ompipe.c	/^	int i;$/;"	v
i	tools/omusrmsg.c	/^	int i;$/;"	v
i	tools/omusrmsg.c	/^	register int i;$/;"	v
i	tools/pmrfc3164.c	/^	int i;	\/* general index for parsing *\/$/;"	v
i	tools/pmrfc3164.c	/^	int i;$/;"	v
i10pow	plugins/ommongodb/ommongodb.c	/^i10pow(int exp)$/;"	f	file:
iActExecEveryNthOccur	action.c	/^	int iActExecEveryNthOccur;			\/* execute action every n-th occurence (0,1=always) *\/$/;"	m	struct:configSettings_s	file:
iActExecEveryNthOccurTO	action.c	/^	time_t iActExecEveryNthOccurTO;			\/* timeout for n-occurence setting (in seconds, 0=never) *\/$/;"	m	struct:configSettings_s	file:
iActExecOnceInterval	action.c	/^	int iActExecOnceInterval;			\/* execute action once every nn seconds *\/$/;"	m	struct:configSettings_s	file:
iActExecOnceInterval	tests/runtime-dummy.c	/^int iActExecOnceInterval = 1;$/;"	v
iActionNbr	action.c	/^int iActionNbr = 0;$/;"	v
iActionNbr	action.h	/^	int	iActionNbr;	\/* this action's number (ID) *\/$/;"	m	struct:action_s
iActionQDiscardMark	action.c	/^	int iActionQDiscardMark;			\/* begin to discard messages *\/$/;"	m	struct:configSettings_s	file:
iActionQDiscardSeverity	action.c	/^	int iActionQDiscardSeverity;			\/* by default, discard nothing to prevent unintentional loss *\/$/;"	m	struct:configSettings_s	file:
iActionQHighWtrMark	action.c	/^	int iActionQHighWtrMark;			\/* high water mark for disk-assisted queues *\/$/;"	m	struct:configSettings_s	file:
iActionQLowWtrMark	action.c	/^	int iActionQLowWtrMark;				\/* low water mark for disk-assisted queues *\/$/;"	m	struct:configSettings_s	file:
iActionQPersistUpdCnt	action.c	/^	int iActionQPersistUpdCnt;			\/* persist queue info every n updates *\/$/;"	m	struct:configSettings_s	file:
iActionQWrkMinMsgs	action.c	/^	int iActionQWrkMinMsgs;				\/* minimum messages per worker needed to start a new one *\/$/;"	m	struct:configSettings_s	file:
iActionQtoActShutdown	action.c	/^	int iActionQtoActShutdown;			\/* action shutdown (in phase 2) *\/ $/;"	m	struct:configSettings_s	file:
iActionQtoEnq	action.c	/^	int iActionQtoEnq;				\/* timeout for queue enque *\/ $/;"	m	struct:configSettings_s	file:
iActionQtoQShutdown	action.c	/^	int iActionQtoQShutdown;			\/* queue shutdown *\/ $/;"	m	struct:configSettings_s	file:
iActionQtoWrkShutdown	action.c	/^	int iActionQtoWrkShutdown;			\/* timeout for worker thread shutdown *\/$/;"	m	struct:configSettings_s	file:
iActionQueMaxDiskSpace	action.c	/^	int64 iActionQueMaxDiskSpace;			\/* max disk space allocated 0 ==> unlimited *\/$/;"	m	struct:configSettings_s	file:
iActionQueMaxFileSize	action.c	/^	int64 iActionQueMaxFileSize;$/;"	m	struct:configSettings_s	file:
iActionQueueDeqBatchSize	action.c	/^	int iActionQueueDeqBatchSize;			\/* batch size for action queues *\/$/;"	m	struct:configSettings_s	file:
iActionQueueDeqSlowdown	action.c	/^	int iActionQueueDeqSlowdown;			\/* dequeue slowdown (simple rate limiting) *\/$/;"	m	struct:configSettings_s	file:
iActionQueueDeqtWinFromHr	action.c	/^	int iActionQueueDeqtWinFromHr;			\/* hour begin of time frame when queue is to be dequeued *\/$/;"	m	struct:configSettings_s	file:
iActionQueueDeqtWinToHr	action.c	/^	int iActionQueueDeqtWinToHr;			\/* hour begin of time frame when queue is to be dequeued *\/$/;"	m	struct:configSettings_s	file:
iActionQueueNumWorkers	action.c	/^	int iActionQueueNumWorkers;			\/* number of worker threads for the mm queue above *\/$/;"	m	struct:configSettings_s	file:
iActionQueueSize	action.c	/^	int iActionQueueSize;				\/* size of the main message queue above *\/$/;"	m	struct:configSettings_s	file:
iAddtlFrameDelim	plugins/imptcp/imptcp.c	/^	int iAddtlFrameDelim;		\/* addtl frame delimiter, e.g. for netscreen, default none *\/$/;"	m	struct:configSettings_s	file:
iAddtlFrameDelim	plugins/imptcp/imptcp.c	/^	int iAddtlFrameDelim;$/;"	m	struct:instanceConf_s	file:
iAddtlFrameDelim	plugins/imptcp/imptcp.c	/^	int iAddtlFrameDelim;$/;"	m	struct:ptcpsrv_s	file:
iAddtlFrameDelim	plugins/imtcp/imtcp.c	/^	int iAddtlFrameDelim; \/* addtl frame delimiter, e.g. for netscreen, default none *\/$/;"	m	struct:modConfData_s	file:
iAddtlFrameDelim	plugins/imtcp/imtcp.c	/^	int iAddtlFrameDelim;$/;"	m	struct:configSettings_s	file:
iBuf	plugins/omstdout/omstdout.c	/^	int iBuf;$/;"	v
iBuf	tools/smfile.c	/^	register int iBuf;$/;"	v
iBuf	tools/smfwd.c	/^	register int iBuf;$/;"	v
iBuf	tools/smtradfile.c	/^	register int iBuf;$/;"	v
iBuf	tools/smtradfwd.c	/^	register int iBuf;$/;"	v
iBufPtr	runtime/stream.h	/^	size_t iBufPtr;	\/* pointer into current buffer *\/$/;"	m	struct:strm_s
iBufPtrMax	runtime/stream.h	/^	size_t iBufPtrMax;	\/* current max Ptr in Buffer (if partial read!) *\/$/;"	m	struct:strm_s
iBufSize	runtime/stringbuf.h	/^	size_t iBufSize;	\/**< current maximum size of the string buffer *\/$/;"	m	struct:cstr_s
iBufferRcvReady	runtime/nsdsel_gtls.h	/^	int iBufferRcvReady;	\/* number of descriptiors where no RD select is needed because we have data in buf *\/$/;"	m	struct:nsdsel_gtls_s
iCloseTimeout	tools/omfile.c	/^	short	iCloseTimeout;		\/* after how many *minutes* shall the file be closed if inactive? *\/$/;"	m	struct:_instanceData	file:
iCnt	plugins/mmexternal/mmexternal.c	/^	es_size_t iCnt;$/;"	v
iCnt	plugins/omprog/omprog.c	/^	es_size_t iCnt;$/;"	v
iCnt	runtime/stream.h	/^	short iCnt;	\/* current nbr of elements in buffer *\/$/;"	m	struct:strm_s
iConfigVerify	tools/rsyslogd.c	/^int iConfigVerify = 0;	\/* is this just a config verify run? *\/$/;"	v
iCurNumWrkThrd	runtime/queue.h	/^	int 	iCurNumWrkThrd;\/* current number of active worker threads *\/$/;"	m	struct:queue_s
iCurNumWrkThrd	runtime/wtp.h	/^	int 	iCurNumWrkThrd;\/* current number of active worker threads *\/$/;"	m	struct:wtp_s
iCurrCacheSize	plugins/omkafka/omkafka.c	/^	int iCurrCacheSize;$/;"	m	struct:_instanceData	file:
iCurrCacheSize	tools/omfile.c	/^	int	iCurrCacheSize;	\/* currently cache size (1-based) *\/$/;"	m	struct:_instanceData	file:
iCurrCallNbr	plugins/omtesting/omtesting.c	/^	int 	iCurrCallNbr;$/;"	m	struct:_instanceData	file:
iCurrElt	plugins/omkafka/omkafka.c	/^	int iCurrElt;$/;"	m	struct:_instanceData	file:
iCurrElt	tools/omfile.c	/^	int	iCurrElt;	\/* currently active cache element (-1 = none) *\/$/;"	m	struct:_instanceData	file:
iCurrFNum	runtime/stream.h	/^	int iCurrFNum;\/* current file number (NOT descriptor, but the number in the file name!) *\/$/;"	m	struct:strm_s
iCurrOffs	runtime/stream.h	/^	int64 iCurrOffs;\/* current offset *\/$/;"	m	struct:strm_s
iCurrPos	parse.h	/^	int iCurrPos;			\/**< current parsing position (char offset) *\/$/;"	m	struct:rsParsObject
iCurrRetries	plugins/omtesting/omtesting.c	/^	int	iCurrRetries;$/;"	m	struct:_instanceData	file:
iCurrentVal	plugins/impstats/statslog-graph.py	/^						iCurrentVal = int(aLineData[iFieldNum])$/;"	v
iDefPFFamily	runtime/glbl.c	/^static int iDefPFFamily = PF_UNSPEC;     \/* protocol family (IPv4, IPv6 or both) *\/$/;"	v	file:
iDeq	runtime/stream.h	/^	unsigned short iDeq;	\/* this MUST be unsigned as we use module arithmetic (else invalid indexing happens!) *\/$/;"	m	struct:strm_s
iDeqBatchSize	runtime/queue.h	/^	int	iDeqBatchSize;	\/* max number of elements that shall be dequeued at once *\/$/;"	m	struct:queue_s
iDeqSlowdown	runtime/queue.h	/^	int	iDeqSlowdown; \/* slow down dequeue by specified nbr of microseconds *\/$/;"	m	struct:queue_s
iDeqtWinFromHr	runtime/queue.h	/^	int iDeqtWinFromHr;	\/* begin of dequeue time window (hour only) *\/$/;"	m	struct:queue_s
iDeqtWinToHr	runtime/queue.h	/^	int iDeqtWinToHr;	\/* end of dequeue time window (hour only), set to 25 to disable deq window! *\/$/;"	m	struct:queue_s
iDfltFacility	plugins/imjournal/imjournal.c	/^	int iDfltFacility;$/;"	m	struct:configSettings_s	file:
iDfltSeverity	plugins/imjournal/imjournal.c	/^	int iDfltSeverity;$/;"	m	struct:configSettings_s	file:
iDiscardMrk	runtime/queue.h	/^	int	iDiscardMrk;	\/* if the queue is above this mark, low-severity messages are discarded *\/$/;"	m	struct:queue_s
iDiscardSeverity	runtime/queue.h	/^	int	iDiscardSeverity;\/* messages of this severity above are discarded on too-full queue *\/$/;"	m	struct:queue_s
iDrvrMode	runtime/netstrms.h	/^	int iDrvrMode;		\/**< current default driver mode *\/$/;"	m	struct:netstrms_s
iDrvrMode	runtime/strmsrv.h	/^	int iDrvrMode;		\/**< mode of the stream driver to use *\/$/;"	m	struct:strmsrv_s
iDrvrMode	runtime/tcpsrv.h	/^	int iDrvrMode;		\/**< mode of the stream driver to use *\/$/;"	m	struct:tcpsrv_s
iDynaFileCacheSize	tools/omfile.c	/^	int	iDynaFileCacheSize; \/* size of file handle cache *\/$/;"	m	struct:_instanceData	file:
iDynaFileCacheSize	tools/omfile.c	/^	int iDynaFileCacheSize; \/* max cache for dynamic files *\/$/;"	m	struct:configSettings_s	file:
iDynaTopicCacheSize	plugins/omkafka/omkafka.c	/^	int iDynaTopicCacheSize;$/;"	m	struct:_instanceData	file:
iEnq	runtime/stream.h	/^	unsigned short iEnq;	\/* this MUST be unsigned as we use module arithmetic (else invalid indexing happens!) *\/$/;"	m	struct:strm_s
iExecEveryNthOccur	action.h	/^	int	iExecEveryNthOccur;\/* execute this action only every n-th occurence (with n=0,1 -> always) *\/$/;"	m	struct:action_s
iExecEveryNthOccurTO	action.h	/^	int  	iExecEveryNthOccurTO;\/* timeout for n-th occurence feature *\/$/;"	m	struct:action_s
iFacilIntMsg	contrib/imkmsg/imkmsg.c	/^	int iFacilIntMsg; \/* the facility to use for internal messages (set by driver) *\/$/;"	m	struct:configSettings_s	file:
iFacilIntMsg	contrib/imkmsg/imkmsg.h	/^	int iFacilIntMsg;$/;"	m	struct:modConfData_s
iFacilIntMsg	plugins/imklog/imklog.c	/^	int iFacilIntMsg; \/* the facility to use for internal messages (set by driver) *\/$/;"	m	struct:configSettings_s	file:
iFacilIntMsg	plugins/imklog/imklog.h	/^	int iFacilIntMsg;$/;"	m	struct:modConfData_s
iFacility	plugins/imfile/imfile.c	/^	int iFacility; \/* local0 *\/$/;"	m	struct:configSettings_s	file:
iFacility	plugins/imfile/imfile.c	/^	int iFacility;$/;"	m	struct:instanceConf_s	file:
iFacility	plugins/imfile/imfile.c	/^	int iFacility;$/;"	m	struct:lstn_s	file:
iFacility	plugins/impstats/impstats.c	/^	int iFacility;$/;"	m	struct:configSettings_s	file:
iFacility	plugins/impstats/impstats.c	/^	int iFacility;$/;"	m	struct:modConfData_s	file:
iFacility	runtime/msg.h	/^	unsigned short	iFacility;\/* Facility code *\/$/;"	m	struct:msg
iFailFrequency	plugins/omtesting/omtesting.c	/^	int	iFailFrequency;$/;"	m	struct:_instanceData	file:
iFailed	tests/nettester.c	/^int iFailed = 0;$/;"	v
iFdSetSize	runtime/glbl.c	/^static int iFdSetSize = howmany(FD_SETSIZE, __NFDBITS) * sizeof (fd_mask); \/* size of select() bitmask in bytes *\/$/;"	v	file:
iFieldNr	template.h	/^			unsigned iFieldNr;	\/* for field extraction: field to extract *\/$/;"	m	struct:templateEntry::__anon69::__anon71
iFieldNum	plugins/impstats/statslog-graph.py	/^			iFieldNum = 0$/;"	v
iFileNumDigits	runtime/stream.h	/^	int iFileNumDigits;\/* min number of digits to use in file number (only in circular mode) *\/$/;"	m	struct:strm_s
iFlushInterval	runtime/stream.h	/^	int iFlushInterval; \/* flush in which interval - 0, no flushing *\/$/;"	m	struct:strm_s
iFlushInterval	tools/omfile.c	/^	int	iFlushInterval;		\/* how fast flush buffer on inactivity? *\/$/;"	m	struct:_instanceData	file:
iFlushInterval	tools/omfile.c	/^	int	iFlushInterval; 	\/* how often flush the output buffer on inactivity? *\/$/;"	m	struct:configSettings_s	file:
iFromPos	template.h	/^			unsigned iFromPos;	\/* for partial strings only chars from this position ... *\/$/;"	m	struct:templateEntry::__anon69::__anon71
iFullDlyMrk	runtime/queue.h	/^	int	iFullDlyMrk;	\/* if the queue is above this mark, FULL_DELAYable message are put on hold *\/$/;"	m	struct:queue_s
iGnuTLSLoglevel	runtime/glbl.c	/^static int iGnuTLSLoglevel = 0;		$/;"	v	file:
iHUPForward	plugins/omprog/omprog.c	/^	int iHUPForward;	\/* signal to forward on HUP (or NO_HUP_FORWARD) *\/$/;"	m	struct:_instanceData	file:
iHighWtrMrk	runtime/queue.h	/^	int	iHighWtrMrk;	\/* high water mark for disk-assisted memory queues *\/$/;"	m	struct:queue_s
iHostname	plugins/pmciscoios/pmciscoios.c	/^	int iHostname;$/;"	v
iIFVers	runtime/modules.h	/^	int		iIFVers;	\/* Interface version of module *\/$/;"	m	struct:modInfo_s
iIOBufSize	tools/omfile.c	/^	int	iIOBufSize;		\/* size of associated io buffer *\/$/;"	m	struct:_instanceData	file:
iIOBufSize	tools/omfile.c	/^	int64	iIOBufSize;	\/* size of an io buffer *\/$/;"	m	struct:configSettings_s	file:
iKeepAliveIntvl	plugins/imptcp/imptcp.c	/^	int iKeepAliveIntvl;$/;"	m	struct:configSettings_s	file:
iKeepAliveIntvl	plugins/imptcp/imptcp.c	/^	int iKeepAliveIntvl;$/;"	m	struct:instanceConf_s	file:
iKeepAliveIntvl	plugins/imptcp/imptcp.c	/^	int iKeepAliveIntvl;$/;"	m	struct:ptcpsrv_s	file:
iKeepAliveIntvl	plugins/imrelp/imrelp.c	/^	int iKeepAliveIntvl;$/;"	m	struct:instanceConf_s	file:
iKeepAliveIntvl	plugins/imtcp/imtcp.c	/^	int iKeepAliveIntvl;$/;"	m	struct:configSettings_s	file:
iKeepAliveIntvl	plugins/imtcp/imtcp.c	/^	int iKeepAliveIntvl;$/;"	m	struct:modConfData_s	file:
iKeepAliveIntvl	runtime/nsd_ptcp.h	/^	int iKeepAliveIntvl;	\/**< socket layer KEEPALIVE interval *\/$/;"	m	struct:nsd_ptcp_s
iKeepAliveIntvl	runtime/strmsrv.h	/^	int iKeepAliveIntvl;	\/**< socket layer KEEPALIVE interval *\/$/;"	m	struct:strmsrv_s
iKeepAliveIntvl	runtime/tcpsrv.h	/^	int iKeepAliveIntvl;	\/**< socket layer KEEPALIVE interval *\/$/;"	m	struct:tcpsrv_s
iKeepAliveIntvl	tools/omfwd.c	/^	int iKeepAliveIntvl;$/;"	m	struct:_instanceData	file:
iKeepAliveIntvl	tools/omfwd.c	/^	int iKeepAliveIntvl;$/;"	m	struct:configSettings_s	file:
iKeepAliveProbes	plugins/imptcp/imptcp.c	/^	int iKeepAliveProbes;$/;"	m	struct:configSettings_s	file:
iKeepAliveProbes	plugins/imptcp/imptcp.c	/^	int iKeepAliveProbes;$/;"	m	struct:instanceConf_s	file:
iKeepAliveProbes	plugins/imptcp/imptcp.c	/^	int iKeepAliveProbes;$/;"	m	struct:ptcpsrv_s	file:
iKeepAliveProbes	plugins/imrelp/imrelp.c	/^	int iKeepAliveProbes;$/;"	m	struct:instanceConf_s	file:
iKeepAliveProbes	plugins/imtcp/imtcp.c	/^	int iKeepAliveProbes;$/;"	m	struct:configSettings_s	file:
iKeepAliveProbes	plugins/imtcp/imtcp.c	/^	int iKeepAliveProbes;$/;"	m	struct:modConfData_s	file:
iKeepAliveProbes	runtime/nsd_ptcp.h	/^	int iKeepAliveProbes;	\/**< socket layer KEEPALIVE probes *\/$/;"	m	struct:nsd_ptcp_s
iKeepAliveProbes	runtime/strmsrv.h	/^	int iKeepAliveProbes;	\/**< socket layer KEEPALIVE probes *\/$/;"	m	struct:strmsrv_s
iKeepAliveProbes	runtime/tcpsrv.h	/^	int iKeepAliveProbes;	\/**< socket layer KEEPALIVE probes *\/$/;"	m	struct:tcpsrv_s
iKeepAliveProbes	tools/omfwd.c	/^	int iKeepAliveProbes;$/;"	m	struct:_instanceData	file:
iKeepAliveProbes	tools/omfwd.c	/^	int iKeepAliveProbes;$/;"	m	struct:configSettings_s	file:
iKeepAliveTime	plugins/imptcp/imptcp.c	/^	int iKeepAliveTime;$/;"	m	struct:configSettings_s	file:
iKeepAliveTime	plugins/imptcp/imptcp.c	/^	int iKeepAliveTime;$/;"	m	struct:instanceConf_s	file:
iKeepAliveTime	plugins/imptcp/imptcp.c	/^	int iKeepAliveTime;$/;"	m	struct:ptcpsrv_s	file:
iKeepAliveTime	plugins/imrelp/imrelp.c	/^	int iKeepAliveTime;$/;"	m	struct:instanceConf_s	file:
iKeepAliveTime	plugins/imtcp/imtcp.c	/^	int iKeepAliveTime;$/;"	m	struct:configSettings_s	file:
iKeepAliveTime	plugins/imtcp/imtcp.c	/^	int iKeepAliveTime;$/;"	m	struct:modConfData_s	file:
iKeepAliveTime	runtime/nsd_ptcp.h	/^	int iKeepAliveTime;	\/**< socket layer KEEPALIVE timeout *\/$/;"	m	struct:nsd_ptcp_s
iKeepAliveTime	runtime/strmsrv.h	/^	int iKeepAliveTime;	\/**< socket layer KEEPALIVE timeout *\/$/;"	m	struct:strmsrv_s
iKeepAliveTime	runtime/tcpsrv.h	/^	int iKeepAliveTime;	\/**< socket layer KEEPALIVE timeout *\/$/;"	m	struct:tcpsrv_s
iKeepAliveTime	tools/omfwd.c	/^	int iKeepAliveTime;$/;"	m	struct:_instanceData	file:
iKeepAliveTime	tools/omfwd.c	/^	int iKeepAliveTime;$/;"	m	struct:configSettings_s	file:
iLenConstant	template.h	/^			int iLenConstant;	\/* its length *\/$/;"	m	struct:templateEntry::__anon69::__anon70
iLenHOSTNAME	runtime/msg.h	/^	int	iLenHOSTNAME;	\/* Length of HOSTNAME *\/$/;"	m	struct:msg
iLenMSG	runtime/msg.h	/^	int	iLenMSG;	\/* Length of the MSG part *\/$/;"	m	struct:msg
iLenName	outchannel.h	/^	int iLenName;$/;"	m	struct:outchannel
iLenName	template.h	/^	int iLenName;$/;"	m	struct:__anon68
iLenPROGNAME	runtime/msg.h	/^	int	iLenPROGNAME;	\/* Length of PROGNAME (-1 = not yet set) *\/$/;"	m	struct:msg
iLenRawMsg	runtime/msg.h	/^	int	iLenRawMsg;	\/* length of raw message *\/$/;"	m	struct:msg
iLenTAG	runtime/msg.h	/^	int	iLenTAG;	\/* Length of the TAG part *\/$/;"	m	struct:msg
iLightDlyMrk	runtime/queue.h	/^	int	iLightDlyMrk;	\/* if the queue is above this mark, LIGHT_DELAYable message are put on hold *\/$/;"	m	struct:queue_s
iLineNum	plugins/impstats/statslog-analyzer.py	/^			iLineNum = singleStatLine[LN_LINENUM]$/;"	v
iLineNum	plugins/impstats/statslog-analyzer.py	/^		iLineNum = 0 $/;"	v
iLogData	plugins/impstats/statslog-analyzer.py	/^					iLogData = int(singleStatLine[LN_DATA][logDataID])$/;"	v
iLogEvictedData	plugins/impstats/statslog-analyzer.py	/^			iLogEvictedData = 0$/;"	v
iLogRegExIndex	plugins/impstats/statslog-analyzer.py	/^			iLogRegExIndex = 0$/;"	v
iLogRegExIndex	plugins/impstats/statslog-splitter.py	/^			iLogRegExIndex = 0$/;"	v
iLogRequestsData	plugins/impstats/statslog-analyzer.py	/^			iLogRequestsData = 0$/;"	v
iLowWtrMrk	runtime/queue.h	/^	int	iLowWtrMrk;	\/* low water mark for disk-assisted memory queues *\/$/;"	m	struct:queue_s
iLstnCurr	runtime/tcpsrv.h	/^	int iLstnCurr;		\/**< max nbr of listeners currently supported *\/$/;"	m	struct:tcpsrv_s
iLstnMax	runtime/strmsrv.h	/^	int iLstnMax;		\/**< max nbr of listeners currently supported *\/$/;"	m	struct:strmsrv_s
iLstnMax	runtime/tcpsrv.h	/^	int iLstnMax;		\/**< max number of listeners supported *\/$/;"	m	struct:tcpsrv_s
iMainMsgQDeqSlowdown	runtime/rsconf.h	/^	int iMainMsgQDeqSlowdown;	\/* dequeue slowdown (simple rate limiting) *\/$/;"	m	struct:queuecnf_s
iMainMsgQDiscardMark	runtime/rsconf.h	/^	int iMainMsgQDiscardMark;	\/* begin to discard messages *\/$/;"	m	struct:queuecnf_s
iMainMsgQDiscardSeverity	runtime/rsconf.h	/^	int iMainMsgQDiscardSeverity;	\/* by default, discard nothing to prevent unintentional loss *\/$/;"	m	struct:queuecnf_s
iMainMsgQHighWtrMark	runtime/rsconf.h	/^	int iMainMsgQHighWtrMark;	\/* high water mark for disk-assisted queues *\/$/;"	m	struct:queuecnf_s
iMainMsgQLowWtrMark	runtime/rsconf.h	/^	int iMainMsgQLowWtrMark;	\/* low water mark for disk-assisted queues *\/$/;"	m	struct:queuecnf_s
iMainMsgQPersistUpdCnt	runtime/rsconf.h	/^	int iMainMsgQPersistUpdCnt;	\/* persist queue info every n updates *\/$/;"	m	struct:queuecnf_s
iMainMsgQWrkMinMsgs	runtime/rsconf.h	/^	int iMainMsgQWrkMinMsgs;	\/* minimum messages per worker needed to start a new one *\/$/;"	m	struct:queuecnf_s
iMainMsgQtoActShutdown	runtime/rsconf.h	/^	int iMainMsgQtoActShutdown;	\/* action shutdown (in phase 2) *\/ $/;"	m	struct:queuecnf_s
iMainMsgQtoEnq	runtime/rsconf.h	/^	int iMainMsgQtoEnq;		\/* timeout for queue enque *\/ $/;"	m	struct:queuecnf_s
iMainMsgQtoQShutdown	runtime/rsconf.h	/^	int iMainMsgQtoQShutdown;	\/* queue shutdown (ms) *\/ $/;"	m	struct:queuecnf_s
iMainMsgQtoWrkShutdown	runtime/rsconf.h	/^	int iMainMsgQtoWrkShutdown;	\/* timeout for worker thread shutdown *\/$/;"	m	struct:queuecnf_s
iMainMsgQueDeqBatchSize	runtime/rsconf.h	/^	int64 iMainMsgQueDeqBatchSize;	\/* dequeue batch size *\/$/;"	m	struct:queuecnf_s
iMainMsgQueMaxDiskSpace	runtime/rsconf.h	/^	int64 iMainMsgQueMaxDiskSpace;	\/* max disk space allocated 0 ==> unlimited *\/$/;"	m	struct:queuecnf_s
iMainMsgQueMaxFileSize	runtime/rsconf.h	/^	int64 iMainMsgQueMaxFileSize;$/;"	m	struct:queuecnf_s
iMainMsgQueueDeqtWinFromHr	runtime/rsconf.h	/^	int iMainMsgQueueDeqtWinFromHr;	\/* hour begin of time frame when queue is to be dequeued *\/$/;"	m	struct:queuecnf_s
iMainMsgQueueDeqtWinToHr	runtime/rsconf.h	/^	int iMainMsgQueueDeqtWinToHr;	\/* hour begin of time frame when queue is to be dequeued *\/$/;"	m	struct:queuecnf_s
iMainMsgQueueNumWorkers	runtime/rsconf.h	/^	int iMainMsgQueueNumWorkers;	\/* number of worker threads for the mm queue above *\/$/;"	m	struct:queuecnf_s
iMainMsgQueueSize	runtime/rsconf.h	/^	int iMainMsgQueueSize;		\/* size of the main message queue above *\/$/;"	m	struct:queuecnf_s
iMarkMessagePeriod	plugins/immark/immark.c	/^	int iMarkMessagePeriod;$/;"	m	struct:modConfData_s	file:
iMarkMessagePeriod	plugins/immark/immark.c	/^static int iMarkMessagePeriod = DEFAULT_MARK_PERIOD;$/;"	v	file:
iMatchToUse	template.h	/^			short iMatchToUse;\/* which match should be obtained (10 max) *\/$/;"	m	struct:templateEntry::__anon69::__anon71
iMaxFileSize	runtime/queue.h	/^	int64 iMaxFileSize;	\/* max size for a single queue file *\/$/;"	m	struct:queue_s
iMaxFileSize	runtime/stream.h	/^	int64 iMaxFileSize;\/* maximum size a file may grow to *\/$/;"	m	struct:strm_s
iMaxFiles	runtime/stream.h	/^	int iMaxFiles;	\/* maximum number of files if a circular mode is in use *\/$/;"	m	struct:strm_s
iMaxLine	plugins/imptcp/imptcp.c	/^	iMaxLine = glbl.GetMaxLine(); \/* get maximum size we currently support *\/$/;"	v
iMaxLine	plugins/imptcp/imptcp.c	/^static int iMaxLine; \/* maximum size of a single message *\/$/;"	v	file:
iMaxLine	plugins/imudp/imudp.c	/^	iMaxLine = glbl.GetMaxLine();$/;"	v
iMaxLine	plugins/imudp/imudp.c	/^static int iMaxLine;			\/* maximum UDP message size supported *\/$/;"	v	file:
iMaxLine	plugins/omgssapi/omgssapi.c	/^	int iMaxLine;$/;"	v
iMaxLine	plugins/omudpspoof/omudpspoof.c	/^	int iMaxLine;$/;"	v
iMaxLine	plugins/omuxsock/omuxsock.c	/^	int iMaxLine;$/;"	v
iMaxLine	runtime/glbl.c	/^static int iMaxLine = 8096;		\/* maximum length of a syslog message *\/$/;"	v	file:
iMaxLine	runtime/strms_sess.c	/^static int iMaxLine; \/* maximum size of a single message *\/$/;"	v	file:
iMaxQueueSize	runtime/queue.h	/^	int	iMaxQueueSize;	\/* how large can the queue grow? *\/$/;"	m	struct:queue_s
iMinMsgsPerWrkr	runtime/queue.h	/^	int	iMinMsgsPerWrkr;\/* minimum nbr of msgs per worker thread, if more, a new worker is started until max wrkrs *\/$/;"	m	struct:queue_s
iMode	plugins/ommail/ommail.c	/^	int8_t iMode;	\/* 0 - smtp, 1 - sendmail *\/$/;"	m	struct:_instanceData	file:
iMode	runtime/nsd_gtls.h	/^	int iMode;		\/* 0 - plain tcp, 1 - TLS *\/$/;"	m	struct:nsd_gtls_s
iMonth	plugins/impstats/statslog-analyzer.py	/^						iMonth = int( result[ loglineindexes[iLogRegExIndex]["LN_MONTH"] ] )$/;"	v
iMonth	plugins/impstats/statslog-splitter.py	/^						iMonth = int( result[ loglineindexes[iLogRegExIndex]["LN_MONTH"] ] )$/;"	v
iMsg	plugins/imptcp/imptcp.c	/^	int iMsg;		 \/* index of next char to store in msg *\/$/;"	m	struct:ptcpsess_s	file:
iMsg	runtime/tcps_sess.h	/^	int iMsg;		 \/* index of next char to store in msg *\/$/;"	m	struct:tcps_sess_s
iMySQLPropErr	plugins/ommysql/ommysql.c	/^	int iMySQLPropErr = 0;$/;"	v
iNbrNoExec	action.h	/^	int	iNbrNoExec;	\/* number of matches that did not yet yield to an exec *\/$/;"	m	struct:action_s
iNbrResRtry	runtime/wti.h	/^	int	iNbrResRtry;	\/* number of retries since last suspend *\/$/;"	m	struct:actWrkrInfo
iNumElts	runtime/linkedlist.h	/^	int iNumElts;		\/* number of elements in list *\/$/;"	m	struct:linkedList_s
iNumEntries	runtime/objomsr.h	/^	int iNumEntries;	\/* number of array entries for data elements below *\/$/;"	m	struct:omodStringRequest_s
iNumMsgs	runtime/tcpclt.h	/^	int iNumMsgs;		\/* number of messages during current "rebind session" *\/$/;"	m	struct:tcpclt_s
iNumTpls	action.h	/^	int	iNumTpls;	\/* number of array entries for template element below *\/$/;"	m	struct:action_s
iNumTpls	plugins/omelasticsearch/omelasticsearch.c	/^	int iNumTpls;$/;"	v
iNumTpls	plugins/omkafka/omkafka.c	/^	CODE_STD_STRING_REQUESTnewActInst(iNumTpls);$/;"	v
iNumTpls	plugins/omkafka/omkafka.c	/^	int iNumTpls;$/;"	v
iNumTpls	tools/omfile.c	/^	uint8_t iNumTpls;	\/* number of tpls we use *\/$/;"	m	struct:_instanceData	file:
iNumWorkerThreads	runtime/queue.h	/^	int 	iNumWorkerThreads;\/* number of worker threads to use *\/$/;"	m	struct:queue_s
iNumWorkerThreads	runtime/wtp.h	/^	int 	iNumWorkerThreads;\/* number of worker threads to use *\/$/;"	m	struct:wtp_s
iNumberFiles	runtime/queue.h	/^	int iNumberFiles;	\/* how many files make up the queue? *\/$/;"	m	struct:queue_s
iObjCooCKiE	runtime/obj-types.h	/^	unsigned int iObjCooCKiE; \/* must always be 0xBADEFEE for a valid object *\/$/;"	m	struct:obj_s
iObjVers	runtime/obj-types.h	/^	int iObjVers;$/;"	m	struct:objInfo_s
iOctetsRemain	plugins/imptcp/imptcp.c	/^	int iOctetsRemain;	\/* Number of Octets remaining in message *\/$/;"	m	struct:ptcpsess_s	file:
iOctetsRemain	runtime/tcps_sess.h	/^	int iOctetsRemain;	\/* Number of Octets remaining in message *\/$/;"	m	struct:tcps_sess_s
iParam	plugins/omstdout/omstdout.c	/^	int iParam;$/;"	v
iParamVal	plugins/omstdout/omstdout.c	/^	int iParamVal;$/;"	v
iParams	plugins/mmexternal/mmexternal.c	/^	int iParams;		\/* Holds the count of parameters if set*\/$/;"	m	struct:_instanceData	file:
iParams	plugins/omprog/omprog.c	/^	int iParams;		\/* Holds the count of parameters if set*\/$/;"	m	struct:_instanceData	file:
iPersistStateInterval	plugins/imfile/imfile.c	/^	int iPersistStateInterval;	\/* how often if state file to be persisted? (default 0->never) *\/$/;"	m	struct:configSettings_s	file:
iPersistStateInterval	plugins/imfile/imfile.c	/^	int iPersistStateInterval; \/**< how often should state be persisted? (0=on close only) *\/$/;"	m	struct:lstn_s	file:
iPersistStateInterval	plugins/imfile/imfile.c	/^	int iPersistStateInterval;$/;"	m	struct:instanceConf_s	file:
iPersistStateInterval	plugins/imjournal/imjournal.c	/^	int iPersistStateInterval;$/;"	m	struct:configSettings_s	file:
iPersistUpdCnt	runtime/queue.h	/^	int	iPersistUpdCnt;	\/* persits queue info after this nbr of updates - 0 -> persist only on shutdown *\/$/;"	m	struct:queue_s
iPgSQLPropErr	plugins/ompgsql/ompgsql.c	/^	int iPgSQLPropErr = 0;$/;"	v
iPollInterval	plugins/imfile/imfile.c	/^	int iPollInterval;	\/* number of seconds to sleep when there was no file activity *\/$/;"	m	struct:modConfData_s	file:
iPollInterval	plugins/imfile/imfile.c	/^	int iPollInterval;$/;"	m	struct:configSettings_s	file:
iPort	plugins/omsnmp/omsnmp.c	/^	int iPort;			\/* Target Port *\/$/;"	m	struct:_instanceData	file:
iPort	plugins/omsnmp/omsnmp.c	/^	int iPort;$/;"	m	struct:configSettings_s	file:
iPort	tests/nettester.c	/^static int iPort = 12514; \/* port which shall be used for sending data *\/$/;"	v	file:
iPreviousVal	plugins/impstats/statslog-graph.py	/^						iPreviousVal = int(aLineDataPrev[iFieldNum])$/;"	v
iPrm	plugins/mmexternal/mmexternal.c	/^	int iPrm;$/;"	v
iPrm	plugins/omprog/omprog.c	/^	int iPrm;$/;"	v
iProtocolVersion	runtime/msg.h	/^	short	iProtocolVersion;\/* protocol version of message received 0 - legacy, 1 syslog-protocol) *\/$/;"	m	struct:msg
iQueueSize	runtime/queue.h	/^	int	iQueueSize;	\/* Current number of elements in the queue *\/$/;"	m	struct:queue_s
iRcvBuf	plugins/ommail/ommail.c	/^			size_t iRcvBuf;	\/* current index into the rcvBuf (buf empty if iRcvBuf == lenRcvBuf) *\/$/;"	m	struct:wrkrInstanceData::__anon22::__anon23	file:
iRebindInterval	runtime/tcpclt.h	/^	int iRebindInterval;	\/* how often should the send socket be rebound? *\/$/;"	m	struct:tcpclt_s
iRebindInterval	tools/omfwd.c	/^	int iRebindInterval;	\/* rebind interval *\/$/;"	m	struct:_instanceData	file:
iRefCount	runtime/msg.h	/^	int	iRefCount;	\/* reference counter (0 = unused) *\/$/;"	m	struct:msg
iRefCount	runtime/prop.h	/^	int iRefCount;		\/* reference counter *\/$/;"	m	struct:prop_s
iRefCount	runtime/rsyslog.c	/^static int iRefCount = 0; \/* our refcount - it MUST exist only once inside a process (not thread)$/;"	v	file:
iResumeAfter	plugins/omtesting/omtesting.c	/^	int	iResumeAfter;$/;"	m	struct:_instanceData	file:
iResumeInterval	action.h	/^	int	iResumeInterval;\/* resume interval for this action *\/$/;"	m	struct:action_s
iResumeRetryCount	action.h	/^	int	iResumeRetryCount;\/* how often shall we retry a suspended action? (-1 --> eternal) *\/$/;"	m	struct:action_s
iRet	contrib/imkmsg/imkmsg.c	/^        iRet = klogAfterRun(runModConf);$/;"	v
iRet	contrib/imkmsg/imkmsg.c	/^        iRet = klogWillRunPostPrivDrop(runModConf);$/;"	v
iRet	contrib/imzmq3/imzmq3.c	/^        iRet = RS_RET_OK;$/;"	v
iRet	contrib/omhiredis/omhiredis.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	contrib/omhiredis/omhiredis.c	/^		iRet = initHiredis(pWrkrData, 0);$/;"	v
iRet	contrib/omhttpfs/omhttpfs.c	/^        iRet = RS_RET_OK;$/;"	v
iRet	contrib/omrabbitmq/omrabbitmq.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	contrib/omzmq3/omzmq3.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	contrib/pmcisconames/pmcisconames.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	contrib/pmpanngfw/pmpanngfw.c	/^        iRet = RS_RET_OK;$/;"	v
iRet	contrib/pmsnare/pmsnare.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imdiag/imdiag.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imdiag/imdiag.c	/^		iRet = tcpsrv.Destruct(&pOurTcpsrv);$/;"	v
iRet	plugins/imfile/imfile.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imgssapi/imgssapi.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imgssapi/imgssapi.c	/^		iRet = tcpsrv.Destruct(&pOurTcpsrv);$/;"	v
iRet	plugins/imjournal/imjournal.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imklog/imklog.c	/^        iRet = klogAfterRun(runModConf);$/;"	v
iRet	plugins/imklog/imklog.c	/^        iRet = klogWillRunPostPrivDrop(runModConf);$/;"	v
iRet	plugins/immark/immark.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/impstats/impstats.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imptcp/imptcp.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imrelp/imrelp.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imrelp/imrelp.c	/^		iRet = relpEngineDestruct(&pRelpEngine);$/;"	v
iRet	plugins/imsolaris/imsolaris.c	/^                iRet = RS_RET_OK;$/;"	v
iRet	plugins/imtcp/imtcp.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imtcp/imtcp.c	/^		iRet = tcpsrv.Destruct(&pOurTcpsrv);$/;"	v
iRet	plugins/imtcp/imtcp.c	/^	iRet = tcpsrv.Run(pOurTcpsrv);$/;"	v
iRet	plugins/imudp/imudp.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/imuxsock/imuxsock.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/mmexternal/mmexternal.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omelasticsearch/omelasticsearch.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omgssapi/omgssapi.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omhdfs/omhdfs.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/ommail/ommail.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/ommail/ommail.c	/^		iRet = RS_RET_SUSPENDED;$/;"	v
iRet	plugins/ommongodb/ommongodb.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/ommysql/ommysql.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/ompgsql/ompgsql.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omprog/omprog.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omrelp/omrelp.c	/^		iRet = RS_RET_DISABLE_ACTION;$/;"	v
iRet	plugins/omrelp/omrelp.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omsnmp/omsnmp.c	/^	iRet = omsnmp_initSession(pWrkrData);$/;"	v
iRet	plugins/omstdout/omstdout.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omudpspoof/omudpspoof.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omudpspoof/omudpspoof.c	/^	iRet = doTryResume(pWrkrData);$/;"	v
iRet	plugins/omuxsock/omuxsock.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/omuxsock/omuxsock.c	/^	iRet = doTryResume(pWrkrData->pData);$/;"	v
iRet	plugins/pmciscoios/pmciscoios.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	plugins/pmlastmsg/pmlastmsg.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	tools/omfile.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	tools/omfwd.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	tools/ompipe.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	tools/omshell.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	tools/omusrmsg.c	/^		iRet = RS_RET_OK;$/;"	v
iRet	tools/pmrfc3164.c	/^		iRet = RS_RET_OK;$/;"	v
iReturn	plugins/impstats/statslog-graph.py	/^		iReturn = os.system("cairosvg " + szOutputFile + " -f png -o " + szPngFileName)$/;"	v
iReturn	plugins/impstats/statslog-splitter.py	/^				iReturn = os.system(".\/statslog-graph.py " + szChartAddArgs + " --input=" + szOutputDir + "\/" + outFileName + " --convertpng")$/;"	v
iReturn	plugins/impstats/statslog-splitter.py	/^				iReturn = os.system(".\/statslog-graph.py " + szChartAddArgs + " --input=" + szOutputDir + "\/" + outFileName + "")$/;"	v
iSNMPVersion	plugins/omsnmp/omsnmp.c	/^	int iSNMPVersion;		\/* SNMP Version to use *\/$/;"	m	struct:_instanceData	file:
iSNMPVersion	plugins/omsnmp/omsnmp.c	/^	int iSNMPVersion;	\/* 0 Means SNMPv1, 1 Means SNMPv2c *\/$/;"	m	struct:configSettings_s	file:
iSchedPolicy	plugins/imudp/imudp.c	/^	int iSchedPolicy;		\/* scheduling policy as SCHED_xxx *\/$/;"	m	struct:modConfData_s	file:
iSchedPrio	plugins/imudp/imudp.c	/^	int iSchedPrio;			\/* scheduling priority *\/$/;"	m	struct:configSettings_s	file:
iSchedPrio	plugins/imudp/imudp.c	/^	int iSchedPrio;			\/* scheduling priority *\/$/;"	m	struct:modConfData_s	file:
iSecsExecOnceInterval	action.h	/^	int	iSecsExecOnceInterval; \/* if non-zero, minimum seconds to wait until action is executed again *\/$/;"	m	struct:action_s
iSessMax	runtime/strmsrv.h	/^	int iSessMax;		\/**< max number of sessions supported *\/$/;"	m	struct:strmsrv_s
iSessMax	runtime/tcpsrv.h	/^	int iSessMax;		\/**< max number of sessions supported *\/$/;"	m	struct:tcpsrv_s
iSeverity	plugins/imfile/imfile.c	/^	int iSeverity;  \/* notice, as of rfc 3164 *\/$/;"	m	struct:configSettings_s	file:
iSeverity	plugins/imfile/imfile.c	/^	int iSeverity;$/;"	m	struct:instanceConf_s	file:
iSeverity	plugins/imfile/imfile.c	/^	int iSeverity;$/;"	m	struct:lstn_s	file:
iSeverity	plugins/impstats/impstats.c	/^	int iSeverity;$/;"	m	struct:configSettings_s	file:
iSeverity	plugins/impstats/impstats.c	/^	int iSeverity;$/;"	m	struct:modConfData_s	file:
iSeverity	runtime/msg.h	/^	unsigned short	iSeverity;\/* the severity  *\/$/;"	m	struct:msg
iSizeLimit	runtime/stream.h	/^	off_t	iSizeLimit;	\/* file size limit, 0 = no limit *\/$/;"	m	struct:strm_s
iSizeLimit	tools/omfile.c	/^	off_t	iSizeLimit;		\/* file size limit, 0 = no limit *\/$/;"	m	struct:_instanceData	file:
iSourcePortEnd	plugins/omudpspoof/omudpspoof.c	/^	int iSourcePortEnd;$/;"	m	struct:configSettings_s	file:
iSourcePortStart	plugins/omudpspoof/omudpspoof.c	/^	int iSourcePortStart;$/;"	m	struct:configSettings_s	file:
iSpecificType	plugins/omsnmp/omsnmp.c	/^	int iSpecificType;		\/* Snmp Specific Type *\/$/;"	m	struct:_instanceData	file:
iSpecificType	plugins/omsnmp/omsnmp.c	/^	int iSpecificType;$/;"	m	struct:configSettings_s	file:
iSrvPort	plugins/ommysql/ommysql.c	/^	int iSrvPort;				\/* database server port *\/$/;"	m	struct:configSettings_s	file:
iStartSeconds	plugins/impstats/statslog-graph.py	/^							iStartSeconds = iTimeStamp$/;"	v
iStartSeconds	plugins/impstats/statslog-graph.py	/^iStartSeconds = 0$/;"	v
iStatsInterval	plugins/impstats/impstats.c	/^	int iStatsInterval;$/;"	m	struct:configSettings_s	file:
iStatsInterval	plugins/impstats/impstats.c	/^	int iStatsInterval;$/;"	m	struct:modConfData_s	file:
iStr	plugins/mmexternal/mmexternal.c	/^	es_size_t iStr;$/;"	v
iStr	plugins/omprog/omprog.c	/^	es_size_t iStr;$/;"	v
iStrLen	runtime/stringbuf.h	/^	size_t iStrLen;		\/**< length of the string in characters. *\/$/;"	m	struct:cstr_s
iStrmDrvrMode	plugins/imdiag/imdiag.c	/^static int iStrmDrvrMode = 0; \/* mode for stream driver, driver-dependent (0 mostly means plain tcp) *\/$/;"	v	file:
iStrmDrvrMode	plugins/imtcp/imtcp.c	/^	int iStrmDrvrMode; \/* mode for stream driver, driver-dependent (0 mostly means plain tcp) *\/$/;"	m	struct:modConfData_s	file:
iStrmDrvrMode	plugins/imtcp/imtcp.c	/^	int iStrmDrvrMode;$/;"	m	struct:configSettings_s	file:
iStrmDrvrMode	tools/omfwd.c	/^	int iStrmDrvrMode; \/* mode for stream driver, driver-dependent (0 mostly means plain tcp) *\/$/;"	m	struct:configSettings_s	file:
iStrmDrvrMode	tools/omfwd.c	/^	int iStrmDrvrMode;$/;"	m	struct:_instanceData	file:
iSubMatchToUse	template.h	/^			short iSubMatchToUse;\/* which submatch should be obtained (10 max) *\/$/;"	m	struct:templateEntry::__anon69::__anon71
iTCPLstnMax	plugins/imtcp/imtcp.c	/^	int iTCPLstnMax; \/* max number of sessions *\/$/;"	m	struct:modConfData_s	file:
iTCPLstnMax	plugins/imtcp/imtcp.c	/^	int iTCPLstnMax;$/;"	m	struct:configSettings_s	file:
iTCPRebindInterval	tools/omfwd.c	/^	int iTCPRebindInterval;	\/* support for automatic re-binding (load balancers!). 0 - no rebind *\/$/;"	m	struct:configSettings_s	file:
iTCPSessMax	plugins/imdiag/imdiag.c	/^static int iTCPSessMax = 20; \/* max number of sessions *\/$/;"	v	file:
iTCPSessMax	plugins/imgssapi/imgssapi.c	/^static int iTCPSessMax = 200; \/* max number of sessions *\/$/;"	v	file:
iTCPSessMax	plugins/imtcp/imtcp.c	/^	int iTCPSessMax; \/* max number of sessions *\/$/;"	m	struct:modConfData_s	file:
iTCPSessMax	plugins/imtcp/imtcp.c	/^	int iTCPSessMax;$/;"	m	struct:configSettings_s	file:
iTests	tests/nettester.c	/^int iTests = 0;$/;"	v
iTimeRequery	plugins/imudp/imudp.c	/^	int iTimeRequery;		\/* how often is time to be queried inside tight recv loop? 0=always *\/$/;"	m	struct:configSettings_s	file:
iTimeRequery	plugins/imudp/imudp.c	/^	int iTimeRequery;		\/* how often is time to be queried inside tight recv loop? 0=always *\/$/;"	m	struct:modConfData_s	file:
iTimeStamp	plugins/impstats/statslog-graph.py	/^						iTimeStamp = int(time.mktime(myDateTime.timetuple()))$/;"	v
iToPos	template.h	/^			unsigned iToPos;	\/* up to that one... *\/$/;"	m	struct:templateEntry::__anon69::__anon71
iTplOpts	plugins/omruleset/omruleset.c	/^	int iTplOpts;$/;"	v
iTplOpts	plugins/omstdout/omstdout.c	/^	int iTplOpts;$/;"	v
iTrapType	plugins/omsnmp/omsnmp.c	/^	int iTrapType;			\/* Snmp TrapType or GenericType *\/$/;"	m	struct:_instanceData	file:
iTrapType	plugins/omsnmp/omsnmp.c	/^	int iTrapType;		\/*Default is SNMP_TRAP_ENTERPRISESPECIFIC *\/$/;"	m	struct:configSettings_s	file:
iUDPRebindInterval	tools/omfwd.c	/^	int iUDPRebindInterval;	\/* support for automatic re-binding (load balancers!). 0 - no rebind *\/$/;"	m	struct:configSettings_s	file:
iUDPSendDelay	tools/omfwd.c	/^	int iUDPSendDelay;$/;"	m	struct:_instanceData	file:
iUngetC	runtime/stream.h	/^	int iUngetC;	\/* char set via UngetChar() call or -1 if none set *\/$/;"	m	struct:strm_s
iUpdsSincePersist	runtime/queue.h	/^	int	iUpdsSincePersist;\/* nbr of queue updates since the last persist call *\/$/;"	m	struct:queue_s
iWaitSeconds	plugins/omtesting/omtesting.c	/^	int	iWaitSeconds;$/;"	m	struct:_instanceData	file:
iWaitUSeconds	plugins/omtesting/omtesting.c	/^	int	iWaitUSeconds;	\/* micro-seconds (one millionth of a second, just to make sure...) *\/$/;"	m	struct:_instanceData	file:
iZipLevel	runtime/stream.h	/^	int iZipLevel;	\/* zip level (0..9). If 0, zip is completely disabled *\/$/;"	m	struct:strm_s
iZipLevel	tools/omfile.c	/^	int	iZipLevel;	\/* zip compression mode (0..9 as usual) *\/$/;"	m	struct:configSettings_s	file:
iZipLevel	tools/omfile.c	/^	int 	iZipLevel;		\/* zip mode to use for this selector *\/$/;"	m	struct:_instanceData	file:
id	plugins/imudp/imudp.c	/^	int id;$/;"	m	struct:wrkrInfo_s	file:
id	runtime/hashtable/tester.c	/^    char *id;$/;"	m	struct:value	file:
id	runtime/janitor.h	/^	char *id;	\/* ID used to remove entry *\/$/;"	m	struct:janitorEtry
id	runtime/nsd.h	/^	int id;$/;"	m	struct:nsd_epworkset_s
id	runtime/nsdpoll_ptcp.h	/^	int id;$/;"	m	struct:nsdpoll_epollevt_lst_s
id	runtime/syslogd-types.h	/^	char *id;$/;"	m	struct:tzinfo
id	runtime/typedefs.h	/^	propid_t id;$/;"	m	struct:msgPropDescr_s
id	tools/recover_qi.pl	/^sub id {$/;"	s
identity	contrib/imzmq3/imzmq3.c	/^    char*                  identity;$/;"	m	struct:instanceConf_s	file:
identity	contrib/omzmq3/omzmq3.c	/^    uchar*  identity;$/;"	m	struct:_instanceData	file:
idx	runtime/tcpsrv.c	/^	int idx;$/;"	m	struct:wrkrInfo_s	file:
idx	runtime/tcpsrv.h	/^	int idx;	\/**< index into session table (or -1 if listener) *\/$/;"	m	struct:tcpsrv_workset_s
idx	tests/tcpflood.c	/^	unsigned idx;	\/**< index of fd to be used for sending *\/$/;"	m	struct:instdata	file:
idxRespBuf	plugins/mmexternal/mmexternal.c	/^	int idxRespBuf;		\/* last char read from response buffer *\/$/;"	m	struct:wrkrInstanceData	file:
ifBEGIN	runtime/obj-types.h	395;"	d
ifIsLoaded	runtime/obj-types.h	/^	int ifIsLoaded; \/* is the interface loaded? (0-no, 1-yes, 2-load failed; if not 1, functions can NOT be called! *\/$/;"	m	struct:interface_s
ifVersion	runtime/obj-types.h	/^	int ifVersion;	\/* must be set to version requested *\/ $/;"	m	struct:interface_s
ifa_addr	compat/ifaddrs.h	/^	struct sockaddr	*ifa_addr;	\/* Network address of this interface. *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_broadaddr	compat/ifaddrs.h	62;"	d
ifa_data	compat/ifaddrs.h	/^	void		*ifa_data; \/* Address-specific data (may be unused). *\/$/;"	m	struct:ifaddrs
ifa_dstaddr	compat/ifaddrs.h	65;"	d
ifa_flags	compat/ifaddrs.h	/^	uint64_t	ifa_flags;	\/* Flags as from SIOCGLIFFLAGS ioctl. *\/$/;"	m	struct:ifaddrs
ifa_ifu	compat/ifaddrs.h	/^	} ifa_ifu;$/;"	m	struct:ifaddrs	typeref:union:ifaddrs::__anon1
ifa_name	compat/ifaddrs.h	/^	char		*ifa_name;	\/* Name of this network interface. *\/$/;"	m	struct:ifaddrs
ifa_netmask	compat/ifaddrs.h	/^	struct sockaddr	*ifa_netmask;	\/* Netmask of this interface. *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::sockaddr
ifa_next	compat/ifaddrs.h	/^	struct ifaddrs	*ifa_next;	\/* Pointer to the next structure. *\/$/;"	m	struct:ifaddrs	typeref:struct:ifaddrs::ifaddrs
ifaddrs	compat/ifaddrs.h	/^struct ifaddrs {$/;"	s
ifu_broadaddr	compat/ifaddrs.h	/^		struct sockaddr	*ifu_broadaddr;$/;"	m	union:ifaddrs::__anon1	typeref:struct:ifaddrs::__anon1::sockaddr
ifu_dstaddr	compat/ifaddrs.h	/^		struct sockaddr	*ifu_dstaddr;$/;"	m	union:ifaddrs::__anon1	typeref:struct:ifaddrs::__anon1::sockaddr
im	runtime/modules.h	/^		} im;$/;"	m	union:modInfo_s::__anon29	typeref:struct:modInfo_s::__anon29::__anon30
iminternalAddMsg	tools/iminternal.c	/^rsRetVal iminternalAddMsg(msg_t *pMsg)$/;"	f
iminternalConstruct	tools/iminternal.c	/^static rsRetVal iminternalConstruct(iminternal_t **ppThis)$/;"	f	file:
iminternalDestruct	tools/iminternal.c	/^static rsRetVal iminternalDestruct(iminternal_t *pThis)$/;"	f	file:
iminternalHaveMsgReady	tools/iminternal.c	/^rsRetVal iminternalHaveMsgReady(int* pbHaveOne)$/;"	f
iminternalRemoveMsg	tools/iminternal.c	/^rsRetVal iminternalRemoveMsg(msg_t **ppMsg)$/;"	f
iminternal_s	tools/iminternal.h	/^struct iminternal_s { \/* config file sysline parse entry *\/$/;"	s
iminternal_t	tools/iminternal.h	/^typedef struct iminternal_s iminternal_t;$/;"	t	typeref:struct:iminternal_s
imklogLogIntMsg	plugins/imklog/imklog.c	/^rsRetVal imklogLogIntMsg(syslog_pri_t priority, char *fmt, ...)$/;"	f
imkmsgLogIntMsg	contrib/imkmsg/imkmsg.c	/^rsRetVal imkmsgLogIntMsg(syslog_pri_t priority, char *fmt, ...)$/;"	f
imprint_s	runtime/librsgt_common.h	/^struct imprint_s {$/;"	s
imprint_t	runtime/librsgt_common.h	/^typedef struct imprint_s imprint_t;$/;"	t	typeref:struct:imprint_s
imsolaris_logerror	plugins/imsolaris/imsolaris.c	/^imsolaris_logerror(int err, char *errStr)$/;"	f
in4	runtime/sd-daemon.c	/^        struct sockaddr_in in4;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr_in	file:
in6	runtime/sd-daemon.c	/^        struct sockaddr_in6 in6;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr_in6	file:
in_dbg_showEv	plugins/imfile/imfile.c	/^in_dbg_showEv(struct inotify_event *ev)$/;"	f	file:
in_handleDirEvent	plugins/imfile/imfile.c	/^in_handleDirEvent(struct inotify_event *const ev, const int dirIdx)$/;"	f	file:
in_handleDirEventCREATE	plugins/imfile/imfile.c	/^in_handleDirEventCREATE(struct inotify_event *ev, const int dirIdx)$/;"	f	file:
in_handleDirEventDELETE	plugins/imfile/imfile.c	/^in_handleDirEventDELETE(struct inotify_event *const ev, const int dirIdx)$/;"	f	file:
in_handleFileEvent	plugins/imfile/imfile.c	/^in_handleFileEvent(struct inotify_event *ev, const wd_map_t *const etry)$/;"	f	file:
in_processEvent	plugins/imfile/imfile.c	/^in_processEvent(struct inotify_event *ev)$/;"	f	file:
in_removeFile	plugins/imfile/imfile.c	/^in_removeFile(const struct inotify_event *const ev,$/;"	f	file:
in_setupDirWatch	plugins/imfile/imfile.c	/^in_setupDirWatch(const int dirIdx)$/;"	f	file:
in_setupFileWatchDynamic	plugins/imfile/imfile.c	/^in_setupFileWatchDynamic(lstn_t *pLstn, uchar *const __restrict__ newBaseName)$/;"	f	file:
in_setupFileWatchStatic	plugins/imfile/imfile.c	/^in_setupFileWatchStatic(lstn_t *pLstn)$/;"	f	file:
in_setupInitialWatches	plugins/imfile/imfile.c	/^in_setupInitialWatches()$/;"	f	file:
incActionNbrResRtry	runtime/wti.h	/^incActionNbrResRtry(wti_t * const pWti, action_t * const pAction)$/;"	f
incActionResumeInRow	runtime/wti.h	/^incActionResumeInRow(wti_t * const pWti, action_t * const pAction)$/;"	f
index	runtime/hashtable_itr.h	/^    unsigned int index;$/;"	m	struct:hashtable_itr
indexFor	runtime/hashtable_private.h	/^indexFor(unsigned int tablelength, unsigned int hashvalue) {$/;"	f
initAll	tools/rsyslogd.c	/^initAll(int argc, char **argv)$/;"	f
initCZMQ	contrib/omczmq/omczmq.c	/^static rsRetVal initCZMQ(instanceData* pData) {$/;"	f	file:
initConfigSettings	contrib/imkmsg/imkmsg.c	/^initConfigSettings(void)$/;"	f	file:
initConfigSettings	plugins/imklog/imklog.c	/^initConfigSettings(void)$/;"	f	file:
initConfigSettings	plugins/impstats/impstats.c	/^initConfigSettings(void)$/;"	f	file:
initConfigSettings	plugins/imptcp/imptcp.c	/^initConfigSettings(void)$/;"	f	file:
initConfigVariables	action.c	/^initConfigVariables(void)$/;"	f	file:
initConn	plugins/omlibdbi/omlibdbi.c	/^static rsRetVal initConn(instanceData *pData, int bSilent)$/;"	f	file:
initCryprov	runtime/queue.c	/^initCryprov(qqueue_t *pThis, struct nvlst *lst)$/;"	f	file:
initCryprov	tools/omfile.c	/^initCryprov(instanceData *__restrict__ const pData, struct nvlst *lst)$/;"	f	file:
initCrypt	tools/rscryutil.c	/^initCrypt(FILE *eifp)$/;"	f	file:
initFunc	runtime/tcpclt.h	/^	rsRetVal (*initFunc)(void*);$/;"	m	struct:tcpclt_s
initFunc_exec_template	grammar/rainerscript.c	/^initFunc_exec_template(struct cnffunc *func)$/;"	f	file:
initFunc_lookup	grammar/rainerscript.c	/^initFunc_lookup(struct cnffunc *func)$/;"	f	file:
initFunc_prifilt	grammar/rainerscript.c	/^initFunc_prifilt(struct cnffunc *func)$/;"	f	file:
initFunc_re_match	grammar/rainerscript.c	/^initFunc_re_match(struct cnffunc *func)$/;"	f	file:
initHiredis	contrib/omhiredis/omhiredis.c	/^static rsRetVal initHiredis(wrkrInstanceData_t *pWrkrData, int bSilent)$/;"	f	file:
initLegacyConf	runtime/rsconf.c	/^initLegacyConf(void)$/;"	f	file:
initMongoDB	plugins/ommongodb/ommongodb.c	/^static rsRetVal initMongoDB(instanceData *pData, int bSilent)$/;"	f	file:
initMySQL	plugins/ommysql/ommysql.c	/^static rsRetVal initMySQL(wrkrInstanceData_t *pWrkrData, int bSilent)$/;"	f	file:
initPgSQL	plugins/ompgsql/ompgsql.c	/^static rsRetVal initPgSQL(instanceData *pData, int bSilent)$/;"	f	file:
initRabbitMQ	contrib/omrabbitmq/omrabbitmq.c	/^initRabbitMQ(instanceData *pData)$/;"	f	file:
initRainerscript	grammar/rainerscript.c	/^initRainerscript(void)$/;"	f
initSTRMListener	runtime/strmsrv.c	/^initSTRMListener(strmsrv_t *pThis, strmLstnPortList_t *pPortEntry)$/;"	f	file:
initSigprov	tools/omfile.c	/^initSigprov(instanceData *__restrict__ const pData, struct nvlst *lst)$/;"	f	file:
initTCP	tools/omfwd.c	/^initTCP(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
initTCPListener	runtime/tcpsrv.c	/^initTCPListener(tcpsrv_t *pThis, tcpLstnPortList_t *pPortEntry)$/;"	f	file:
initTLS	tests/tcpflood.c	/^initTLS(void)$/;"	f	file:
initTLS	tests/tcpflood.c	/^static void initTLS(void) {}$/;"	f	file:
initTLSSess	tests/tcpflood.c	/^initTLSSess(int i)$/;"	f	file:
initTLSSess	tests/tcpflood.c	/^static void initTLSSess(int __attribute__((unused)) i) {}$/;"	f	file:
initZMQ	contrib/omzmq3/omzmq3.c	/^static rsRetVal initZMQ(instanceData* pData) {$/;"	f	file:
initializeErrorInterleavedConext	plugins/omelasticsearch/omelasticsearch.c	/^initializeErrorInterleavedConext(wrkrInstanceData_t *pWrkrData,context *ctx){$/;"	f	file:
initializeErrorOnlyConext	plugins/omelasticsearch/omelasticsearch.c	/^initializeErrorOnlyConext(wrkrInstanceData_t *pWrkrData,context *ctx){$/;"	f	file:
initializeInterleavedConext	plugins/omelasticsearch/omelasticsearch.c	/^initializeInterleavedConext(wrkrInstanceData_t *pWrkrData,context *ctx){$/;"	f	file:
injectMsg	plugins/imdiag/imdiag.c	/^injectMsg(uchar *pszCmd, tcps_sess_t *pSess)$/;"	f	file:
ino_fd	plugins/imfile/imfile.c	/^static int ino_fd;	\/* fd for inotify calls *\/$/;"	v	file:
inode	runtime/stream.h	/^	ino_t inode;	\/* current inode for files being monitored (undefined else) *\/$/;"	m	struct:strm_s
inppblk	contrib/imczmq/imczmq.c	/^static struct cnfparamblk inppblk = {$/;"	v	typeref:struct:cnfparamblk	file:
inppblk	contrib/imzmq3/imzmq3.c	/^static struct cnfparamblk inppblk = {$/;"	v	typeref:struct:cnfparamblk	file:
inppblk	plugins/imfile/imfile.c	/^static struct cnfparamblk inppblk =$/;"	v	typeref:struct:cnfparamblk	file:
inppblk	plugins/imptcp/imptcp.c	/^static struct cnfparamblk inppblk =$/;"	v	typeref:struct:cnfparamblk	file:
inppblk	plugins/imrelp/imrelp.c	/^static struct cnfparamblk inppblk =$/;"	v	typeref:struct:cnfparamblk	file:
inppblk	plugins/imtcp/imtcp.c	/^static struct cnfparamblk inppblk =$/;"	v	typeref:struct:cnfparamblk	file:
inppblk	plugins/imudp/imudp.c	/^static struct cnfparamblk inppblk =$/;"	v	typeref:struct:cnfparamblk	file:
inppblk	plugins/imuxsock/imuxsock.c	/^static struct cnfparamblk inppblk =$/;"	v	typeref:struct:cnfparamblk	file:
inppblk	runtime/rsconf.c	/^static struct cnfparamblk inppblk =$/;"	v	typeref:struct:cnfparamblk	file:
inppdescr	contrib/imczmq/imczmq.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inppdescr	contrib/imzmq3/imzmq3.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inppdescr	plugins/imfile/imfile.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inppdescr	plugins/imptcp/imptcp.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inppdescr	plugins/imrelp/imrelp.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inppdescr	plugins/imtcp/imtcp.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inppdescr	plugins/imudp/imudp.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inppdescr	plugins/imuxsock/imuxsock.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inppdescr	runtime/rsconf.c	/^static struct cnfparamdescr inppdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
inputMode	tests/nettester.c	/^inputMode_t inputMode = inputTCP; \/* input for which tests are to be run *\/$/;"	v
inputMode2Str	tests/nettester.c	/^static char *inputMode2Str(inputMode_t mode)$/;"	f	file:
inputMode_t	tests/nettester.c	/^typedef enum { inputUDP, inputTCP } inputMode_t;$/;"	t	typeref:enum:__anon73	file:
inputProcessCnf	runtime/rsconf.c	/^inputProcessCnf(struct cnfobj *o)$/;"	f
inputProp	plugins/mmexternal/mmexternal.c	/^	int inputProp;		\/* what to provide as input to the external program? *\/$/;"	m	struct:_instanceData	file:
inputState	plugins/imptcp/imptcp.c	/^	} inputState;		\/* our current state *\/$/;"	m	struct:ptcpsess_s	typeref:enum:ptcpsess_s::__anon12	file:
inputState	runtime/tcps_sess.h	/^	} inputState;		\/* our current state *\/$/;"	m	struct:tcps_sess_s	typeref:enum:tcps_sess_s::__anon54
inputTCP	tests/nettester.c	/^typedef enum { inputUDP, inputTCP } inputMode_t;$/;"	e	enum:__anon73	file:
inputUDP	tests/nettester.c	/^typedef enum { inputUDP, inputTCP } inputMode_t;$/;"	e	enum:__anon73	file:
inputfile	plugins/impstats/statslog-analyzer.py	/^	inputfile = open(szInput, 'r')$/;"	v
inputfile	plugins/impstats/statslog-graph.py	/^	inputfile = open(szInput, 'r')$/;"	v
inputfile	plugins/impstats/statslog-splitter.py	/^	inputfile = open(szInput, 'r')$/;"	v
inputname	plugins/imudp/imudp.c	/^	uchar *inputname;$/;"	m	struct:instanceConf_s	file:
inst	contrib/imczmq/imczmq.c	/^	instanceConf_t *inst, *inst_r;$/;"	v
inst	contrib/imczmq/imczmq.c	/^instanceConf_t* inst;$/;"	v
inst	contrib/imzmq3/imzmq3.c	/^    instanceConf_t *inst, *inst_r;$/;"	v
inst	contrib/imzmq3/imzmq3.c	/^instanceConf_t* inst;$/;"	v
inst	plugins/imfile/imfile.c	/^	instanceConf_t *inst, *del;$/;"	v
inst	plugins/imfile/imfile.c	/^	instanceConf_t *inst;$/;"	v
inst	plugins/imptcp/imptcp.c	/^	instanceConf_t *inst, *del;$/;"	v
inst	plugins/imptcp/imptcp.c	/^	instanceConf_t *inst;$/;"	v
inst	plugins/imrelp/imrelp.c	/^	instanceConf_t *inst, *del;$/;"	v
inst	plugins/imrelp/imrelp.c	/^	instanceConf_t *inst;$/;"	v
inst	plugins/imtcp/imtcp.c	/^	instanceConf_t *inst, *del;$/;"	v
inst	plugins/imtcp/imtcp.c	/^	instanceConf_t *inst;$/;"	v
inst	plugins/imudp/imudp.c	/^	instanceConf_t *inst, *del;$/;"	v
inst	plugins/imudp/imudp.c	/^	instanceConf_t *inst;$/;"	v
inst	plugins/imuxsock/imuxsock.c	/^	instanceConf_t *inst, *del;$/;"	v
inst	plugins/imuxsock/imuxsock.c	/^	instanceConf_t *inst;$/;"	v
inst	plugins/pmciscoios/pmciscoios.c	/^		freeParserInst(inst);$/;"	v
inst	tools/pmrfc3164.c	/^		free(inst);$/;"	v
inst_mutex	contrib/mmsequence/mmsequence.c	/^static pthread_mutex_t inst_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
inst_r	contrib/imczmq/imczmq.c	/^	instanceConf_t *inst, *inst_r;$/;"	v
inst_r	contrib/imzmq3/imzmq3.c	/^    instanceConf_t *inst, *inst_r;$/;"	v
instanceConf_s	contrib/imczmq/imczmq.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	contrib/imzmq3/imzmq3.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	plugins/imfile/imfile.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	plugins/imptcp/imptcp.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	plugins/imrelp/imrelp.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	plugins/imtcp/imtcp.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	plugins/imudp/imudp.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	plugins/imuxsock/imuxsock.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	plugins/pmciscoios/pmciscoios.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_s	tools/pmrfc3164.c	/^struct instanceConf_s {$/;"	s	file:
instanceConf_t	runtime/typedefs.h	/^typedef struct instanceConf_s instanceConf_t;$/;"	t	typeref:struct:instanceConf_s
instanceData	contrib/mmcount/mmcount.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	contrib/mmgrok/mmgrok.c	/^}instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	contrib/mmsequence/mmsequence.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	contrib/omczmq/omczmq.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	contrib/omhiredis/omhiredis.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	contrib/omhttpfs/omhttpfs.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	contrib/omrabbitmq/omrabbitmq.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	contrib/omzmq3/omzmq3.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmanon/mmanon.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmaudit/mmaudit.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmexternal/mmexternal.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmfields/mmfields.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmjsonparse/mmjsonparse.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmnormalize/mmnormalize.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmpstrucdata/mmpstrucdata.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmsnmptrapd/mmsnmptrapd.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/mmutf8fix/mmutf8fix.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omelasticsearch/omelasticsearch.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omgssapi/omgssapi.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omhdfs/omhdfs.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omjournal/omjournal.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omkafka/omkafka.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omlibdbi/omlibdbi.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/ommail/ommail.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/ommongodb/ommongodb.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/ommysql/ommysql.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/ompgsql/ompgsql.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omprog/omprog.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omrelp/omrelp.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omruleset/omruleset.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omsnmp/omsnmp.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omstdout/omstdout.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omtesting/omtesting.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omudpspoof/omudpspoof.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	plugins/omuxsock/omuxsock.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	tools/omdiscard.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	tools/omfile.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	tools/omfwd.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	tools/ompipe.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	tools/omshell.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instanceData	tools/omusrmsg.c	/^} instanceData;$/;"	t	typeref:struct:_instanceData	file:
instarray	tests/tcpflood.c	/^} *instarray = NULL;$/;"	v	typeref:struct:instdata
instdata	tests/tcpflood.c	/^struct instdata {$/;"	s	file:
int64	runtime/typedefs.h	/^typedef long long int64;$/;"	t
intTiny	runtime/typedefs.h	/^typedef char intTiny; 	\/* 0..127! *\/$/;"	t
intctr_t	runtime/statsobj.h	/^typedef uint64 intctr_t;$/;"	t
interface_s	runtime/obj-types.h	/^struct interface_s {$/;"	s
interface_t	runtime/typedefs.h	/^typedef struct interface_s interface_t;$/;"	t	typeref:struct:interface_s
interleaved	plugins/omelasticsearch/omelasticsearch.c	/^	sbool interleaved;$/;"	m	struct:_instanceData	file:
internalMsg_ratelimiter	tools/rsyslogd.c	/^ratelimit_t *internalMsg_ratelimiter = NULL; \/* ratelimiter for rsyslog-own messages *\/$/;"	v
interval	runtime/ratelimit.h	/^	unsigned short interval;$/;"	m	struct:ratelimit_s
ioBuf	plugins/omhdfs/omhdfs.c	/^	uchar ioBuf[64*1024];$/;"	m	struct:_instanceData	file:
io_threads	contrib/imczmq/imczmq.c	/^	int io_threads;$/;"	m	struct:modConfData_s	file:
io_threads	contrib/imzmq3/imzmq3.c	/^    int             io_threads;$/;"	m	struct:modConfData_s	file:
ip	contrib/omhttpfs/omhttpfs.c	/^    uchar* ip;$/;"	m	struct:_instanceData	file:
ip	runtime/dnscache.c	/^	prop_t *ip;$/;"	m	struct:dnscache_entry_s	file:
ipIFVersProvided	contrib/imczmq/imczmq.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	contrib/imkmsg/imkmsg.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	contrib/imzmq3/imzmq3.c	/^    *ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	contrib/mmcount/mmcount.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	contrib/mmgrok/mmgrok.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	contrib/mmsequence/mmsequence.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	contrib/omczmq/omczmq.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	contrib/omhiredis/omhiredis.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* only supports rsyslog 6 configs *\/$/;"	v
ipIFVersProvided	contrib/omhttpfs/omhttpfs.c	/^    *ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	contrib/omrabbitmq/omrabbitmq.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	contrib/omzmq3/omzmq3.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* only supports rsyslog 6 configs *\/$/;"	v
ipIFVersProvided	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	contrib/pmcisconames/pmcisconames.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	contrib/pmpanngfw/pmpanngfw.c	/^    *ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	contrib/pmsnare/pmsnare.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/im3195/im3195.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imdiag/imdiag.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imfile/imfile.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imgssapi/imgssapi.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current definition *\/$/;"	v
ipIFVersProvided	plugins/imjournal/imjournal.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imklog/imklog.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/immark/immark.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/impstats/impstats.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imptcp/imptcp.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imrelp/imrelp.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imsolaris/imsolaris.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imtcp/imtcp.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imudp/imudp.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/imuxsock/imuxsock.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/mmanon/mmanon.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/mmaudit/mmaudit.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	plugins/mmexternal/mmexternal.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/mmfields/mmfields.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/mmjsonparse/mmjsonparse.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	plugins/mmnormalize/mmnormalize.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	plugins/mmpstrucdata/mmpstrucdata.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	plugins/mmutf8fix/mmutf8fix.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omelasticsearch/omelasticsearch.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omgssapi/omgssapi.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omhdfs/omhdfs.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	plugins/omjournal/omjournal.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omkafka/omkafka.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	plugins/omlibdbi/omlibdbi.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/ommail/ommail.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/ommongodb/ommongodb.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/ommysql/ommysql.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/ompgsql/ompgsql.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omprog/omprog.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omrelp/omrelp.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omruleset/omruleset.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omsnmp/omsnmp.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omstdout/omstdout.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omtesting/omtesting.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omudpspoof/omudpspoof.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/omuxsock/omuxsock.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/pmciscoios/pmciscoios.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	plugins/pmlastmsg/pmlastmsg.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/gss-misc.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/lmcry_gcry.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/lmsig_gt.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/lmsig_ksi.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION;$/;"	v
ipIFVersProvided	runtime/net.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/netstrms.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/nsd_gtls.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/nsd_ptcp.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/strmsrv.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/tcpclt.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
ipIFVersProvided	runtime/tcpsrv.c	/^	*ipIFVersProvided = CURR_MOD_IF_VERSION; \/* we only support the current interface specification *\/$/;"	v
iparams	runtime/wti.h	/^			actWrkrIParams_t *iparams;\/* dynamically sized array for transactional outputs *\/$/;"	m	struct:actWrkrInfo::__anon60::__anon61
ipv4	plugins/mmanon/mmanon.c	/^	} ipv4;$/;"	m	struct:_instanceData	typeref:struct:_instanceData::__anon16	file:
ipv4Only	contrib/imzmq3/imzmq3.c	/^    int                    ipv4Only;$/;"	m	struct:instanceConf_s	file:
ipv4Only	contrib/omzmq3/omzmq3.c	/^    int     ipv4Only;$/;"	m	struct:_instanceData	file:
ipv4masks	plugins/mmanon/mmanon.c	/^static const uint32_t ipv4masks[33] = {$/;"	v	file:
isAllowedSender	runtime/net.c	/^isAllowedSender(uchar *pszType, struct sockaddr *pFrom, const char *pszFromHost) {$/;"	f	file:
isAllowedSender	runtime/net.h	/^	int (*isAllowedSender)(uchar *pszType, struct sockaddr *pFrom, const char *pszFromHost); \/* deprecated! *\/$/;"	v
isAllowedSender2	runtime/net.c	/^static int isAllowedSender2(uchar *pszType, struct sockaddr *pFrom, const char *pszFromHost, int bChkDNS)$/;"	f	file:
isAllowedSender2	runtime/net.h	/^	int (*isAllowedSender2)(uchar *pszType, struct sockaddr *pFrom, const char *pszFromHost, int bChkDNS);$/;"	v
isCompatibleWithFeature	runtime/modules.h	/^	rsRetVal (*isCompatibleWithFeature)(syslogFeature);$/;"	m	struct:modInfo_s
isDynFile	contrib/omhttpfs/omhttpfs.c	/^    sbool isDynFile;$/;"	m	struct:_instanceData	file:
isEmpty	runtime/stream.h	/^	pthread_cond_t isEmpty;$/;"	m	struct:strm_s
isHmacPresent	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^isHmacPresent(instanceData *pData, msg_t *pMsg)$/;"	f	file:
isNegated	grammar/rainerscript.h	/^			sbool isNegated;$/;"	m	struct:cnfstmt::__anon4::__anon10
isNumeric	plugins/mmsnmptrapd/mmsnmptrapd.c	/^isNumeric(uchar *str)$/;"	f	file:
isPermittedHost	plugins/imdiag/imdiag.c	/^isPermittedHost(struct sockaddr __attribute__((unused)) *addr, char __attribute__((unused)) *fromHostFQDN,$/;"	f	file:
isPermittedHost	plugins/imgssapi/imgssapi.c	/^isPermittedHost(struct sockaddr *addr, char *fromHostFQDN, void *pUsrSrv, void*pUsrSess)$/;"	f	file:
isPermittedHost	plugins/imtcp/imtcp.c	/^isPermittedHost(struct sockaddr *addr, char *fromHostFQDN, void __attribute__((unused)) *pUsrSrv,$/;"	f	file:
isPermittedHost	runtime/strmsrv.c	/^isPermittedHost(struct sockaddr __attribute__((unused)) *addr, char __attribute__((unused)) *fromHostFQDN,$/;"	f	file:
isProp	runtime/msg.c	1206;"	d	file:
isProp	runtime/msg.c	1354;"	d	file:
isProp	runtime/queue.c	3082;"	d	file:
isProp	runtime/queue.c	3105;"	d	file:
isProp	runtime/stream.c	2048;"	d	file:
isProp	runtime/stream.c	2089;"	d	file:
isTransactional	action.h	/^	sbool	isTransactional;$/;"	m	struct:action_s
isodigit	grammar/rainerscript.c	/^isodigit(uchar c)$/;"	f	file:
iter	grammar/rainerscript.h	/^			struct cnfitr *iter;$/;"	m	struct:cnfstmt::__anon4::__anon11	typeref:struct:cnfstmt::__anon4::__anon11::cnfitr
iterateAllActions	runtime/ruleset.c	/^iterateAllActions(rsconf_t *conf, rsRetVal (*pFunc)(void*, void*), void* pParam)$/;"	f	file:
iterateAllActions_s	runtime/ruleset.c	/^typedef struct iterateAllActions_s {$/;"	s	file:
iterateAllActions_t	runtime/ruleset.c	/^} iterateAllActions_t;$/;"	t	typeref:struct:iterateAllActions_s	file:
iterator_decl	grammar/grammar.y	/^iterator_decl:  '(' VAR ITERATOR_ASSIGNMENT expr ')'	{ $$ = cnfNewIterator($2, $4); }$/;"	l
itr	plugins/omhdfs/omhdfs.c	/^    struct hashtable_itr *itr;$/;"	v	typeref:struct:hashtable_itr
iv	runtime/librsgt_common.h	/^ 	uint8_t *iv;$/;"	m	struct:block_hdr_s
j	contrib/pmpanngfw/pmpanngfw.c	/^    int j;$/;"	v
j	plugins/imjournal/imjournal.c	/^	sd_journal_close(j);$/;"	v
j	plugins/imjournal/imjournal.c	/^static sd_journal *j;$/;"	v	file:
j	plugins/imrelp/imrelp.c	/^	int i,j;$/;"	v
j	plugins/ommail/ommail.c	/^	int i, j;$/;"	v
j	plugins/omrelp/omrelp.c	/^	int i,j;$/;"	v
janitorAddEtry	runtime/janitor.c	/^janitorAddEtry(void (*cb)(void*), const char *id, void *pUsr)$/;"	f
janitorCB	tools/omfile.c	/^janitorCB(void *pUsr)$/;"	f
janitorChkDynaFiles	tools/omfile.c	/^janitorChkDynaFiles(instanceData *__restrict__ const pData)$/;"	f	file:
janitorDelEtry	runtime/janitor.c	/^janitorDelEtry(const char *__restrict__ const id)$/;"	f
janitorEtry	runtime/janitor.h	/^struct janitorEtry {$/;"	s
janitorID	tools/omfile.c	/^	char janitorID[128];		\/* holds ID for janitor calls *\/$/;"	m	struct:_instanceData	file:
janitorInterval	runtime/glbl.c	/^short janitorInterval = 10; \/* interval (in minutes) at which the janitor runs *\/$/;"	v
janitorMut	runtime/janitor.c	/^static pthread_mutex_t janitorMut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
janitorRoot	runtime/janitor.c	/^static struct janitorEtry *janitorRoot = NULL; \/* TODO: move to runConf? *\/$/;"	v	typeref:struct:janitorEtry	file:
janitorRun	runtime/janitor.c	/^janitorRun(void)$/;"	f
json	contrib/mmcount/mmcount.c	/^	struct json_object *json = NULL;$/;"	v	typeref:struct:json_object
json	contrib/mmsequence/mmsequence.c	/^	struct json_object *json;$/;"	v	typeref:struct:json_object
json	grammar/rainerscript.h	/^		struct json_object *json;$/;"	m	union:var::__anon3	typeref:struct:var::__anon3::json_object
json	plugins/external/messagemod/anon_cc_nbrs/anon_cc_nbrs.py	/^import json$/;"	i
json	plugins/external/messagemod/fac-sever-rewrite/fac-sever-rewrite.py	/^import json$/;"	i
json	plugins/external/skeletons/python/mm-python.py	/^import json$/;"	i
json	plugins/mmaudit/mmaudit.c	/^	struct json_object *json;$/;"	v	typeref:struct:json_object
json	plugins/mmjsonparse/mmjsonparse.c	/^	struct json_object *json;$/;"	v	typeref:struct:json_object
json	plugins/mmnormalize/mmnormalize.c	/^	msgAddJSON(pMsg, (uchar*)pWrkrData->pData->pszPath + 1, json, 0, 0);$/;"	v
json	plugins/mmnormalize/mmnormalize.c	/^	struct json_object *json = NULL;$/;"	v	typeref:struct:json_object
json	runtime/msg.h	/^	struct json_object *json;$/;"	m	struct:msg	typeref:struct:msg::json_object
json	tests/elasticsearch-error-format-check.py	/^import json$/;"	i
json	tests/es_response_get_msgnum.py	/^import json$/;"	i
jsonAddVal	runtime/msg.c	/^jsonAddVal(uchar *pSrc, unsigned buflen, es_str_t **dst, int escapeAll)$/;"	f	file:
jsonCookie	tests/tcpflood.c	/^static char *jsonCookie = NULL; \/* if non-NULL, use JSON format with this cookie *\/$/;"	v	file:
jsonDeepCopy	runtime/msg.c	/^jsonDeepCopy(struct json_object *src)$/;"	f	file:
jsonEncode	runtime/msg.c	/^jsonEncode(uchar **ppRes, unsigned short *pbMustBeFreed, int *pBufLen, int escapeAll)$/;"	f	file:
jsonField	runtime/msg.c	/^jsonField(struct templateEntry *pTpe, uchar **ppRes, unsigned short *pbMustBeFreed, int *pBufLen, int escapeAll)$/;"	f	file:
jsonFind	runtime/msg.c	/^jsonFind(struct json_object *jroot, msgPropDescr_t *pProp, struct json_object **jsonres)$/;"	f
jsonMerge	runtime/msg.c	/^jsonMerge(struct json_object *existing, struct json_object *json)$/;"	f	file:
jsonPathFindNext	runtime/msg.c	/^jsonPathFindNext(struct json_object *root, uchar *namestart, uchar **name, uchar *leaf,$/;"	f	file:
jsonPathFindParent	runtime/msg.c	/^jsonPathFindParent(struct json_object *jroot, uchar *name, uchar *leaf, struct json_object **parent, int bCreate)$/;"	f	file:
jsonPathGetLeaf	runtime/msg.c	/^jsonPathGetLeaf(uchar *name, int lenName)$/;"	f	file:
jsonRoot	plugins/mmaudit/mmaudit.c	/^	struct json_object *jsonRoot;$/;"	v	typeref:struct:json_object
jsonRoot	plugins/mmfields/mmfields.c	/^	uchar *jsonRoot;	\/**< container where to store fields *\/$/;"	m	struct:_instanceData	file:
jsonRoot	plugins/mmpstrucdata/mmpstrucdata.c	/^	uchar *jsonRoot;	\/**< container where to store fields *\/$/;"	m	struct:_instanceData	file:
jsonVarExtract	runtime/msg.c	/^static json_bool jsonVarExtract(struct json_object* root, const char *key, struct json_object **value) {$/;"	f	file:
json_bool	runtime/rsyslog.h	/^typedef int json_bool;$/;"	t
json_data	tests/es_response_get_msgnum.py	/^    json_data = json.load(json_file)$/;"	v
json_data	tests/es_response_get_msgnum.py	/^    json_data = json_data["hits"]$/;"	v
json_tokener	plugins/ommongodb/ommongodb.c	/^	struct json_tokener *json_tokener; \/* only if (tplName != NULL) *\/$/;"	m	struct:_instanceData	typeref:struct:_instanceData::json_tokener	file:
jval	plugins/mmaudit/mmaudit.c	/^	struct json_object *jval;$/;"	v	typeref:struct:json_object
jval	plugins/mmjsonparse/mmjsonparse.c	/^	struct json_object *jval;$/;"	v	typeref:struct:json_object
k	runtime/hashtable_private.h	/^    void *k, *v;$/;"	m	struct:entry
kafkaLogger	plugins/omkafka/omkafka.c	/^kafkaLogger(const rd_kafka_t __attribute__((unused)) *rk, int level,$/;"	f	file:
kafka_params	plugins/omkafka/omkafka.c	/^struct kafka_params {$/;"	s	file:
keepRunning	plugins/external/messagemod/anon_cc_nbrs/anon_cc_nbrs.py	/^keepRunning = 1$/;"	v
keepRunning	plugins/external/messagemod/fac-sever-rewrite/fac-sever-rewrite.py	/^keepRunning = 1$/;"	v
keepRunning	plugins/external/skeletons/python/mm-python.py	/^keepRunning = 1$/;"	v
keepRunning	plugins/external/skeletons/python/plugin.py	/^keepRunning = 1$/;"	v
keepRunning	plugins/external/solr/rsyslog_solr.py	/^keepRunning = 1$/;"	v
key	contrib/mmgrok/mmgrok.c	/^    char *key;$/;"	m	struct:result_s	file:
key	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	uchar *key;$/;"	m	struct:_instanceData	file:
key	contrib/omhiredis/omhiredis.c	/^	char *key; \/* key for QUEUE and PUBLISH modes *\/$/;"	m	struct:_instanceData	file:
key	plugins/omkafka/omkafka.c	/^	uchar *key;$/;"	m	struct:_instanceData	file:
key	runtime/hashtable/tester.c	/^struct key$/;"	s	file:
key	runtime/libgcry.h	/^	uchar *key;$/;"	m	struct:gcryctx_s
key	runtime/lookup.h	/^	uchar *key;$/;"	m	struct:lookup_string_tab_etry_s
keyCallStack	runtime/debug.c	/^static pthread_key_t keyCallStack;$/;"	v	file:
keyLen	runtime/libgcry.h	/^	size_t keyLen;$/;"	m	struct:gcryctx_s
key_equals_fn	contrib/mmcount/mmcount.c	/^key_equals_fn(void *k1, void *k2)$/;"	f	file:
key_equals_fn	plugins/imuxsock/imuxsock.c	/^key_equals_fn(void *key1, void *key2)$/;"	f	file:
key_equals_fn	runtime/dnscache.c	/^key_equals_fn(void *key1, void *key2)$/;"	f	file:
key_equals_string	runtime/hashtable.c	/^key_equals_string(void *key1, void *key2)$/;"	f
key_len	contrib/mmgrok/mmgrok.c	/^    int     key_len;$/;"	m	struct:result_s	file:
keybuf	plugins/omhdfs/omhdfs.c	/^	uchar *keybuf;$/;"	v
keyfile	tools/rscryutil.c	/^static char *keyfile = NULL;$/;"	v	file:
keyjson	contrib/mmcount/mmcount.c	/^	struct json_object *keyjson = NULL;$/;"	v	typeref:struct:json_object
keylen	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	int16_t keylen;	\/* cached length of key, to avoid recomputation *\/$/;"	m	struct:_instanceData	file:
keyprog	tools/rscryutil.c	/^static char *keyprog = NULL;$/;"	v	file:
klogAfterRun	contrib/imkmsg/kmsg.c	/^rsRetVal klogAfterRun(modConfData_t *pModConf)$/;"	f
klogAfterRun	plugins/imklog/bsd.c	/^rsRetVal klogAfterRun(modConfData_t *pModConf)$/;"	f
klogAfterRun	plugins/imklog/solaris.c	/^rsRetVal klogAfterRun(void)$/;"	f
klogFacilIntMsg	contrib/imkmsg/kmsg.c	/^klogFacilIntMsg(void)$/;"	f
klogFacilIntMsg	plugins/imklog/bsd.c	/^klogFacilIntMsg(void)$/;"	f
klogFacilIntMsg	plugins/imklog/solaris.c	/^klogFacilIntMsg(void)$/;"	f
klogLogKMsg	contrib/imkmsg/kmsg.c	/^rsRetVal klogLogKMsg(modConfData_t __attribute__((unused)) *pModConf)$/;"	f
klogLogKMsg	plugins/imklog/bsd.c	/^rsRetVal klogLogKMsg(modConfData_t *pModConf)$/;"	f
klogLogKMsg	plugins/imklog/solaris.c	/^rsRetVal klogLogKMsg(void)$/;"	f
klogWillRun	plugins/imklog/solaris.c	/^klogWillRun(void)$/;"	f
klogWillRunPostPrivDrop	contrib/imkmsg/kmsg.c	/^klogWillRunPostPrivDrop(modConfData_t *pModConf)$/;"	f
klogWillRunPostPrivDrop	plugins/imklog/bsd.c	/^klogWillRunPostPrivDrop(modConfData_t *pModConf)$/;"	f
klogWillRunPrePrivDrop	contrib/imkmsg/kmsg.c	/^klogWillRunPrePrivDrop(modConfData_t *pModConf)$/;"	f
klogWillRunPrePrivDrop	plugins/imklog/bsd.c	/^klogWillRunPrePrivDrop(modConfData_t *pModConf)$/;"	f
klog_getMaxLine	contrib/imkmsg/imkmsg.c	/^int klog_getMaxLine(void)$/;"	f
klog_getMaxLine	plugins/imklog/imklog.c	/^int klog_getMaxLine(void)$/;"	f
ksi_ctx	runtime/librsksi.h	/^	KSI_CTX *ksi_ctx;	\/* libksi's context object *\/$/;"	m	struct:rsksictx_s
ksierrctx_s	runtime/librsksi.h	/^struct ksierrctx_s {$/;"	s
ksierrctx_t	runtime/librsksi.h	/^typedef struct ksierrctx_s ksierrctx_t;$/;"	t	typeref:struct:ksierrctx_s
ksifile	runtime/librsksi.h	/^typedef struct ksifile_s *ksifile;$/;"	t	typeref:struct:ksifile_s
ksifile_s	runtime/librsksi.h	/^struct ksifile_s {$/;"	s
ksistate	runtime/librsksi.h	/^	int ksistate;	\/* status from last relevant GT.*() function call *\/$/;"	m	struct:ksierrctx_s
l	grammar/rainerscript.h	/^	struct cnfexpr *l;$/;"	m	struct:cnfexpr	typeref:struct:cnfexpr::cnfexpr
l	plugins/omgssapi/omgssapi.c	/^	register unsigned l;$/;"	v
l	plugins/omudpspoof/omudpspoof.c	/^	unsigned l;$/;"	v
l	plugins/omuxsock/omuxsock.c	/^	register unsigned l;$/;"	v
lInvocation	runtime/debug.h	/^	unsigned long lInvocation; \/* invocation (unique during program run!) of this function that locked the mutex *\/$/;"	m	struct:dbgFuncDBmutInfoEntry_s
last	runtime/lookup.h	/^	lookup_t *last;	\/* points to the last element of the template list *\/$/;"	m	struct:lookup_tables_s
last	runtime/rsconf.h	/^	struct template *last;	\/* points to the last element of the template list *\/$/;"	m	struct:templates_s	typeref:struct:templates_s::
last	runtime/ruleset.h	/^	struct cnfstmt *last;$/;"	m	struct:ruleset_s	typeref:struct:ruleset_s::cnfstmt
lastHash	runtime/librsgt_common.h	/^ 	imprint_t lastHash;$/;"	m	struct:block_hdr_s
lastLine	runtime/debug.h	/^	int lastLine[500]; \/* last line where code execution was seen *\/$/;"	m	struct:dbgCallStack_s
lastStatic	runtime/rsconf.h	/^	struct template *lastStatic; \/* last static element of the template list *\/$/;"	m	struct:templates_s	typeref:struct:templates_s::
lat	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	m	struct:record	file:
launch_query	tools/logctl.c	/^struct output* launch_query(struct queryopt *opt, struct select_doc *s_doc,$/;"	f
lcnfLast	contrib/imczmq/imczmq.c	/^static struct lstn_s *lcnfLast = NULL;$/;"	v	typeref:struct:lstn_s	file:
lcnfLast	contrib/imzmq3/imzmq3.c	/^static struct lstn_s*       lcnfLast        = NULL;$/;"	v	typeref:struct:lstn_s	file:
lcnfLast	plugins/imudp/imudp.c	/^} *lcnfRoot = NULL, *lcnfLast = NULL;$/;"	v	typeref:struct:lstn_s	file:
lcnfRoot	contrib/imczmq/imczmq.c	/^static struct lstn_s *lcnfRoot = NULL;$/;"	v	typeref:struct:lstn_s	file:
lcnfRoot	contrib/imzmq3/imzmq3.c	/^static struct lstn_s*       lcnfRoot        = NULL;$/;"	v	typeref:struct:lstn_s	file:
lcnfRoot	plugins/imudp/imudp.c	/^} *lcnfRoot = NULL, *lcnfLast = NULL;$/;"	v	typeref:struct:lstn_s	file:
lefthash	runtime/librsgt.h	/^	GTDataHash *lefthash, *righthash; \/* hashes to display if tree hash fails *\/$/;"	m	struct:gterrctx_s
lefthash	runtime/librsksi.h	/^	KSI_DataHash *lefthash, *righthash; \/* hashes to display if tree hash fails *\/$/;"	m	struct:ksierrctx_s
legacyConfAddRcpt	plugins/ommail/ommail.c	/^legacyConfAddRcpt(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
legacySetMaxMessageSize	runtime/glbl.c	/^legacySetMaxMessageSize(void __attribute__((unused)) *pVal, int64_t iNew)$/;"	f	file:
len	plugins/mmjsonparse/mmjsonparse.c	/^	rs_size_t len;$/;"	v
len	plugins/mmnormalize/mmnormalize.c	/^	rs_size_t len;$/;"	v
len	plugins/omstdout/omstdout.c	/^	size_t len;$/;"	v
len	runtime/librsgt_common.h	/^			size_t len; \/* must be size_t due to GT API! *\/$/;"	m	struct:block_sig_s::__anon26::__anon27
len	runtime/librsgt_common.h	/^	int	len;$/;"	m	struct:imprint_s
len	runtime/prop.h	/^	int len;		\/* we use int intentionally, otherwise we may get some troubles... *\/$/;"	m	struct:prop_s
lenBuf	runtime/rsyslog.h	/^	uint32_t lenBuf;  \/* length of string buffer (if string ptr) *\/$/;"	m	struct:actWrkrIParams
lenBuf	runtime/stream.h	/^		size_t lenBuf;$/;"	m	struct:strm_s::__anon67
lenCookie	plugins/mmjsonparse/mmjsonparse.c	/^	int lenCookie;$/;"	m	struct:_instanceData	file:
lenDelta	contrib/pmpanngfw/pmpanngfw.c	/^    int lenMsg, lenDelta;$/;"	v
lenDir	runtime/stream.h	/^	int lenDir;$/;"	m	struct:strm_s
lenDomainPart	runtime/net.h	/^	size_t lenDomainPart;$/;"	m	struct:permittedPeerWildcard_s
lenFName	runtime/stream.h	/^	int lenFName;$/;"	m	struct:strm_s
lenFieldName	template.h	/^	int lenFieldName;$/;"	m	struct:templateEntry
lenFilePrefix	runtime/queue.h	/^	size_t lenFilePrefix;$/;"	m	struct:queue_s
lenHOSTNAME	tools/smfile.c	/^	size_t lenHOSTNAME;$/;"	v
lenHOSTNAME	tools/smfwd.c	/^	size_t lenHOSTNAME;$/;"	v
lenHOSTNAME	tools/smtradfile.c	/^	size_t lenHOSTNAME;$/;"	v
lenHOSTNAME	tools/smtradfwd.c	/^	size_t lenHOSTNAME;$/;"	v
lenHash	runtime/librsgt.h	/^	uint8_t lenHash;$/;"	m	struct:rsgtstatefile
lenHash	runtime/librsksi.h	/^	uint8_t lenHash;$/;"	m	struct:rsksistatefile
lenHdr	runtime/librsgt_common.h	/^	uint8_t lenHdr; \/* length of raw header *\/$/;"	m	struct:tlvrecord_s
lenHost	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	int lenHost;$/;"	v
lenID	runtime/obj-types.h	/^	size_t lenID; \/* length of the ID string *\/$/;"	m	struct:objInfo_s
lenMSG	tools/smfile.c	/^	size_t lenMSG;$/;"	v
lenMSG	tools/smfwd.c	/^	size_t lenMSG;$/;"	v
lenMSG	tools/smtradfile.c	/^	size_t lenMSG;$/;"	v
lenMSG	tools/smtradfwd.c	/^	size_t lenMSG;$/;"	v
lenMsg	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	/^	*(p2parse + lenMsg + 1)  = '\\0';$/;"	v
lenMsg	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	/^	*(p2parse + lenMsg) = '\\n';$/;"	v
lenMsg	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	/^	int lenMsg;$/;"	v
lenMsg	contrib/pmcisconames/pmcisconames.c	/^	*(p2parse + lenMsg + 1)  = '\\0';$/;"	v
lenMsg	contrib/pmcisconames/pmcisconames.c	/^	*(p2parse + lenMsg) = '\\n';$/;"	v
lenMsg	contrib/pmcisconames/pmcisconames.c	/^	int lenMsg;$/;"	v
lenMsg	contrib/pmpanngfw/pmpanngfw.c	/^    int lenMsg, lenDelta;$/;"	v
lenMsg	contrib/pmsnare/pmsnare.c	/^	int lenMsg;$/;"	v
lenMsg	plugins/mmanon/mmanon.c	/^	int lenMsg;$/;"	v
lenMsg	plugins/mmfields/mmfields.c	/^	int lenMsg;$/;"	v
lenMsg	plugins/mmutf8fix/mmutf8fix.c	/^	int lenMsg;$/;"	v
lenMsg	plugins/omrelp/omrelp.c	/^	size_t lenMsg;$/;"	v
lenMsg	plugins/pmciscoios/pmciscoios.c	/^	int lenMsg;$/;"	v
lenMsg	plugins/pmlastmsg/pmlastmsg.c	/^	int lenMsg;$/;"	v
lenMsg	tools/pmrfc3164.c	/^	int lenMsg;$/;"	v
lenMsg	tools/pmrfc5424.c	/^	int lenMsg;$/;"	v
lenName	runtime/msg.c	/^	short lenName;$/;"	m	struct:__anon35	file:
lenPRI	tools/smfwd.c	/^	size_t lenPRI;$/;"	v
lenPRI	tools/smtradfwd.c	/^	size_t lenPRI;$/;"	v
lenPrevMsg	runtime/tcpclt.h	/^	size_t lenPrevMsg;$/;"	m	struct:tcpclt_s
lenQIFNam	runtime/queue.h	/^	size_t lenQIFNam;$/;"	m	struct:queue_s
lenRcvBuf	plugins/imudp/imudp.c	/^	int lenRcvBuf;$/;"	v
lenRcvBuf	plugins/ommail/ommail.c	/^			size_t lenRcvBuf;$/;"	m	struct:wrkrInstanceData::__anon22::__anon23	file:
lenRcvBuf	runtime/nsd_gtls.h	/^	int lenRcvBuf;		\/**< -1: empty, 0: connection closed, 1..NSD_GTLS_MAX_RCVBUF-1: data of that size present *\/$/;"	m	struct:nsd_gtls_s
lenRespBuf	plugins/mmexternal/mmexternal.c	/^	int lenRespBuf;		\/* actual nbr of chars in response buffer *\/$/;"	m	struct:wrkrInstanceData	file:
lenSever	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	int lenSever;$/;"	v
lenSpoolDir	runtime/queue.h	/^	size_t lenSpoolDir;$/;"	m	struct:queue_s
lenStr	runtime/rsyslog.h	/^	uint32_t lenStr;  \/* length of current string (if string ptr) *\/$/;"	m	struct:actWrkrIParams
lenStrucData	runtime/msg.h	/^	uint16_t lenStrucData;	\/* (cached) length of STRUCTURED-DATA *\/$/;"	m	struct:msg
lenTAG	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	int lenTAG;$/;"	v
lenTAG	tools/smfile.c	/^	int lenTAG;$/;"	v
lenTAG	tools/smfwd.c	/^	int lenTAG;$/;"	v
lenTAG	tools/smtradfile.c	/^	int lenTAG;$/;"	v
lenTAG	tools/smtradfwd.c	/^	int lenTAG;$/;"	v
lenTag	plugins/imfile/imfile.c	/^	size_t lenTag;$/;"	m	struct:lstn_s	file:
lenTag	plugins/omjournal/omjournal.c	/^	int lenTag;$/;"	v
lenTagID	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	int lenTagID;		\/* cached: length of tag ID, for performance reasons *\/$/;"	m	struct:_instanceData	file:
lenTimeStamp	tools/smfile.c	/^	size_t lenTimeStamp;$/;"	v
lenTimeStamp	tools/smfwd.c	/^	size_t lenTimeStamp;$/;"	v
lenTotal	tools/smfile.c	/^	size_t lenTotal;$/;"	v
lenTotal	tools/smfwd.c	/^	size_t lenTotal;$/;"	v
lenTotal	tools/smtradfile.c	/^	size_t lenTotal;$/;"	v
lenTotal	tools/smtradfwd.c	/^	size_t lenTotal;$/;"	v
len_syslog_fac_names	runtime/msg.c	/^static short len_syslog_fac_names[LOG_NFACILITIES] = { 4, 4, 4, 6, 4, 6, 3,$/;"	v	file:
len_syslog_severity_names	runtime/msg.c	/^static short len_syslog_severity_names[8] = { 5, 5, 4, 3, 7, 6, 4, 5 };$/;"	v	file:
lencoll	plugins/ommongodb/ommongodb.c	/^	unsigned lendb, lencoll;$/;"	v
lendb	plugins/ommongodb/ommongodb.c	/^	unsigned lendb, lencoll;$/;"	v
libnet_handle	plugins/omudpspoof/omudpspoof.c	/^	libnet_t *libnet_handle;$/;"	m	struct:wrkrInstanceData	file:
line	runtime/debug.h	/^	int line;$/;"	m	struct:dbgFuncDB_s
line	tests/filewriter.c	/^struct line {$/;"	s	file:
linenbrs	tests/filewriter.c	/^static int linenbrs = 0;$/;"	v	file:
linger	contrib/imzmq3/imzmq3.c	/^    int                    linger;$/;"	m	struct:instanceConf_s	file:
linger	contrib/omzmq3/omzmq3.c	/^    int     linger;$/;"	m	struct:_instanceData	file:
linkedListCookie_t	runtime/linkedlist.h	/^typedef llElt_t* linkedListCookie_t;	\/* this type avoids exposing internals and keeps us flexible *\/$/;"	t
linkedList_s	runtime/linkedlist.h	/^struct linkedList_s { \/* config file sysline parse entry *\/$/;"	s
linkedList_t	runtime/linkedlist.h	/^typedef struct linkedList_s linkedList_t;$/;"	t	typeref:struct:linkedList_s
linklist	runtime/queue.h	/^		} linklist;$/;"	m	struct:queue_s::__anon48	typeref:struct:queue_s::__anon48::__anon50
listenPort	plugins/im3195/im3195.c	/^static int listenPort = 601;$/;"	v	file:
listeners	plugins/imfile/imfile.c	/^	dirInfoFiles_t *listeners;$/;"	m	struct:fileTable_s	file:
listeners	plugins/imuxsock/imuxsock.c	/^static lstn_t *listeners;$/;"	v	file:
llAppend	runtime/linkedlist.c	/^rsRetVal llAppend(linkedList_t *pThis, void *pKey, void *pData)$/;"	f
llCmdHdlrs	runtime/cfsysline.h	/^	linkedList_t llCmdHdlrs;	\/* linked list of command handlers *\/$/;"	m	struct:cslCmd_s
llDestroy	runtime/linkedlist.c	/^rsRetVal llDestroy(linkedList_t *pThis)$/;"	f
llDestroyElt	runtime/linkedlist.c	/^static rsRetVal llDestroyElt(linkedList_t *pList, llElt_t *pElt)$/;"	f	file:
llDestroyRootElt	runtime/linkedlist.c	/^rsRetVal llDestroyRootElt(linkedList_t *pThis)$/;"	f
llEltConstruct	runtime/linkedlist.c	/^static rsRetVal llEltConstruct(llElt_t **ppThis, void *pKey, void *pData)$/;"	f	file:
llElt_s	runtime/linkedlist.h	/^struct llElt_s { \/* config file sysline parse entry *\/$/;"	s
llElt_t	runtime/linkedlist.h	/^typedef struct llElt_s llElt_t;$/;"	t	typeref:struct:llElt_s
llExecFunc	runtime/linkedlist.c	/^rsRetVal llExecFunc(linkedList_t *pThis, rsRetVal (*pFunc)(void*, void*), void* pParam)$/;"	f
llFind	runtime/linkedlist.c	/^rsRetVal llFind(linkedList_t *pThis, void *pKey, void **ppData)$/;"	f
llFindAndDelete	runtime/linkedlist.c	/^rsRetVal llFindAndDelete(linkedList_t *pThis, void *pKey)$/;"	f
llFindElt	runtime/linkedlist.c	/^static rsRetVal llFindElt(linkedList_t *pThis, void *pKey, llElt_t **ppElt, llElt_t **ppEltPrev)$/;"	f	file:
llGetKey	runtime/linkedlist.c	/^rsRetVal llGetKey(llElt_t *pThis, void *ppData)$/;"	f
llGetNextElt	runtime/linkedlist.c	/^rsRetVal llGetNextElt(linkedList_t *pThis, linkedListCookie_t *ppElt, void **ppUsr)$/;"	f
llGetNumElts	runtime/linkedlist.c	/^rsRetVal llGetNumElts(linkedList_t *pThis, int *piCnt)$/;"	f
llInit	runtime/linkedlist.c	/^rsRetVal llInit(linkedList_t *pThis, rsRetVal (*pEltDestructor)(), rsRetVal (*pKeyDestructor)(void*), int (*pCmpOp)())$/;"	f
llMsgs	tools/iminternal.c	/^static linkedList_t llMsgs;$/;"	v	file:
llRulesets	runtime/rsconf.h	/^	linkedList_t llRulesets; \/* this is NOT a pointer - no typo here ;) *\/$/;"	m	struct:rulesets_s
llThrds	threads.c	/^static linkedList_t llThrds;$/;"	v	file:
llUnlinkAndDelteElt	runtime/linkedlist.c	/^static rsRetVal llUnlinkAndDelteElt(linkedList_t *pThis, llElt_t *pElt, llElt_t *pEltPrev)$/;"	f	file:
llUnlinkElt	runtime/linkedlist.c	/^static rsRetVal llUnlinkElt(linkedList_t *pThis, llElt_t *pElt, llElt_t *pEltPrev)$/;"	f	file:
lm	runtime/modules.h	/^		} lm;$/;"	m	union:modInfo_s::__anon29	typeref:struct:modInfo_s::__anon29::__anon32
lmcry_gcry	runtime/lmcry_gcry.h	/^PROTOTYPEObj(lmcry_gcry);$/;"	v
lmcry_gcryCURR_IF_VERSION	runtime/lmcry_gcry.h	26;"	d
lmcry_gcry_if_t	runtime/lmcry_gcry.h	/^typedef cryprov_if_t lmcry_gcry_if_t;$/;"	t
lmcry_gcry_s	runtime/lmcry_gcry.h	/^struct lmcry_gcry_s {$/;"	s
lmcry_gcry_t	runtime/lmcry_gcry.h	/^typedef struct lmcry_gcry_s lmcry_gcry_t;$/;"	t	typeref:struct:lmcry_gcry_s
lmsig_gt	runtime/lmsig_gt.h	/^PROTOTYPEObj(lmsig_gt);$/;"	v
lmsig_gtCURR_IF_VERSION	runtime/lmsig_gt.h	28;"	d
lmsig_gt_if_t	runtime/lmsig_gt.h	/^typedef sigprov_if_t lmsig_gt_if_t;$/;"	t
lmsig_gt_s	runtime/lmsig_gt.h	/^struct lmsig_gt_s {$/;"	s
lmsig_gt_t	runtime/lmsig_gt.h	/^typedef struct lmsig_gt_s lmsig_gt_t;$/;"	t	typeref:struct:lmsig_gt_s
lmsig_ksi	runtime/lmsig_ksi.h	/^PROTOTYPEObj(lmsig_ksi);$/;"	v
lmsig_ksiCURR_IF_VERSION	runtime/lmsig_ksi.h	28;"	d
lmsig_ksi_if_t	runtime/lmsig_ksi.h	/^typedef sigprov_if_t lmsig_ksi_if_t;$/;"	t
lmsig_ksi_s	runtime/lmsig_ksi.h	/^struct lmsig_ksi_s {$/;"	s
lmsig_ksi_t	runtime/lmsig_ksi.h	/^typedef struct lmsig_ksi_s lmsig_ksi_t;$/;"	t	typeref:struct:lmsig_ksi_s
ln	tests/filewriter.c	/^	char *ln;$/;"	m	struct:line	file:
load	runtime/rsconf.c	/^load(rsconf_t **cnf, uchar *confFile)$/;"	f
loadBuildInModules	runtime/rsconf.c	/^loadBuildInModules()$/;"	f	file:
loadConf	runtime/rsconf.c	/^rsconf_t *loadConf = NULL;\/* the config currently being loaded (no concurrent config load supported!) *\/$/;"	v
loadDrvr	runtime/netstrms.c	/^loadDrvr(netstrms_t *pThis)$/;"	f	file:
loadDrvr	runtime/nspoll.c	/^loadDrvr(nspoll_t *pThis)$/;"	f	file:
loadDrvr	runtime/nssel.c	/^loadDrvr(nssel_t *pThis)$/;"	f	file:
loadJournalState	plugins/imjournal/imjournal.c	/^loadJournalState()$/;"	f	file:
loadModConf	contrib/imkmsg/imkmsg.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	contrib/imkmsg/imkmsg.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	contrib/mmcount/mmcount.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	contrib/mmcount/mmcount.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	contrib/mmgrok/mmgrok.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	contrib/mmgrok/mmgrok.c	/^static  modConfData_t   *loadModConf = NULL;$/;"	v	file:
loadModConf	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	contrib/mmsequence/mmsequence.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	contrib/mmsequence/mmsequence.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/imfile/imfile.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/imfile/imfile.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/imklog/imklog.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/imklog/imklog.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/immark/immark.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/immark/immark.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/impstats/impstats.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/impstats/impstats.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/imptcp/imptcp.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/imptcp/imptcp.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/imrelp/imrelp.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/imrelp/imrelp.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/imtcp/imtcp.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/imtcp/imtcp.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/imudp/imudp.c	/^	loadModConf = NULL; \/* done loading *\/$/;"	v
loadModConf	plugins/imudp/imudp.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/imudp/imudp.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/imuxsock/imuxsock.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/imuxsock/imuxsock.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/mmanon/mmanon.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/mmanon/mmanon.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/mmfields/mmfields.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/mmfields/mmfields.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/mmjsonparse/mmjsonparse.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/mmjsonparse/mmjsonparse.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/mmnormalize/mmnormalize.c	/^	loadModConf = NULL; \/* done loading *\/$/;"	v
loadModConf	plugins/mmnormalize/mmnormalize.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/mmnormalize/mmnormalize.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/mmpstrucdata/mmpstrucdata.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/mmpstrucdata/mmpstrucdata.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/mmutf8fix/mmutf8fix.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/mmutf8fix/mmutf8fix.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/omjournal/omjournal.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/omjournal/omjournal.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/omlibdbi/omlibdbi.c	/^	loadModConf = NULL; \/* done loading *\/$/;"	v
loadModConf	plugins/omlibdbi/omlibdbi.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/omlibdbi/omlibdbi.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/omudpspoof/omudpspoof.c	/^	loadModConf = NULL; \/* done loading *\/$/;"	v
loadModConf	plugins/omudpspoof/omudpspoof.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/omudpspoof/omudpspoof.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	plugins/omuxsock/omuxsock.c	/^	loadModConf = NULL; \/* done loading *\/$/;"	v
loadModConf	plugins/omuxsock/omuxsock.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	plugins/omuxsock/omuxsock.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	tools/omfile.c	/^	loadModConf = NULL; \/* done loading *\/$/;"	v
loadModConf	tools/omfile.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	tools/omfile.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	tools/omfwd.c	/^	loadModConf = NULL; \/* done loading *\/$/;"	v
loadModConf	tools/omfwd.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	tools/omfwd.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadModConf	tools/ompipe.c	/^	loadModConf = NULL; \/* done loading *\/$/;"	v
loadModConf	tools/ompipe.c	/^	loadModConf = pModConf;$/;"	v
loadModConf	tools/ompipe.c	/^static modConfData_t *loadModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
loadTCPSupport	tools/omfwd.c	/^loadTCPSupport(void)$/;"	f	file:
loadlimit	runtime/hashtable_private.h	/^    unsigned int loadlimit;$/;"	m	struct:hashtable
localClientIP	plugins/omrelp/omrelp.c	/^	uchar *localClientIP;$/;"	m	struct:_instanceData	file:
localName	runtime/dnscache.c	/^	prop_t *localName; \/* only local name, without domain part (if configured so) *\/$/;"	m	struct:dnscache_entry_s	file:
localRet	contrib/mmcount/mmcount.c	/^	rsRetVal localRet = msgGetJSONPropJSON(pMsg, &pProp, &keyjson);$/;"	v
localRet	contrib/mmgrok/mmgrok.c	/^	rsRetVal localRet;$/;"	v
localRet	plugins/impstats/impstats.c	/^	rsRetVal localRet;$/;"	v
localRet	plugins/mmaudit/mmaudit.c	/^	rsRetVal localRet;$/;"	v
localRet	plugins/mmjsonparse/mmjsonparse.c	/^	rsRetVal localRet;$/;"	v
localRet	plugins/mmnormalize/mmnormalize.c	/^	rsRetVal localRet;$/;"	v
localRet	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	rsRetVal localRet;$/;"	v
localRet	plugins/ommongodb/ommongodb.c	/^	rsRetVal localRet;$/;"	v
localRet	plugins/omruleset/omruleset.c	/^	rsRetVal localRet;$/;"	v
localRet	plugins/omstdout/omstdout.c	/^	rsRetVal localRet;$/;"	v
localRet	tools/omfwd.c	/^	rsRetVal localRet;$/;"	v
localvars	runtime/msg.h	/^	struct json_object *localvars;$/;"	m	struct:msg	typeref:struct:msg::json_object
lock	plugins/omkafka/omkafka.c	/^	pthread_rwlock_t lock;$/;"	m	struct:s_dynaTopicCacheEntry	file:
lockLn	runtime/debug.c	/^	int lockLn;	\/* the actual line where the mutex was locked *\/$/;"	m	struct:dbgMutLog_s	file:
lockLn	runtime/debug.h	/^	int lockLn; \/* line where it was locked (inside our func): -1 means mutex is not locked *\/$/;"	m	struct:dbgFuncDBmutInfoEntry_s
logFunction	runtime/nsd_gtls.c	/^static void logFunction(int level, const char *msg)$/;"	f	file:
log_type	contrib/pmpanngfw/pmpanngfw.c	/^    uint64 log_type;$/;"	v
log_type_t	contrib/pmpanngfw/pmpanngfw.c	/^} log_type_t;$/;"	t	typeref:struct:__anon2	file:
log_types	contrib/pmpanngfw/pmpanngfw.c	/^const log_type_t log_types[] = {$/;"	v
logfd	plugins/impstats/impstats.c	/^	int logfd; \/* fd if logging to file, or -1 if closed *\/$/;"	m	struct:modConfData_s	file:
logfile	plugins/impstats/impstats.c	/^	char *logfile;$/;"	m	struct:modConfData_s	file:
loglineindexes	plugins/impstats/statslog_regex.py	/^loglineindexes = []$/;"	v
loglineregexes	plugins/impstats/statslog_regex.py	/^loglineregexes = []$/;"	v
logmsgInternal	tools/rsyslogd.c	/^logmsgInternal(int iErr, const syslog_pri_t pri, const uchar *const msg, int flags)$/;"	f
logmsgInternalSelf	tools/rsyslogd.c	/^logmsgInternalSelf(const int iErr, const syslog_pri_t pri, const size_t lenMsg,$/;"	f	file:
lon	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	m	struct:record	file:
long_options	tools/logctl.c	/^static struct option long_options[] = $/;"	v	typeref:struct:option	file:
long_options	tools/rscryutil.c	/^static struct option long_options[] = $/;"	v	typeref:struct:option	file:
long_options	tools/rsgtutil.c	/^static struct option long_options[] = $/;"	v	typeref:struct:option	file:
lookup	plugins/external/messagemod/anon_cc_nbrs/anon_cc_nbrs.py	/^	def lookup(match):$/;"	f	function:onReceive
lookupBuildTable	runtime/lookup.c	/^lookupBuildTable(lookup_t *pThis, struct json_object *jroot)$/;"	f
lookupClassExit	runtime/lookup.c	/^lookupClassExit(void)$/;"	f
lookupClassInit	runtime/lookup.c	/^lookupClassInit(void)$/;"	f
lookupDestruct	runtime/lookup.c	/^lookupDestruct(lookup_t *pThis)$/;"	f
lookupDoHUP	runtime/lookup.c	/^lookupDoHUP()$/;"	f
lookupFindTable	runtime/lookup.c	/^lookupFindTable(uchar *name)$/;"	f
lookupInitCnf	runtime/lookup.c	/^lookupInitCnf(lookup_tables_t *lu_tabs)$/;"	f
lookupKey_estr	runtime/lookup.c	/^lookupKey_estr(lookup_t *pThis, uchar *key)$/;"	f
lookupNew	runtime/lookup.c	/^lookupNew(lookup_t **ppThis)$/;"	f
lookupProcessCnf	runtime/lookup.c	/^lookupProcessCnf(struct cnfobj *o)$/;"	f
lookupReadFile	runtime/lookup.c	/^lookupReadFile(lookup_t *pThis)$/;"	f	file:
lookupReload	runtime/lookup.c	/^lookupReload(lookup_t *pThis)$/;"	f	file:
lookupSeverityCode	plugins/mmsnmptrapd/mmsnmptrapd.c	/^lookupSeverityCode(instanceData *pData, uchar *sever)$/;"	f	file:
lookup_s	runtime/lookup.h	/^struct lookup_s {$/;"	s
lookup_string_tab_etry_s	runtime/lookup.h	/^struct lookup_string_tab_etry_s {$/;"	s
lookup_string_tab_etry_t	runtime/typedefs.h	/^typedef struct lookup_string_tab_etry_s lookup_string_tab_etry_t;$/;"	t	typeref:struct:lookup_string_tab_etry_s
lookup_t	runtime/typedefs.h	/^typedef struct lookup_s lookup_t;$/;"	t	typeref:struct:lookup_s
lookup_tables_s	runtime/lookup.h	/^struct lookup_tables_s {$/;"	s
lookup_tables_t	runtime/typedefs.h	/^typedef struct lookup_tables_s lookup_tables_t;$/;"	t	typeref:struct:lookup_tables_s
lower	tests/tcpflood.c	/^	unsigned long long lower;$/;"	m	struct:instdata	file:
lseek64	runtime/stream.c	70;"	d	file:
lstRcpt	plugins/ommail/ommail.c	/^			toRcpt_t *lstRcpt;$/;"	m	struct:_instanceData::__anon20::__anon21	file:
lstRcpt	plugins/ommail/ommail.c	/^	toRcpt_t *lstRcpt;$/;"	m	struct:configSettings_s	file:
lstRcptDestruct	plugins/ommail/ommail.c	/^static void lstRcptDestruct(toRcpt_t *pRoot)$/;"	f	file:
lstn	contrib/imczmq/imczmq.c	/^	struct lstn_s *lstn, *lstn_r;$/;"	v	typeref:struct:lstn_s
lstn	contrib/imzmq3/imzmq3.c	/^    struct lstn_s *lstn, *lstn_r;$/;"	v	typeref:struct:lstn_s
lstn	plugins/imudp/imudp.c	/^	struct lstn_s *lstn, *lstnDel;$/;"	v	typeref:struct:lstn_s
lstnActivity	plugins/imptcp/imptcp.c	/^lstnActivity(ptcplstn_t *pLstn)$/;"	f	file:
lstnAdd	plugins/imfile/imfile.c	/^lstnAdd(lstn_t **newLstn)$/;"	f	file:
lstnDel	plugins/imfile/imfile.c	/^lstnDel(lstn_t *pLstn)$/;"	f	file:
lstnDel	plugins/imudp/imudp.c	/^	struct lstn_s *lstn, *lstnDel;$/;"	v	typeref:struct:
lstnDup	plugins/imfile/imfile.c	/^lstnDup(lstn_t **ppExisting, uchar *const __restrict__ newname)$/;"	f	file:
lstnIP	plugins/imptcp/imptcp.c	/^	uchar *lstnIP;			\/* which IP we should listen on? *\/$/;"	m	struct:configSettings_s	file:
lstnIP	plugins/imptcp/imptcp.c	/^	uchar *lstnIP;			\/* which IP we should listen on? *\/$/;"	m	struct:ptcpsrv_s	file:
lstnIP	plugins/imtcp/imtcp.c	/^	uchar *lstnIP;			\/* which IP we should listen on? *\/$/;"	m	struct:configSettings_s	file:
lstn_r	contrib/imczmq/imczmq.c	/^	struct lstn_s *lstn, *lstn_r;$/;"	v	typeref:struct:
lstn_r	contrib/imzmq3/imzmq3.c	/^    struct lstn_s *lstn, *lstn_r;$/;"	v	typeref:struct:
lstn_s	contrib/imczmq/imczmq.c	/^struct lstn_s {$/;"	s	file:
lstn_s	contrib/imzmq3/imzmq3.c	/^struct lstn_s {$/;"	s	file:
lstn_s	plugins/imfile/imfile.c	/^typedef struct lstn_s {$/;"	s	file:
lstn_s	plugins/imudp/imudp.c	/^static struct lstn_s {$/;"	s	file:
lstn_s	plugins/imuxsock/imuxsock.c	/^typedef struct lstn_s {$/;"	s	file:
lstn_t	plugins/imfile/imfile.c	/^} lstn_t;$/;"	t	typeref:struct:lstn_s	file:
lstn_t	plugins/imuxsock/imuxsock.c	/^} lstn_t;$/;"	t	typeref:struct:lstn_s	file:
ltrim	runtime/conf.c	/^ltrim(char *src)$/;"	f	file:
lu_tabs	runtime/rsconf.h	/^	lookup_tables_t lu_tabs;$/;"	m	struct:rsconf_s
magic	runtime/debug.h	/^	unsigned magic;$/;"	m	struct:dbgFuncDB_s
main	grammar/testdriver.c	/^main(int argc, char *argv[])$/;"	f
main	plugins/external/skeletons/C/c_sample.c	/^main(int argc, char *argv[])$/;"	f
main	plugins/external/skeletons/java/SimplePlugin.java	/^	public static void main(String[] args) throws IOException {$/;"	m	class:SimplePlugin
main	plugins/omelasticsearch/cJSON/test.c	/^int main (int argc, const char * argv[]) {$/;"	f
main	runtime/hashtable/tester.c	/^main(int argc, char **argv)$/;"	f
main	tests/chkseq.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/diagtalker.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/filewriter.c	/^void main(int argc, char *argv[])$/;"	f
main	tests/historical/DiagTalker.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:DiagTalker
main	tests/inputfilegen.c	/^int main(int argc, char* argv[])$/;"	f
main	tests/minitcpsrvr.c	/^main(int argc, char *argv[])$/;"	f
main	tests/msleep.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/nettester.c	/^int main(int argc, char *argv[], char *envp[])$/;"	f
main	tests/ourtail.c	/^int main(int __attribute__((unused)) argc, char __attribute__((unused)) *argv[])$/;"	f
main	tests/randomgen.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/syslog_caller.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/tcpflood.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/testconfgen.c	/^int main(int argc, char *argv[])$/;"	f
main	tests/uxsockrcvr.c	/^main(int argc, char *argv[])$/;"	f
main	tools/gethostn.c	/^int main(int __attribute__((unused)) argc, char __attribute__((unused)) *argv[])$/;"	f
main	tools/logctl.c	/^int main (int argc, char *argv[])$/;"	f
main	tools/logsigner.c	/^main(int argc, char *argv[])$/;"	f
main	tools/msggen.c	/^int main(int __attribute__((unused)) argc, char __attribute__((unused)) *argv[])$/;"	f
main	tools/rscryutil.c	/^main(int argc, char *argv[])$/;"	f
main	tools/rsgtutil.c	/^main(int argc, char *argv[])$/;"	f
main	tools/rsyslogd.c	/^main(int argc, char **argv)$/;"	f
main	tools/syncdemo.c	/^main(int argc, char *argv[])$/;"	f
mainQ	runtime/rsconf.h	/^	queuecnf_t mainQ;	\/* main queue parameters *\/$/;"	m	struct:globals_s
mainloop	tools/rsyslogd.c	/^mainloop(void)$/;"	f	file:
mainqCnfObj	runtime/glbl.c	/^	SIMP_PROP(mainqCnfObj);$/;"	v
mainqCnfObj	runtime/glbl.c	/^static struct cnfobj *mainqCnfObj = NULL;\/* main queue object, to be used later in startup sequence *\/$/;"	v	typeref:struct:cnfobj	file:
maj_stat	plugins/omgssapi/omgssapi.c	/^OM_uint32 maj_stat, min_stat;$/;"	v
makeFileParentDirs	runtime/srutils.c	/^int makeFileParentDirs(const uchar *const szFile, size_t lenFile, mode_t mode,$/;"	f
malloc_fn	plugins/omelasticsearch/cJSON/cjson.h	/^      void *(*malloc_fn)(size_t sz);$/;"	m	struct:cJSON_Hooks
mask	contrib/pmpanngfw/pmpanngfw.c	/^    uint64 mask;$/;"	m	struct:__anon2	file:
masterLstn	plugins/imfile/imfile.c	/^	struct lstn_s *masterLstn;\/* if dynamic file (via wildcard), this points to the configured$/;"	m	struct:lstn_s	typeref:struct:lstn_s::lstn_s	file:
maxAtOnce	plugins/external/skeletons/python/plugin.py	/^maxAtOnce = 1024  # max nbr of messages that are processed within one batch$/;"	v
maxAtOnce	plugins/external/solr/rsyslog_solr.py	/^maxAtOnce = 5000  # max nbr of messages that are processed within one batch$/;"	v
maxElem	runtime/batch.h	/^	int maxElem;		\/* maximum number of elements that this batch supports *\/$/;"	m	struct:batch_s
maxElem	runtime/typedefs.h	/^	short	maxElem;	\/* maximum number of Elements *\/$/;"	m	struct:multi_submit_s
maxIParams	runtime/wti.h	/^			int maxIParams;	\/* current max *\/$/;"	m	struct:actWrkrInfo::__anon60::__anon61
maxLenRespBuf	plugins/mmexternal/mmexternal.c	/^	int maxLenRespBuf;	\/* (current) maximum length of response buffer *\/$/;"	m	struct:wrkrInstanceData	file:
maxLinesAtOnce	plugins/imfile/imfile.c	/^	int maxLinesAtOnce;$/;"	m	struct:instanceConf_s	file:
maxLinesAtOnce	plugins/imfile/imfile.c	/^	int maxLinesAtOnce;$/;"	m	struct:lstn_s	file:
maxLinesAtOnce	plugins/imfile/imfile.c	/^	int64 maxLinesAtOnce;	\/* how many lines to process in a row? *\/$/;"	m	struct:configSettings_s	file:
maxMsgSize	contrib/imzmq3/imzmq3.c	/^    int                    maxMsgSize;$/;"	m	struct:instanceConf_s	file:
maxMsgSize	contrib/omzmq3/omzmq3.c	/^    int     maxMsgSize;$/;"	m	struct:_instanceData	file:
maxRuntime	tests/tcpflood.c	/^	unsigned long maxRuntime;$/;"	m	struct:runstats	file:
maxRuntime	tools/syncdemo.c	/^static unsigned maxRuntime = 0;$/;"	v	file:
maxfds	plugins/imuxsock/imuxsock.c	/^	int maxfds;$/;"	v
maxfds	runtime/nsdsel_ptcp.h	/^	int maxfds;$/;"	m	struct:nsdsel_ptcp_s
md	plugins/ommail/ommail.c	/^	} md;	\/* mode-specific data *\/$/;"	m	struct:_instanceData	typeref:union:_instanceData::__anon20	file:
md	plugins/ommail/ommail.c	/^	} md;	\/* mode-specific data *\/$/;"	m	struct:wrkrInstanceData	typeref:union:wrkrInstanceData::__anon22	file:
message	contrib/omhttpfs/omhttpfs.c	/^    char message[1024];$/;"	m	struct:_HTTPFS_JSON_REMOTE_EXCEPTION	file:
minRuntime	tests/tcpflood.c	/^	unsigned long minRuntime;$/;"	m	struct:runstats	file:
minRuntime	tools/syncdemo.c	/^static unsigned minRuntime = 999999999;$/;"	v	file:
min_stat	plugins/omgssapi/omgssapi.c	/^OM_uint32 maj_stat, min_stat;$/;"	v
minute	runtime/syslogd-types.h	/^	intTiny minute;$/;"	m	struct:syslogTime
missed	runtime/ratelimit.h	/^	unsigned missed;$/;"	m	struct:ratelimit_s
mkSMTPTimestamp	plugins/ommail/ommail.c	/^mkSMTPTimestamp(uchar *pszBuf, size_t lenBuf)$/;"	f	file:
mmSequenceModes	contrib/mmsequence/mmsequence.c	/^enum mmSequenceModes {$/;"	g	file:
mmSequencePerInstance	contrib/mmsequence/mmsequence.c	/^	mmSequencePerInstance,$/;"	e	enum:mmSequenceModes	file:
mmSequencePerKey	contrib/mmsequence/mmsequence.c	/^	mmSequencePerKey$/;"	e	enum:mmSequenceModes	file:
mmSequenceRandom	contrib/mmsequence/mmsequence.c	/^	mmSequenceRandom,$/;"	e	enum:mmSequenceModes	file:
mod	runtime/modules.h	/^	} mod;$/;"	m	struct:modInfo_s	typeref:union:modInfo_s::__anon29
modCnf	runtime/rsconf.h	/^	void *modCnf;		\/* pointer to the input module conf *\/$/;"	m	struct:cfgmodules_etry_s
modConfData_s	contrib/imczmq/imczmq.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	contrib/imkmsg/imkmsg.h	/^struct modConfData_s {$/;"	s
modConfData_s	contrib/imzmq3/imzmq3.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	contrib/mmcount/mmcount.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	contrib/mmgrok/mmgrok.c	/^struct modConfData_s{$/;"	s	file:
modConfData_s	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	contrib/mmsequence/mmsequence.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imdiag/imdiag.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imfile/imfile.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imgssapi/imgssapi.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imklog/imklog.h	/^struct modConfData_s {$/;"	s
modConfData_s	plugins/immark/immark.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/impstats/impstats.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imptcp/imptcp.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imrelp/imrelp.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imtcp/imtcp.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imudp/imudp.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/imuxsock/imuxsock.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/mmanon/mmanon.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/mmfields/mmfields.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/mmjsonparse/mmjsonparse.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/mmnormalize/mmnormalize.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/mmpstrucdata/mmpstrucdata.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/mmutf8fix/mmutf8fix.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/omjournal/omjournal.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/omlibdbi/omlibdbi.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/omudpspoof/omudpspoof.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	plugins/omuxsock/omuxsock.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	tools/omfile.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	tools/omfwd.c	/^struct modConfData_s {$/;"	s	file:
modConfData_s	tools/ompipe.c	/^struct modConfData_s {$/;"	s	file:
modConfData_t	runtime/typedefs.h	/^typedef struct modConfData_s modConfData_t;$/;"	t	typeref:struct:modConfData_s
modExit	runtime/modules.h	/^	rsRetVal (*modExit)(void);		\/* called before termination or module unload *\/$/;"	m	struct:modInfo_s
modExitIminternal	tools/iminternal.c	/^rsRetVal modExitIminternal(void)$/;"	f
modGetID	runtime/modules.h	/^	rsRetVal (*modGetID)(void **);		\/* get its unique ID from module *\/$/;"	m	struct:modInfo_s
modGetName	runtime/modules.c	/^modGetName(modInfo_t *pThis)$/;"	f
modGetStateName	runtime/modules.c	/^static uchar *modGetStateName(modInfo_t *pThis)$/;"	f	file:
modInfo_s	runtime/modules.h	/^struct modInfo_s {$/;"	s
modInfo_t	runtime/typedefs.h	/^typedef struct modInfo_s modInfo_t;$/;"	t	typeref:struct:modInfo_s
modInit	runtime/modules.h	/^	rsRetVal (*modInit)(int, int*, rsRetVal(**)());		\/* initialize the module *\/$/;"	m	struct:modInfo_s
modInitIminternal	tools/iminternal.c	/^rsRetVal modInitIminternal(void)$/;"	f
modPrepareUnload	runtime/modules.c	/^modPrepareUnload(modInfo_t *pThis)$/;"	f	file:
modPrintList	runtime/modules.c	/^static void modPrintList(void)$/;"	f	file:
modQueryEtryPt	runtime/modules.h	/^	rsRetVal (*modQueryEtryPt)(uchar *name, rsRetVal (**EtryPoint)()); \/* query entry point addresses *\/$/;"	m	struct:modInfo_s
modUnlinkAndDestroy	runtime/modules.c	/^modUnlinkAndDestroy(modInfo_t **ppThis)$/;"	f	file:
modUnloadAndDestructAll	runtime/modules.c	/^modUnloadAndDestructAll(eModLinkType_t modLinkTypesToUnload)$/;"	f	file:
modUsrAdd	runtime/modules.c	/^modUsrAdd(modInfo_t *pThis, char *pszUsr)$/;"	f	file:
modUsrDel	runtime/modules.c	/^modUsrDel(modInfo_t *pThis, char *pszUsr)$/;"	f	file:
modUsrPrint	runtime/modules.c	/^modUsrPrint(modInfo_t *pThis)$/;"	f	file:
modUsrPrintAll	runtime/modules.c	/^	modUsrPrintAll(); \/* debug aid - TODO: integrate with debug.c, at least the settings! *\/$/;"	v
modUsrPrintAll	runtime/modules.c	/^modUsrPrintAll(void)$/;"	f
modUsr_s	runtime/modules.h	/^typedef struct modUsr_s {$/;"	s
modUsr_t	runtime/modules.h	/^} modUsr_t;$/;"	t	typeref:struct:modUsr_s
mode	contrib/mmsequence/mmsequence.c	/^	enum mmSequenceModes mode;$/;"	m	struct:_instanceData	typeref:enum:_instanceData::mmSequenceModes	file:
mode	contrib/omhiredis/omhiredis.c	/^	int mode; \/* mode constant *\/$/;"	m	struct:_instanceData	file:
mode	plugins/impstats/impstats.c	/^	char *mode;$/;"	v
mode	plugins/mmanon/mmanon.c	/^	int8_t mode;$/;"	m	struct:_instanceData	file:
mode	plugins/mmutf8fix/mmutf8fix.c	/^	uint8_t mode;		\/* operations mode *\/$/;"	m	struct:_instanceData	file:
mode	plugins/omtesting/omtesting.c	/^		mode;$/;"	m	struct:_instanceData	typeref:enum:_instanceData::__anon25	file:
mode	runtime/libgcry.h	/^	int mode;$/;"	m	struct:gcryctx_s
mode	tools/rscryutil.c	/^} mode = MD_DECRYPT;$/;"	v	typeref:enum:__anon76	file:
mode	tools/rsgtutil.c	/^} mode = MD_DUMP;$/;"	v	typeref:enum:__anon77	file:
modeDescription	contrib/omhiredis/omhiredis.c	/^	char *modeDescription; \/* mode description *\/$/;"	m	struct:_instanceData	file:
modpblk	contrib/imczmq/imczmq.c	/^static struct cnfparamblk modpblk = {$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	contrib/imzmq3/imzmq3.c	/^static struct cnfparamblk modpblk = {$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/imfile/imfile.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/imjournal/imjournal.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/imklog/imklog.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/immark/immark.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/impstats/impstats.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/imptcp/imptcp.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/imrelp/imrelp.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/imtcp/imtcp.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/imudp/imudp.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/imuxsock/imuxsock.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/mmnormalize/mmnormalize.c	/^static struct cnfparamblk modpblk = {$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/omlibdbi/omlibdbi.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/omudpspoof/omudpspoof.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	plugins/omuxsock/omuxsock.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	runtime/lookup.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	tools/omfile.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	tools/omfwd.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpblk	tools/ompipe.c	/^static struct cnfparamblk modpblk =$/;"	v	typeref:struct:cnfparamblk	file:
modpdescr	contrib/imczmq/imczmq.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	contrib/imzmq3/imzmq3.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/imfile/imfile.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/imjournal/imjournal.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/imklog/imklog.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/immark/immark.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/impstats/impstats.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/imptcp/imptcp.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/imrelp/imrelp.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/imtcp/imtcp.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/imudp/imudp.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/imuxsock/imuxsock.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/mmnormalize/mmnormalize.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/omlibdbi/omlibdbi.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/omudpspoof/omudpspoof.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	plugins/omuxsock/omuxsock.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	runtime/lookup.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	tools/omfile.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	tools/omfwd.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
modpdescr	tools/ompipe.c	/^static struct cnfparamdescr modpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
module	runtime/modules.h	/^PROTOTYPEObj(module);$/;"	v
moduleCURR_IF_VERSION	runtime/modules.h	184;"	d
moduleConstruct	runtime/modules.c	/^static rsRetVal moduleConstruct(modInfo_t **pThis)$/;"	f	file:
moduleDestruct	runtime/modules.c	/^static void moduleDestruct(modInfo_t *pThis)$/;"	f	file:
modules	runtime/rsconf.h	/^	cfgmodules_t modules;$/;"	m	struct:rsconf_s
modulesProcessCnf	runtime/modules.c	/^modulesProcessCnf(struct cnfobj *o)$/;"	f
month	runtime/syslogd-types.h	/^	intTiny month;$/;"	m	struct:syslogTime
msg	plugins/mmanon/mmanon.c	/^	uchar *msg;$/;"	v
msg	plugins/mmfields/mmfields.c	/^	uchar *msg;$/;"	v
msg	plugins/mmutf8fix/mmutf8fix.c	/^	uchar *msg;$/;"	v
msg	runtime/msg.h	/^PROTOTYPEObjClassInit(msg);$/;"	v
msg	runtime/msg.h	/^struct msg {$/;"	s
msg	tools/logctl.c	/^	const char *msg;$/;"	m	struct:ofields	file:
msgAddJSON	runtime/msg.c	/^msgAddJSON(msg_t * const pM, uchar *name, struct json_object *json, int force_reset, int sharedReference)$/;"	f
msgAddMetadata	runtime/msg.c	/^msgAddMetadata(msg_t *const __restrict__ pMsg,$/;"	f
msgBaseConstruct	runtime/msg.c	/^static inline rsRetVal msgBaseConstruct(msg_t **ppThis)$/;"	f	file:
msgConstruct	runtime/msg.c	/^rsRetVal msgConstruct(msg_t **ppThis)$/;"	f
msgConstructForDeserializer	runtime/msg.c	/^msgConstructForDeserializer(msg_t **ppThis)$/;"	f
msgConstructWithTime	runtime/msg.c	/^rsRetVal msgConstructWithTime(msg_t **ppThis, struct syslogTime *stTime, time_t ttGenTime)$/;"	f
msgConsumer	tools/rsyslogd.c	/^msgConsumer(void __attribute__((unused)) *notNeeded, batch_t *pBatch, wti_t *pWti)$/;"	f	file:
msgDelJSON	runtime/msg.c	/^msgDelJSON(msg_t * const pM, uchar *name)$/;"	f
msgFlags	runtime/msg.h	/^	int	msgFlags;	\/* flags associated with this message *\/$/;"	m	struct:msg
msgGetJSONMESG	runtime/msg.c	/^msgGetJSONMESG(msg_t *__restrict__ const pMsg)$/;"	f
msgGetJSONPropJSON	runtime/msg.c	/^msgGetJSONPropJSON(msg_t * const pMsg, msgPropDescr_t *pProp, struct json_object **pjson)$/;"	f
msgGetJSONPropJSONorString	runtime/msg.c	/^msgGetJSONPropJSONorString(msg_t * const pMsg, msgPropDescr_t *pProp, struct json_object **pjson,$/;"	f
msgGetProtocolVersion	runtime/msg.h	/^msgGetProtocolVersion(msg_t *pM)$/;"	f
msgNum	tests/tcpflood.c	/^static int msgNum = 0;	\/* initial message number to start with *\/$/;"	v	file:
msgPRI	tests/tcpflood.c	/^static char *msgPRI = "167";$/;"	v	file:
msgProp	template.h	/^			msgPropDescr_t msgProp;	\/* property to be used *\/$/;"	m	struct:templateEntry::__anon69::__anon71
msgPropDescrDestruct	runtime/msg.c	/^msgPropDescrDestruct(msgPropDescr_t *pProp)$/;"	f
msgPropDescrFill	runtime/msg.c	/^msgPropDescrFill(msgPropDescr_t *pProp, uchar *name, int nameLen)$/;"	f
msgPropDescr_s	runtime/typedefs.h	/^struct msgPropDescr_s {$/;"	s
msgPropDescr_t	runtime/typedefs.h	/^typedef struct msgPropDescr_s msgPropDescr_t;$/;"	t	typeref:struct:msgPropDescr_s
msgQueryInterface	runtime/msg.c	/^rsRetVal msgQueryInterface(void) { return RS_RET_NOT_IMPLEMENTED; }$/;"	f
msgSetFromSockinfo	runtime/msg.c	/^msgSetFromSockinfo(msg_t *pThis, struct sockaddr_storage *sa){ $/;"	f
msgSetJSONFromVar	runtime/msg.c	/^msgSetJSONFromVar(msg_t * const pMsg, uchar *varname, struct var *v, int force_reset)$/;"	f
msgSetPRI	runtime/msg.h	/^msgSetPRI(msg_t *const __restrict__ pMsg, syslog_pri_t pri)$/;"	f
msgSetPropViaJSON	runtime/msg.c	/^msgSetPropViaJSON(msg_t *__restrict__ const pMsg, const char *name, struct json_object *json, int sharedReference)$/;"	f	file:
msgSetUUID	runtime/msg.c	/^static void msgSetUUID(msg_t * const pM)$/;"	f	file:
msg_t	runtime/typedefs.h	/^typedef struct msg msg_t;$/;"	t	typeref:struct:msg
msg_to_json	contrib/mmgrok/mmgrok.c	/^msg_to_json(GList *list,instanceData *pData)$/;"	f	file:
msgcounter	plugins/pmciscoios/pmciscoios.c	/^	long long msgcounter;$/;"	v
msgend	contrib/pmpanngfw/pmpanngfw.c	/^    uchar *msgend;$/;"	v
mtu	plugins/omudpspoof/omudpspoof.c	/^	int	mtu;$/;"	m	struct:_instanceData	file:
multiSub	plugins/imfile/imfile.c	/^	multi_submit_t multiSub;$/;"	m	struct:lstn_s	file:
multiSubmitFlush	tools/rsyslogd.c	/^multiSubmitFlush(multi_submit_t *pMultiSub)$/;"	f
multiSubmitMsg	tools/rsyslogd.c	/^multiSubmitMsg(multi_submit_t *pMultiSub) \/* backward compat. level *\/$/;"	f
multiSubmitMsg2	tools/rsyslogd.c	/^multiSubmitMsg2(multi_submit_t *pMultiSub)$/;"	f
multi_submit_s	runtime/typedefs.h	/^struct multi_submit_s {$/;"	s
multi_submit_t	runtime/typedefs.h	/^typedef struct multi_submit_s multi_submit_t;$/;"	t	typeref:struct:multi_submit_s
multicastHops	contrib/imzmq3/imzmq3.c	/^    int                    multicastHops;$/;"	m	struct:instanceConf_s	file:
multicastHops	contrib/omzmq3/omzmq3.c	/^    int     multicastHops;$/;"	m	struct:_instanceData	file:
mut	contrib/mmcount/mmcount.c	/^	pthread_mutex_t mut;$/;"	m	struct:_instanceData	file:
mut	plugins/mmexternal/mmexternal.c	/^	pthread_mutex_t mut;	\/* make sure only one instance is active *\/$/;"	m	struct:_instanceData	file:
mut	plugins/omhdfs/omhdfs.c	/^	pthread_mutex_t mut;$/;"	m	struct:__anon19	file:
mut	plugins/omprog/omprog.c	/^	pthread_mutex_t mut;	\/* make sure only one instance is active *\/$/;"	m	struct:_instanceData	file:
mut	plugins/omtesting/omtesting.c	/^	pthread_mutex_t mut;$/;"	m	struct:_instanceData	file:
mut	runtime/debug.c	/^	pthread_mutex_t *mut;$/;"	m	struct:dbgMutLog_s	file:
mut	runtime/msg.h	/^	pthread_mutex_t mut;$/;"	m	struct:msg
mut	runtime/queue.h	/^	pthread_mutex_t *mut; \/* mutex for enqueing and dequeueing messages *\/$/;"	m	struct:queue_s
mut	runtime/ratelimit.h	/^	pthread_mutex_t mut;	\/**< mutex if thread-safe operation desired *\/$/;"	m	struct:ratelimit_s
mut	runtime/stream.h	/^	pthread_mutex_t mut;\/* mutex for flush in async mode *\/$/;"	m	struct:strm_s
mut	tools/syncdemo.c	/^static pthread_mutex_t mut;$/;"	v	file:
mutAction	action.h	/^	pthread_mutex_t mutAction; \/* primary action mutex *\/$/;"	m	struct:action_s
mutCallStack	runtime/debug.c	/^static pthread_mutex_t mutCallStack;$/;"	v	file:
mutClock	plugins/omkafka/omkafka.c	/^	DESTROY_ATOMIC_HELPER_MUT(mutClock);$/;"	v
mutClock	plugins/omkafka/omkafka.c	/^	INIT_ATOMIC_HELPER_MUT(mutClock);$/;"	v
mutClock	plugins/omkafka/omkafka.c	/^static pthread_mutex_t mutClock;$/;"	v	file:
mutClock	tools/omfile.c	/^	DESTROY_ATOMIC_HELPER_MUT(mutClock);$/;"	v
mutClock	tools/omfile.c	/^	INIT_ATOMIC_HELPER_MUT(mutClock);$/;"	v
mutClock	tools/omfile.c	/^static pthread_mutex_t mutClock;$/;"	v	file:
mutCtr	runtime/statsobj.h	/^	pthread_mutex_t mutCtr;		\/* to guard counter linked-list ops *\/$/;"	m	struct:statsobj_s
mutDoAct	contrib/omczmq/omczmq.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	contrib/omczmq/omczmq.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	contrib/omczmq/omczmq.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDoAct	contrib/omrabbitmq/omrabbitmq.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	contrib/omrabbitmq/omrabbitmq.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	contrib/omrabbitmq/omrabbitmq.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDoAct	contrib/omzmq3/omzmq3.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	contrib/omzmq3/omzmq3.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	contrib/omzmq3/omzmq3.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDoAct	plugins/omgssapi/omgssapi.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	plugins/omgssapi/omgssapi.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	plugins/omgssapi/omgssapi.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDoAct	plugins/omhdfs/omhdfs.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	plugins/omhdfs/omhdfs.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	plugins/omhdfs/omhdfs.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDoAct	plugins/omlibdbi/omlibdbi.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	plugins/omlibdbi/omlibdbi.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	plugins/omlibdbi/omlibdbi.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDoAct	plugins/ommongodb/ommongodb.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	plugins/ommongodb/ommongodb.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	plugins/ommongodb/ommongodb.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDoAct	plugins/ompgsql/ompgsql.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	plugins/ompgsql/ompgsql.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	plugins/ompgsql/ompgsql.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDoAct	plugins/omuxsock/omuxsock.c	/^	pthread_mutex_lock(&mutDoAct);$/;"	v
mutDoAct	plugins/omuxsock/omuxsock.c	/^	pthread_mutex_unlock(&mutDoAct);$/;"	v
mutDoAct	plugins/omuxsock/omuxsock.c	/^static pthread_mutex_t mutDoAct = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mutDynCache	plugins/omkafka/omkafka.c	/^	pthread_mutex_t mutDynCache;$/;"	m	struct:_instanceData	file:
mutErrFile	plugins/omelasticsearch/omelasticsearch.c	/^	pthread_mutex_t mutErrFile;$/;"	m	struct:_instanceData	file:
mutErrFile	plugins/omkafka/omkafka.c	/^	pthread_mutex_t mutErrFile;$/;"	m	struct:_instanceData	file:
mutEvtLst	runtime/nsdpoll_ptcp.h	/^	pthread_mutex_t mutEvtLst;$/;"	m	struct:nsdpoll_ptcp_s
mutFuncDBList	runtime/debug.c	/^static pthread_mutex_t mutFuncDBList;$/;"	v	file:
mutGtlsStrerror	runtime/nsd_gtls.c	/^	pthread_mutex_destroy(&mutGtlsStrerror);$/;"	v
mutGtlsStrerror	runtime/nsd_gtls.c	/^static pthread_mutex_t mutGtlsStrerror; \/**< a mutex protecting the potentially non-reentrant gtlStrerror() function *\/$/;"	v	file:
mutInfo	runtime/debug.h	/^	dbgFuncDBmutInfoEntry_t mutInfo[5];$/;"	m	struct:dbgFuncDB_s
mutLibnet	plugins/omudpspoof/omudpspoof.c	/^	pthread_mutex_destroy(&mutLibnet);$/;"	v
mutLibnet	plugins/omudpspoof/omudpspoof.c	/^pthread_mutex_t mutLibnet;$/;"	v
mutMutLog	runtime/debug.c	/^static pthread_mutex_t mutMutLog;$/;"	v	file:
mutObjGlobalOp	runtime/obj.c	/^pthread_mutex_t mutObjGlobalOp;	\/* mutex to guard global operations of the object system *\/$/;"	v
mutSessLst	plugins/imptcp/imptcp.c	/^	pthread_mutex_t mutSessLst;$/;"	m	struct:ptcpsrv_s	file:
mutStats	runtime/statsobj.c	/^static pthread_mutex_t mutStats;$/;"	v	file:
mutTerminateInputs	runtime/glbl.c	/^	DESTROY_ATOMIC_HELPER_MUT(mutTerminateInputs);$/;"	v
mutTerminateInputs	runtime/glbl.c	/^	INIT_ATOMIC_HELPER_MUT(mutTerminateInputs);$/;"	v
mutThrd	threads.h	/^	pthread_mutex_t mutThrd;\/* mutex for handling long-running operations and shutdown *\/$/;"	m	struct:thrdInfo
mutThrdMgmt	runtime/queue.h	/^	pthread_mutex_t mutThrdMgmt; \/* mutex for the queue's thread management *\/$/;"	m	struct:queue_s
mutTrimCtr	runtime/msg.c	/^	INIT_ATOMIC_HELPER_MUT(mutTrimCtr);$/;"	v
mutTrimCtr	runtime/msg.c	/^static pthread_mutex_t mutTrimCtr;	 \/* mutex to handle malloc trim *\/$/;"	v	file:
mutWrite	tools/omfile.c	/^	pthread_mutex_t mutWrite; \/* guard against multiple instances writing to single file *\/$/;"	m	struct:_instanceData	file:
mutWrite	tools/ompipe.c	/^	pthread_mutex_t mutWrite; \/* guard against multiple instances writing to same pipe *\/$/;"	m	struct:_instanceData	file:
mutWrkrDataTable	action.h	/^	pthread_mutex_t mutWrkrDataTable; \/* protects table structures *\/$/;"	m	struct:action_s
mutWtp	runtime/wtp.h	/^	pthread_mutex_t mutWtp; \/* mutex for the wtp's thread management *\/$/;"	m	struct:wtp_s
mut_json	runtime/msg.h	/^	pthread_mutex_t mut_json;$/;"	m	struct:msg
mut_localvars	runtime/msg.h	/^	pthread_mutex_t mut_localvars;$/;"	m	struct:msg
mutdbgprint	runtime/debug.c	/^static pthread_mutex_t mutdbgprint;$/;"	v	file:
mutex	tools/syncdemo.c	/^typedef enum { part, none, atomic, cas, spinlock, mutex, semaphore } syncType_t;$/;"	e	enum:__anon79	file:
mutexCancelCleanup	runtime/srutils.c	/^mutexCancelCleanup(void *arg)$/;"	f
mutexOp	runtime/debug.c	/^	short mutexOp;$/;"	m	struct:dbgMutLog_s	file:
myCertFile	plugins/imrelp/imrelp.c	/^	uchar *myCertFile;$/;"	m	struct:instanceConf_s	file:
myCertFile	plugins/omrelp/omrelp.c	/^	uchar *myCertFile;$/;"	m	struct:_instanceData	file:
myChart	plugins/impstats/statslog-graph.py	/^		myChart = pygal.Bar(chartCfg)$/;"	v
myChart	plugins/impstats/statslog-graph.py	/^		myChart = pygal.Line(chartCfg)$/;"	v
myDateTime	plugins/impstats/statslog-graph.py	/^						myDateTime = datetime.datetime.strptime(aLineData[iFieldNum],"%Y\/%b\/%d %H:%M:%S")$/;"	v
myDeflate	runtime/zlibw.c	/^static int myDeflate(z_streamp strm, int flush)$/;"	f	file:
myDeflateEnd	runtime/zlibw.c	/^static int myDeflateEnd(z_streamp strm)$/;"	f	file:
myDeflateInit	runtime/zlibw.c	/^static int myDeflateInit(z_streamp strm, int level)$/;"	f	file:
myDeflateInit2	runtime/zlibw.c	/^static int myDeflateInit2(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy)$/;"	f	file:
myPrivKeyFile	plugins/imrelp/imrelp.c	/^	uchar *myPrivKeyFile;$/;"	m	struct:instanceConf_s	file:
myPrivKeyFile	plugins/omrelp/omrelp.c	/^	uchar *myPrivKeyFile;$/;"	m	struct:_instanceData	file:
mygetnameinfo	runtime/dnscache.c	/^mygetnameinfo(const struct sockaddr *sa, socklen_t salen,$/;"	f	file:
mygetnameinfo	runtime/net.c	/^mygetnameinfo(const struct sockaddr *sa, socklen_t salen,$/;"	f	file:
n	grammar/rainerscript.h	/^		long long n;$/;"	m	union:var::__anon3
nConfParams	plugins/omkafka/omkafka.c	/^	int nConfParams;$/;"	m	struct:_instanceData	file:
nConnDrops	tests/tcpflood.c	/^static long nConnDrops = 0;	\/* counter: number of time connection was dropped (-D option) *\/$/;"	v	file:
nCopies	tests/filewriter.c	/^static long long nCopies = 1;$/;"	v	file:
nDataRecordCound	plugins/impstats/statslog-graph.py	/^nDataRecordCound = 0 $/;"	v
nDiscardedAlarm	plugins/impstats/statslog-analyzer.py	/^		nDiscardedAlarm = int(arg[17:]) $/;"	v
nDiscardedAlarm	plugins/impstats/statslog-analyzer.py	/^nDiscardedAlarm = 1	# Number of discards to occur until a problem is reported.$/;"	v
nElem	runtime/batch.h	/^	int nElem;		\/* actual number of element in this entry *\/$/;"	m	struct:batch_s
nElem	runtime/typedefs.h	/^	short	nElem;		\/* current number of Elements, points to the next one FREE *\/$/;"	m	struct:multi_submit_s
nElemDeq	runtime/batch.h	/^	int nElemDeq;		\/* actual number of elements dequeued (and thus to be deleted) - see comment above! *\/$/;"	m	struct:batch_s
nElemDeq	runtime/queue.h	/^	int	nElemDeq;	\/* numbe of elements that were dequeued and as such must now be discarded *\/$/;"	m	struct:toDeleteLst_s
nEntries	runtime/dnscache.c	/^	unsigned nEntries;$/;"	m	struct:dnscache_s	file:
nEvents	plugins/imptcp/imptcp.c	/^	int nEvents;$/;"	v
nEvictedAlarm	plugins/impstats/statslog-analyzer.py	/^			nEvictedAlarm = 5 # Resett to default if value is invalid$/;"	v
nEvictedAlarm	plugins/impstats/statslog-analyzer.py	/^		nEvictedAlarm = int(arg[15:])$/;"	v
nEvictedAlarm	plugins/impstats/statslog-analyzer.py	/^nEvictedAlarm = 5	# In Percent, when this specific amount of requests raises the evicted counter, a problem is reported. $/;"	v
nEvictedInPercent	plugins/impstats/statslog-analyzer.py	/^					nEvictedInPercent = aProblem['evicted'] \/ (aProblem['requests']\/100)$/;"	v
nFailedAlarm	plugins/impstats/statslog-analyzer.py	/^		nFailedAlarm = int(arg[14:]) $/;"	v
nFailedAlarm	plugins/impstats/statslog-analyzer.py	/^nFailedAlarm = 1	# Number of fails to occur until a problem is reported. $/;"	v
nInactive	tools/omfile.c	/^	short nInactive;	\/* number of minutes not writen (STATIC files only) *\/$/;"	m	struct:_instanceData	file:
nInactive	tools/omfile.c	/^	short nInactive;	\/* number of minutes not writen - for close timeout *\/$/;"	m	struct:s_dynaFileCacheEntry	file:
nLineCount	plugins/impstats/statslog-graph.py	/^nLineCount = 0 $/;"	v
nLogDeq	runtime/queue.h	/^	int	nLogDeq;	\/* number of elements currently logically dequeued *\/$/;"	m	struct:queue_s
nLogFileCount	plugins/impstats/statslog-analyzer.py	/^nLogFileCount = 0$/;"	v
nLogFileCount	plugins/impstats/statslog-splitter.py	/^nLogFileCount = 0$/;"	v
nLogLineNum	plugins/impstats/statslog-analyzer.py	/^nLogLineNum = 0$/;"	v
nLogLineNum	plugins/impstats/statslog-splitter.py	/^nLogLineNum = 0$/;"	v
nLstn	plugins/imuxsock/imuxsock.c	/^	int nLstn;$/;"	v
nMaxDataCount	plugins/impstats/statslog-graph.py	/^		nMaxDataCount = int(arg[16:]) $/;"	v
nMaxDataCount	plugins/impstats/statslog-graph.py	/^nMaxDataCount = 25$/;"	v
nMultiSub	plugins/imfile/imfile.c	/^	int nMultiSub;$/;"	m	struct:instanceConf_s	file:
nParams	grammar/rainerscript.h	/^	unsigned short nParams;$/;"	m	struct:cnffunc
nParams	grammar/rainerscript.h	/^	unsigned short nParams;$/;"	m	struct:cnfparamblk
nPartitions	plugins/omkafka/omkafka.c	/^	int nPartitions;$/;"	m	struct:_instanceData	file:
nRecords	plugins/imfile/imfile.c	/^	int nRecords; \/**< How many records did we process before persisting the stream? *\/$/;"	m	struct:lstn_s	file:
nRecords	runtime/librsgt.h	/^	uint64_t nRecords;  \/* current number of records in current block *\/$/;"	m	struct:gtfile_s
nRecords	runtime/librsksi.h	/^	uint64_t nRecords;  \/* current number of records in current block *\/$/;"	m	struct:ksifile_s
nRoots	runtime/librsgt.h	/^	int8_t nRoots;$/;"	m	struct:gtfile_s
nRoots	runtime/librsksi.h	/^	int8_t nRoots;$/;"	m	struct:ksifile_s
nSent	plugins/omrelp/omrelp.c	/^	unsigned nSent; \/* number msgs sent - for rebind support *\/$/;"	m	struct:wrkrInstanceData	file:
nTimesCalled	runtime/debug.h	/^	unsigned long nTimesCalled;$/;"	m	struct:dbgFuncDB_s
nTopicConfParams	plugins/omkafka/omkafka.c	/^	int nTopicConfParams;$/;"	m	struct:_instanceData	file:
nUsed	runtime/dnscache.c	/^	unsigned nUsed;$/;"	m	struct:dnscache_entry_s	file:
nUsers	plugins/omhdfs/omhdfs.c	/^	int nUsers;$/;"	m	struct:__anon19	file:
nWdmap	plugins/imfile/imfile.c	/^static int nWdmap;$/;"	v	file:
nWrkr	action.h	/^	int nWrkr;$/;"	m	struct:action_s
nXmit	tools/omfwd.c	/^	int nXmit;		\/* number of transmissions since last (re-)bind *\/$/;"	m	struct:wrkrInstanceData	file:
name	contrib/imzmq3/imzmq3.c	/^    char*  name;$/;"	m	struct:_socket_type	file:
name	contrib/imzmq3/imzmq3.c	/^    char* name;$/;"	m	struct:_socket_action	file:
name	contrib/omzmq3/omzmq3.c	/^    char*  name;$/;"	m	struct:socket_type	file:
name	contrib/omzmq3/omzmq3.c	/^    char* name;$/;"	m	struct:socket_action	file:
name	grammar/rainerscript.h	/^			es_str_t *name;$/;"	m	struct:cnfstmt::__anon4::__anon8
name	grammar/rainerscript.h	/^	char *name;	\/**< not a es_str_t to ease definition in code *\/$/;"	m	struct:cnfparamdescr
name	grammar/rainerscript.h	/^	char *name;$/;"	m	struct:cnfvar
name	grammar/rainerscript.h	/^  es_str_t *name;$/;"	m	struct:nvlst
name	plugins/imrelp/imrelp.c	/^		uchar **name;$/;"	m	struct:instanceConf_s::__anon14	file:
name	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	uchar *name;$/;"	m	struct:severMap_s	file:
name	plugins/omhdfs/omhdfs.c	/^	uchar	*name;$/;"	m	struct:__anon19	file:
name	plugins/omkafka/omkafka.c	/^	const char *name;$/;"	m	struct:kafka_params	file:
name	plugins/omrelp/omrelp.c	/^		uchar **name;$/;"	m	struct:_instanceData::__anon24	file:
name	runtime/lookup.h	/^	uchar *name;$/;"	m	struct:lookup_s
name	runtime/ratelimit.h	/^	char *name;	\/**< rate limiter name, e.g. for user messages *\/$/;"	m	struct:ratelimit_s
name	runtime/statsobj.h	/^	uchar *name;$/;"	m	struct:ctr_s
name	runtime/statsobj.h	/^	uchar *name;$/;"	m	struct:statsobj_s
name	runtime/typedefs.h	/^	uchar *name;		\/* name and lenName are only set for dynamic *\/$/;"	m	struct:msgPropDescr_s
name	tests/testconfgen.c	/^static char *name[128];$/;"	v	file:
name	threads.h	/^	uchar *name;		\/* a thread name, mainly for user interaction *\/$/;"	m	struct:thrdInfo
name	tools/rsyslogd.c	/^	uchar *name;$/;"	m	struct:queuefilenames_s	file:
nameLen	runtime/typedefs.h	/^	int nameLen;		\/* properties (JSON) *\/$/;"	m	struct:msgPropDescr_s
nbrActions	runtime/rsconf.h	/^	unsigned nbrActions;		\/* number of actions *\/$/;"	m	struct:actions_s
net	runtime/net.h	/^PROTOTYPEObj(net);$/;"	v
netAddr_t	runtime/typedefs.h	/^typedef struct NetAddr netAddr_t;$/;"	t	typeref:struct:NetAddr
netCURR_IF_VERSION	runtime/net.h	161;"	d
netstrm	runtime/netstrm.h	/^PROTOTYPEObj(netstrm);$/;"	v
netstrmCURR_IF_VERSION	runtime/netstrm.h	79;"	d
netstrmConstructFinalize	runtime/netstrm.c	/^netstrmConstructFinalize(netstrm_t *pThis)$/;"	f	file:
netstrm_s	runtime/netstrm.h	/^struct netstrm_s {$/;"	s
netstrm_t	runtime/typedefs.h	/^typedef struct netstrm_s netstrm_t;$/;"	t	typeref:struct:netstrm_s
netstrms	runtime/netstrms.h	/^PROTOTYPEObj(netstrms);$/;"	v
netstrmsCURR_IF_VERSION	runtime/netstrms.h	56;"	d
netstrmsConstructFinalize	runtime/netstrms.c	/^netstrmsConstructFinalize(netstrms_t *pThis)$/;"	f	file:
netstrms_s	runtime/netstrms.h	/^struct netstrms_s {$/;"	s
netstrms_t	runtime/typedefs.h	/^typedef struct netstrms_s netstrms_t;$/;"	t	typeref:struct:netstrms_s
new	tools/recover_qi.pl	/^sub new { shift->SUPER::new(@_) }$/;"	s
new	tools/recover_qi.pl	/^sub new {$/;"	s
newActInst	runtime/modules.h	/^			rsRetVal (*newActInst)(uchar *modName, struct nvlst *lst, void **, omodStringRequest_t **);$/;"	m	struct:modInfo_s::__anon29::__anon31
newInpInst	runtime/modules.h	/^			rsRetVal (*newInpInst)(struct nvlst *lst);$/;"	m	struct:modInfo_s::__anon29::__anon30
newParserInst	runtime/modules.h	/^			rsRetVal (*newParserInst)(struct nvlst *lst, void *pinst);$/;"	m	struct:modInfo_s::__anon29::__anon33
next	contrib/imczmq/imczmq.c	/^	struct instanceConf_s *next;	\/* pointer to next conf *\/$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::instanceConf_s	file:
next	contrib/imczmq/imczmq.c	/^	struct lstn_s *next;	\/* pointer to next input *\/$/;"	m	struct:lstn_s	typeref:struct:lstn_s::lstn_s	file:
next	contrib/imzmq3/imzmq3.c	/^    struct instanceConf_s* next;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::instanceConf_s	file:
next	contrib/imzmq3/imzmq3.c	/^    struct lstn_s* next;$/;"	m	struct:lstn_s	typeref:struct:lstn_s::lstn_s	file:
next	contrib/imzmq3/imzmq3.c	/^    struct sublist_t* next;$/;"	m	struct:sublist_t	typeref:struct:sublist_t::sublist_t	file:
next	grammar/rainerscript.h	/^	struct cnffparamlst *next;$/;"	m	struct:cnffparamlst	typeref:struct:cnffparamlst::cnffparamlst
next	grammar/rainerscript.h	/^	struct cnfstmt *next;$/;"	m	struct:cnfstmt	typeref:struct:cnfstmt::cnfstmt
next	grammar/rainerscript.h	/^	struct objlst *next;$/;"	m	struct:objlst	typeref:struct:objlst::objlst
next	grammar/rainerscript.h	/^  struct nvlst *next;$/;"	m	struct:nvlst	typeref:struct:nvlst::nvlst
next	plugins/imfile/imfile.c	/^	struct instanceConf_s *next;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::instanceConf_s	file:
next	plugins/imfile/imfile.c	/^	struct lstn_s *next, *prev;$/;"	m	struct:lstn_s	typeref:struct:lstn_s::lstn_s	file:
next	plugins/imptcp/imptcp.c	/^	ptcplstn_t *prev, *next;$/;"	m	struct:ptcplstn_s	file:
next	plugins/imptcp/imptcp.c	/^	ptcpsess_t *prev, *next;$/;"	m	struct:ptcpsess_s	file:
next	plugins/imptcp/imptcp.c	/^	struct instanceConf_s *next;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::instanceConf_s	file:
next	plugins/imrelp/imrelp.c	/^	struct instanceConf_s *next;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::instanceConf_s	file:
next	plugins/imtcp/imtcp.c	/^	struct instanceConf_s *next;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::instanceConf_s	file:
next	plugins/imudp/imudp.c	/^	struct instanceConf_s *next;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::instanceConf_s	file:
next	plugins/imudp/imudp.c	/^	struct lstn_s *next;$/;"	m	struct:lstn_s	typeref:struct:lstn_s::lstn_s	file:
next	plugins/imuxsock/imuxsock.c	/^	struct instanceConf_s *next;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::instanceConf_s	file:
next	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	struct severMap_s *next;$/;"	m	struct:severMap_s	typeref:struct:severMap_s::severMap_s	file:
next	plugins/omelasticsearch/cJSON/cjson.h	/^	struct cJSON *next,*prev;	\/* next\/prev allow you to walk array\/object chains. Alternatively, use GetArraySize\/GetArrayItem\/GetObjectItem *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
next	runtime/dnscache.c	/^	struct dnscache_entry_s *next;$/;"	m	struct:dnscache_entry_s	typeref:struct:dnscache_entry_s::dnscache_entry_s	file:
next	runtime/hashtable_private.h	/^    struct entry *next;$/;"	m	struct:entry	typeref:struct:entry::entry
next	runtime/janitor.h	/^	struct janitorEtry *next;$/;"	m	struct:janitorEtry	typeref:struct:janitorEtry::janitorEtry
next	runtime/lookup.h	/^	lookup_t *next;$/;"	m	struct:lookup_s
next	runtime/modules.h	/^	struct	dlhandle_s *next;$/;"	m	struct:dlhandle_s	typeref:struct:dlhandle_s::dlhandle_s
next	runtime/rsconf.h	/^	cfgmodules_etry_t *next;$/;"	m	struct:cfgmodules_etry_s
next	runtime/statsobj.h	/^	statsobj_t *next;$/;"	m	struct:statsobj_s
next	runtime/statsobj.h	/^	struct ctr_s *next, *prev;$/;"	m	struct:ctr_s	typeref:struct:ctr_s::ctr_s
next	tests/filewriter.c	/^	struct line *next;$/;"	m	struct:line	typeref:struct:line::line	file:
next	tools/rsyslogd.c	/^	struct queuefilenames_s *next;$/;"	m	struct:queuefilenames_s	typeref:struct:queuefilenames_s::queuefilenames_s	file:
nextnode	runtime/nsdpoll_ptcp.c	/^	nsdpoll_epollevt_lst_t *nextnode;$/;"	v
nfd	plugins/imuxsock/imuxsock.c	/^static int nfd = 1; \/* number of active unix sockets  (socket 0 is always reserved for the system $/;"	v	file:
nfds	plugins/imuxsock/imuxsock.c	/^	int nfds;$/;"	v
nmemb	grammar/rainerscript.h	/^	int nmemb;$/;"	m	struct:cnfarray
nmemb	plugins/imrelp/imrelp.c	/^		int nmemb;$/;"	m	struct:instanceConf_s::__anon14	file:
nmemb	plugins/omelasticsearch/omelasticsearch.c	/^		int nmemb;	\/* number of messages in batch (for statistics counting) *\/$/;"	m	struct:wrkrInstanceData::__anon17	file:
nmemb	plugins/omrelp/omrelp.c	/^		int nmemb;$/;"	m	struct:_instanceData::__anon24	file:
nmemb	runtime/lookup.h	/^	uint32_t nmemb;$/;"	m	struct:lookup_s
node	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	struct severMap_s *node, *nodeDel;$/;"	v	typeref:struct:severMap_s
nodeDel	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	struct severMap_s *node, *nodeDel;$/;"	v	typeref:struct:
nodetype	grammar/rainerscript.h	/^	unsigned nodetype; \/* P *\/$/;"	m	struct:cnffparamlst
nodetype	grammar/rainerscript.h	/^	unsigned nodetype;$/;"	m	struct:cnfarray
nodetype	grammar/rainerscript.h	/^	unsigned nodetype;$/;"	m	struct:cnfexpr
nodetype	grammar/rainerscript.h	/^	unsigned nodetype;$/;"	m	struct:cnffunc
nodetype	grammar/rainerscript.h	/^	unsigned nodetype;$/;"	m	struct:cnfnumval
nodetype	grammar/rainerscript.h	/^	unsigned nodetype;$/;"	m	struct:cnfstmt
nodetype	grammar/rainerscript.h	/^	unsigned nodetype;$/;"	m	struct:cnfstringval
nodetype	grammar/rainerscript.h	/^	unsigned nodetype;$/;"	m	struct:cnfvar
nomatchAction	template.h	/^			}  nomatchAction;	\/**< what to do if we do not have a match? *\/$/;"	m	struct:templateEntry::__anon69::__anon71	typeref:enum:templateEntry::__anon69::__anon71::tlpRegexNoMatchType
none	tools/syncdemo.c	/^typedef enum { part, none, atomic, cas, spinlock, mutex, semaphore } syncType_t;$/;"	e	enum:__anon79	file:
nontx	runtime/wti.h	/^		} nontx;$/;"	m	union:actWrkrInfo::__anon60	typeref:struct:actWrkrInfo::__anon60::__anon62
notEmpty	runtime/stream.h	/^	pthread_cond_t notEmpty;$/;"	m	struct:strm_s
notFull	runtime/queue.h	/^	pthread_cond_t notFull;$/;"	m	struct:queue_s
notFull	runtime/stream.h	/^	pthread_cond_t notFull;$/;"	m	struct:strm_s
nsdCURR_IF_VERSION	runtime/nsd.h	87;"	d
nsd_epworkset_s	runtime/nsd.h	/^struct nsd_epworkset_s {$/;"	s
nsd_epworkset_t	runtime/typedefs.h	/^typedef struct nsd_epworkset_s nsd_epworkset_t;$/;"	t	typeref:struct:nsd_epworkset_s
nsd_gsspi_t	runtime/typedefs.h	/^typedef struct nsd_gsspi_s nsd_gsspi_t;$/;"	t	typeref:struct:nsd_gsspi_s
nsd_gtls	runtime/nsd_gtls.h	/^PROTOTYPEObj(nsd_gtls);$/;"	v
nsd_gtlsCURR_IF_VERSION	runtime/nsd_gtls.h	69;"	d
nsd_gtlsClassExit	runtime/nsd_gtls.c	/^	nsd_gtlsClassExit();$/;"	v
nsd_gtls_if_t	runtime/nsd_gtls.h	/^typedef nsd_if_t nsd_gtls_if_t; \/* we just *implement* this interface *\/$/;"	t
nsd_gtls_s	runtime/nsd_gtls.h	/^struct nsd_gtls_s {$/;"	s
nsd_gtls_t	runtime/typedefs.h	/^typedef struct nsd_gtls_s nsd_gtls_t;$/;"	t	typeref:struct:nsd_gtls_s
nsd_nss_t	runtime/typedefs.h	/^typedef struct nsd_nss_s nsd_nss_t;$/;"	t	typeref:struct:nsd_nss_s
nsd_ptcp	runtime/nsd_ptcp.h	/^PROTOTYPEObj(nsd_ptcp);$/;"	v
nsd_ptcpCURR_IF_VERSION	runtime/nsd_ptcp.h	43;"	d
nsd_ptcp_if_t	runtime/nsd_ptcp.h	/^typedef nsd_if_t nsd_ptcp_if_t; \/* we just *implement* this interface *\/$/;"	t
nsd_ptcp_s	runtime/nsd_ptcp.h	/^struct nsd_ptcp_s {$/;"	s
nsd_ptcp_t	runtime/typedefs.h	/^typedef struct nsd_ptcp_s nsd_ptcp_t;$/;"	t	typeref:struct:nsd_ptcp_s
nsd_t	runtime/typedefs.h	/^	typedef obj_t nsd_t;$/;"	t
nsd_t	runtime/typedefs.h	/^	typedef void nsd_t;$/;"	t
nsdpollCURR_IF_VERSION	runtime/nsd.h	112;"	d
nsdpoll_epollevt_lst_s	runtime/nsdpoll_ptcp.h	/^struct nsdpoll_epollevt_lst_s {$/;"	s
nsdpoll_epollevt_lst_t	runtime/nsdpoll_ptcp.h	/^typedef struct nsdpoll_epollevt_lst_s nsdpoll_epollevt_lst_t;$/;"	t	typeref:struct:nsdpoll_epollevt_lst_s
nsdpoll_ptcp	runtime/nsdpoll_ptcp.h	/^PROTOTYPEObj(nsdpoll_ptcp);$/;"	v
nsdpoll_ptcpCURR_IF_VERSION	runtime/nsdpoll_ptcp.h	56;"	d
nsdpoll_ptcp_if_t	runtime/nsdpoll_ptcp.h	/^typedef nsdpoll_if_t nsdpoll_ptcp_if_t; \/* we just *implement* this interface *\/$/;"	t
nsdpoll_ptcp_s	runtime/nsdpoll_ptcp.h	/^struct nsdpoll_ptcp_s {$/;"	s
nsdpoll_ptcp_t	runtime/typedefs.h	/^typedef struct nsdpoll_ptcp_s nsdpoll_ptcp_t;$/;"	t	typeref:struct:nsdpoll_ptcp_s
nsdpoll_t	runtime/typedefs.h	/^	typedef obj_t nsdpoll_t;$/;"	t
nsdpoll_t	runtime/typedefs.h	/^	typedef void nsdpoll_t;$/;"	t
nsdselCURR_IF_VERSION	runtime/nsd.h	103;"	d
nsdsel_gtls	runtime/nsdsel_gtls.h	/^PROTOTYPEObj(nsdsel_gtls);$/;"	v
nsdsel_gtlsCURR_IF_VERSION	runtime/nsdsel_gtls.h	36;"	d
nsdsel_gtls_if_t	runtime/nsdsel_gtls.h	/^typedef nsdsel_if_t nsdsel_gtls_if_t; \/* we just *implement* this interface *\/$/;"	t
nsdsel_gtls_s	runtime/nsdsel_gtls.h	/^struct nsdsel_gtls_s {$/;"	s
nsdsel_gtls_t	runtime/typedefs.h	/^typedef struct nsdsel_gtls_s nsdsel_gtls_t;$/;"	t	typeref:struct:nsdsel_gtls_s
nsdsel_ptcp	runtime/nsdsel_ptcp.h	/^PROTOTYPEObj(nsdsel_ptcp);$/;"	v
nsdsel_ptcpCURR_IF_VERSION	runtime/nsdsel_ptcp.h	44;"	d
nsdsel_ptcpClassExit	runtime/nsd_ptcp.c	/^	nsdsel_ptcpClassExit();$/;"	v
nsdsel_ptcp_if_t	runtime/nsdsel_ptcp.h	/^typedef nsdsel_if_t nsdsel_ptcp_if_t; \/* we just *implement* this interface *\/$/;"	t
nsdsel_ptcp_s	runtime/nsdsel_ptcp.h	/^struct nsdsel_ptcp_s {$/;"	s
nsdsel_ptcp_t	runtime/typedefs.h	/^typedef struct nsdsel_ptcp_s nsdsel_ptcp_t;$/;"	t	typeref:struct:nsdsel_ptcp_s
nsdsel_t	runtime/typedefs.h	/^	typedef obj_t nsdsel_t;$/;"	t
nsdsel_t	runtime/typedefs.h	/^	typedef void nsdsel_t;$/;"	t
nsdsel_waitOp_e	runtime/nsd.h	/^enum nsdsel_waitOp_e {$/;"	g
nsdsel_waitOp_t	runtime/typedefs.h	/^typedef enum nsdsel_waitOp_e nsdsel_waitOp_t;$/;"	t	typeref:enum:nsdsel_waitOp_e
nspoll	runtime/nspoll.h	/^PROTOTYPEObj(nspoll);$/;"	v
nspollCURR_IF_VERSION	runtime/nspoll.h	57;"	d
nspoll_s	runtime/nspoll.h	/^struct nspoll_s {$/;"	s
nspoll_t	runtime/typedefs.h	/^typedef struct nspoll_s nspoll_t;$/;"	t	typeref:struct:nspoll_s
nssel	runtime/nssel.h	/^PROTOTYPEObj(nssel);$/;"	v
nsselCURR_IF_VERSION	runtime/nssel.h	48;"	d
nsselClassExit	runtime/netstrms.c	/^	nsselClassExit();$/;"	v
nssel_s	runtime/nssel.h	/^struct nssel_s {$/;"	s
nssel_t	runtime/typedefs.h	/^typedef struct nssel_s nssel_t;$/;"	t	typeref:struct:nssel_s
nsupp	runtime/ratelimit.h	/^	unsigned nsupp;		\/**< nbr of msgs suppressed *\/$/;"	m	struct:ratelimit_s
ntzinfos	runtime/glbl.c	/^static int ntzinfos;$/;"	v	file:
num	runtime/var.h	/^		number_t num;$/;"	m	union:var_s::__anon58
numCalled	plugins/imptcp/imptcp.c	/^	long long unsigned numCalled;	\/* how often was this called *\/$/;"	m	struct:wrkrInfo_s	file:
numCalled	runtime/tcpsrv.c	/^	long long unsigned numCalled;	\/* how often was this called *\/$/;"	m	struct:wrkrInfo_s	file:
numConnections	tests/tcpflood.c	/^static int numConnections = 1; \/* number of connections to create *\/$/;"	v	file:
numFileIterations	tests/tcpflood.c	/^static int numFileIterations = 1;\/* how often is file data to be sent? *\/$/;"	v	file:
numInWords	grammar/rainerscript.c	/^static const char* const numInWords[] = {"zero", "one", "two", "three", "four", "five", "six"};$/;"	v	file:
numIterations	tools/syncdemo.c	/^static int numIterations = 1; \/* number of iterations *\/$/;"	v	file:
numMsgs	tests/tcpflood.c	/^	unsigned long long numMsgs; \/* number of messages to send *\/$/;"	m	struct:instdata	file:
numMsgsToSend	tests/tcpflood.c	/^static int numMsgsToSend; \/* number of messages to send *\/$/;"	v	file:
numRuns	tests/tcpflood.c	/^	int numRuns;$/;"	m	struct:runstats	file:
numRuns	tests/tcpflood.c	/^static int numRuns = 1;		\/* number of times the test shall be run *\/$/;"	v	file:
numSent	tests/tcpflood.c	/^	unsigned long long numSent; \/* number of messages already sent *\/$/;"	m	struct:instdata	file:
numTargetPorts	tests/tcpflood.c	/^static int numTargetPorts = 1;$/;"	v	file:
numThrds	tests/tcpflood.c	/^static int numThrds = 1;	\/* number of threads to use *\/$/;"	v	file:
num_fields	contrib/pmpanngfw/pmpanngfw.c	/^    int num_fields = 4;$/;"	v
numberOfRetries	plugins/external/solr/rsyslog_solr.py	/^numberOfRetries = 10$/;"	v
number_t	runtime/typedefs.h	/^typedef int64 number_t; \/* type to use for numbers - TODO: maybe an autoconf option? *\/$/;"	t
numthrds	tools/syncdemo.c	/^static int numthrds = 0; \/* if zero, => equal num of processors *\/$/;"	v	file:
nv	grammar/grammar.y	/^nv:	NAME '=' value 			{ $$ = nvlstSetName($3, $1); }$/;"	l
nvlst	grammar/grammar.y	/^nvlst:					{ $$ = NULL; }$/;"	l
nvlst	grammar/rainerscript.h	/^	struct nvlst *nvlst;$/;"	m	struct:cnfobj	typeref:struct:cnfobj::nvlst
nvlst	grammar/rainerscript.h	/^struct nvlst {$/;"	s
nvlstChkDupes	grammar/rainerscript.c	/^nvlstChkDupes(struct nvlst *lst)$/;"	f	file:
nvlstChkUnused	grammar/rainerscript.c	/^nvlstChkUnused(struct nvlst *lst)$/;"	f
nvlstDestruct	grammar/rainerscript.c	/^nvlstDestruct(struct nvlst *lst)$/;"	f
nvlstFindName	grammar/rainerscript.c	/^nvlstFindName(struct nvlst *lst, es_str_t *name)$/;"	f
nvlstFindNameCStr	grammar/rainerscript.c	/^nvlstFindNameCStr(struct nvlst *lst, char *name)$/;"	f	file:
nvlstGetParam	grammar/rainerscript.c	/^nvlstGetParam(struct nvlst *valnode, struct cnfparamdescr *param,$/;"	f	file:
nvlstGetParams	grammar/rainerscript.c	/^nvlstGetParams(struct nvlst *lst, struct cnfparamblk *params,$/;"	f
nvlstNewArray	grammar/rainerscript.c	/^nvlstNewArray(struct cnfarray *ar)$/;"	f
nvlstNewStr	grammar/rainerscript.c	/^nvlstNewStr(es_str_t *value)$/;"	f
nvlstPrint	grammar/rainerscript.c	/^nvlstPrint(struct nvlst *lst)$/;"	f
nvlstSetName	grammar/rainerscript.c	/^nvlstSetName(struct nvlst *lst, es_str_t *name)$/;"	f
obj	grammar/grammar.y	/^obj:	  BEGINOBJ nvlst ENDOBJ 	{ $$ = cnfobjNew($1, $2); }$/;"	l
obj	grammar/rainerscript.h	/^	struct cnfobj *obj;$/;"	m	struct:objlst	typeref:struct:objlst::cnfobj
obj	runtime/obj.h	/^PROTOTYPEObjClassExit(obj);$/;"	v
obj	runtime/obj.h	/^PROTOTYPEObjClassInit(obj);$/;"	v
objCURR_IF_VERSION	runtime/obj.h	111;"	d
objClassExit	runtime/obj.c	/^objClassExit(void)$/;"	f
objClassInit	runtime/obj.c	/^objClassInit(modInfo_t *pModInfo)$/;"	f
objConstructSetObjInfo	runtime/obj.h	77;"	d
objConstructSetObjInfo	runtime/obj.h	82;"	d
objDeserializeDummy	runtime/obj.c	/^objDeserializeDummy(obj_t __attribute__((unused)) *pObj, strm_t *pStrm)$/;"	f
objDeserializeEmbedStr	runtime/obj.c	/^objDeserializeEmbedStr(cstr_t **ppStr, strm_t *pStrm)$/;"	f	file:
objDeserializeHeader	runtime/obj.c	/^static rsRetVal objDeserializeHeader(uchar *pszRecType, cstr_t **ppstrID, int* poVers, strm_t *pStrm)$/;"	f	file:
objDeserializeNumber	runtime/obj.c	/^static rsRetVal objDeserializeNumber(number_t *pNum, strm_t *pStrm)$/;"	f	file:
objDeserializeObjAsPropBag	runtime/obj.c	/^objDeserializeObjAsPropBag(obj_t *pObj, strm_t *pStrm)$/;"	f
objDeserializeProperties	runtime/obj.c	/^static rsRetVal objDeserializeProperties(obj_t *pObj, rsRetVal (*objSetProperty)(), strm_t *pStrm)$/;"	f	file:
objDeserializeProperty	runtime/obj.c	/^rsRetVal objDeserializeProperty(var_t *pProp, strm_t *pStrm)$/;"	f
objDeserializeStr	runtime/obj.c	/^static rsRetVal objDeserializeStr(cstr_t **ppCStr, int iLen, strm_t *pStrm)$/;"	f	file:
objDeserializeSyslogTime	runtime/obj.c	/^static rsRetVal objDeserializeSyslogTime(syslogTime_t *pTime, strm_t *pStrm)$/;"	f	file:
objDeserializeTrailer	runtime/obj.c	/^static rsRetVal objDeserializeTrailer(strm_t *pStrm)$/;"	f	file:
objDeserializeTryRecover	runtime/obj.c	/^static rsRetVal objDeserializeTryRecover(strm_t *pStrm)$/;"	f	file:
objDeserializeWithMethods	runtime/obj.c	/^objDeserializeWithMethods(void *ppObj, uchar *pszTypeExpected, int lenTypeExpected, strm_t *pStrm, rsRetVal (*fFixup)(obj_t*,void*), void *pUsr, rsRetVal (*objConstruct)(), rsRetVal (*objConstructFinalize)(), rsRetVal (*objDeserialize)())$/;"	f
objGetClassName	runtime/obj.h	73;"	d
objGetVersion	runtime/obj.h	74;"	d
objID_t	runtime/obj-types.h	/^typedef unsigned objID_t;$/;"	t
objInfoIsImplemented	runtime/obj.c	126;"	d	file:
objInfoNotImplementedDummy	runtime/obj.c	/^static rsRetVal objInfoNotImplementedDummy(void __attribute__((unused)) *pThis)$/;"	f	file:
objInfo_s	runtime/obj-types.h	/^struct objInfo_s {$/;"	s
objInfo_t	runtime/typedefs.h	/^typedef struct objInfo_s objInfo_t;$/;"	t	typeref:struct:objInfo_s
objLast	runtime/statsobj.c	/^static statsobj_t *objLast = NULL;$/;"	v	file:
objMethod_CONSTRUCT	runtime/obj-types.h	/^	objMethod_CONSTRUCT = 0,$/;"	e	enum:__anon45
objMethod_CONSTRUCTION_FINALIZER	runtime/obj-types.h	/^	objMethod_CONSTRUCTION_FINALIZER = 5,$/;"	e	enum:__anon45
objMethod_DEBUGPRINT	runtime/obj-types.h	/^	objMethod_DEBUGPRINT = 7$/;"	e	enum:__anon45
objMethod_DESERIALIZE	runtime/obj-types.h	/^	objMethod_DESERIALIZE = 3,$/;"	e	enum:__anon45
objMethod_DESTRUCT	runtime/obj-types.h	/^	objMethod_DESTRUCT = 1,$/;"	e	enum:__anon45
objMethod_GETSEVERITY	runtime/obj-types.h	/^	objMethod_GETSEVERITY = 6,$/;"	e	enum:__anon45
objMethod_SERIALIZE	runtime/obj-types.h	/^	objMethod_SERIALIZE = 2,$/;"	e	enum:__anon45
objMethod_SETPROPERTY	runtime/obj-types.h	/^	objMethod_SETPROPERTY = 4,$/;"	e	enum:__anon45
objMethod_t	runtime/obj-types.h	/^} objMethod_t;$/;"	t	typeref:enum:__anon45
objMethods	runtime/obj-types.h	/^	rsRetVal (*objMethods[OBJ_NUM_METHODS])();$/;"	m	struct:objInfo_s
objRelease	runtime/gss-misc.c	/^	objRelease(glbl, CORE_COMPONENT);$/;"	v
objRelease	runtime/lmcry_gcry.c	/^	objRelease(glbl, CORE_COMPONENT);$/;"	v
objRelease	runtime/lmsig_gt.c	/^	objRelease(glbl, CORE_COMPONENT);$/;"	v
objRelease	runtime/lmsig_ksi.c	/^	objRelease(glbl, CORE_COMPONENT);$/;"	v
objRelease	runtime/net.c	/^	objRelease(prop, CORE_COMPONENT);$/;"	v
objRelease	runtime/netstrm.c	/^	objRelease(netstrms, DONT_LOAD_LIB);$/;"	v
objRelease	runtime/netstrms.c	/^	objRelease(netstrm, DONT_LOAD_LIB);$/;"	v
objRelease	runtime/nsd_gtls.c	/^	objRelease(nsd_ptcp, LM_NSD_PTCP_FILENAME);$/;"	v
objRelease	runtime/nsd_ptcp.c	/^	objRelease(glbl, CORE_COMPONENT);$/;"	v
objRelease	runtime/nsdpoll_ptcp.c	/^	objRelease(errmsg, CORE_COMPONENT);$/;"	v
objRelease	runtime/nsdsel_gtls.c	/^	objRelease(errmsg, CORE_COMPONENT);$/;"	v
objRelease	runtime/nsdsel_ptcp.c	/^	objRelease(errmsg, CORE_COMPONENT);$/;"	v
objRelease	runtime/obj-types.h	391;"	d
objRelease	runtime/parser.c	/^	objRelease(glbl, CORE_COMPONENT);$/;"	v
objRelease	runtime/rsconf.c	/^	objRelease(module, CORE_COMPONENT);$/;"	v
objRelease	runtime/ruleset.c	/^	objRelease(parser, CORE_COMPONENT);$/;"	v
objRelease	runtime/strgen.c	/^	objRelease(errmsg, CORE_COMPONENT);$/;"	v
objRelease	runtime/strms_sess.c	/^	objRelease(netstrm, LM_NETSTRMS_FILENAME);$/;"	v
objRelease	runtime/strmsrv.c	/^	objRelease(conf, CORE_COMPONENT);$/;"	v
objRelease	runtime/tcps_sess.c	/^	objRelease(netstrm, LM_NETSTRMS_FILENAME);$/;"	v
objRelease	runtime/tcpsrv.c	/^	objRelease(conf, CORE_COMPONENT);$/;"	v
objRoot	runtime/statsobj.c	/^static statsobj_t *objRoot = NULL;$/;"	v	file:
objSerialize	runtime/obj.h	86;"	d
objSerializeHeader	runtime/obj.c	/^static rsRetVal objSerializeHeader(strm_t *pStrm, obj_t *pObj, uchar *pszRecType)$/;"	f	file:
objSerializePTR	runtime/obj.h	66;"	d
objSerializeSCALAR	runtime/obj.h	64;"	d
objSerializeSCALAR_VAR	runtime/obj.h	62;"	d
objType	grammar/rainerscript.h	/^	enum cnfobjType objType;$/;"	m	struct:cnfobj	typeref:enum:cnfobj::cnfobjType
objUse	runtime/conf.c	/^	CHKiRet(objUse(errmsg, CORE_COMPONENT));$/;"	v
objUse	runtime/gss-misc.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/lmcry_gcry.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/lmsig_gt.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/lmsig_ksi.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/net.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/nsd_gtls.c	/^	CHKiRet(objUse(datetime, CORE_COMPONENT));$/;"	v
objUse	runtime/nsd_ptcp.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/nsdpoll_ptcp.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/nsdsel_gtls.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/nsdsel_ptcp.c	/^	CHKiRet(objUse(glbl, CORE_COMPONENT));$/;"	v
objUse	runtime/obj-types.h	389;"	d
objUse	runtime/parser.c	/^	CHKiRet(objUse(errmsg, CORE_COMPONENT));$/;"	v
objUse	runtime/rsconf.c	/^	CHKiRet(objUse(module, CORE_COMPONENT));$/;"	v
objUse	runtime/strgen.c	/^	CHKiRet(objUse(errmsg, CORE_COMPONENT));$/;"	v
objUse	runtime/strms_sess.c	/^	CHKiRet(objUse(netstrm, LM_NETSTRMS_FILENAME));$/;"	v
objUse	runtime/strmsrv.c	/^	CHKiRet(objUse(net, LM_NET_FILENAME));$/;"	v
objUse	runtime/tcps_sess.c	/^	CHKiRet(objUse(netstrm, LM_NETSTRMS_FILENAME));$/;"	v
objUse	runtime/tcpsrv.c	/^	CHKiRet(objUse(net, LM_NET_FILENAME));$/;"	v
obj_s	runtime/obj-types.h	/^struct obj_s {	\/* the dummy struct that each derived class can be casted to *\/$/;"	s
obj_t	runtime/typedefs.h	/^typedef struct obj_s obj_t;$/;"	t	typeref:struct:obj_s
obj_t_ptr	runtime/typedefs.h	/^	typedef obj_t *obj_t_ptr;$/;"	t
obj_t_ptr	runtime/typedefs.h	/^	typedef void * obj_t_ptr;$/;"	t
objid_snmptrap	plugins/omsnmp/omsnmp.c	/^static oid             objid_snmptrap[] = { 1, 3, 6, 1, 6, 3, 1, 1, 4, 1, 0 };$/;"	v	file:
objid_sysuptime	plugins/omsnmp/omsnmp.c	/^static oid             objid_sysuptime[] = { 1, 3, 6, 1, 2, 1, 1, 3, 0 };$/;"	v	file:
objlst	grammar/rainerscript.h	/^struct objlst {$/;"	s
objlstAdd	grammar/rainerscript.c	/^objlstAdd(struct objlst *root, struct cnfobj *o)$/;"	f
objlstDestruct	grammar/rainerscript.c	/^objlstDestruct(struct objlst *lst)$/;"	f
objlstNew	grammar/rainerscript.c	/^objlstNew(struct cnfobj *o)$/;"	f
objlstPrint	grammar/rainerscript.c	/^objlstPrint(struct objlst *lst)$/;"	f
och	runtime/rsconf.h	/^	outchannels_t och;$/;"	m	struct:rsconf_s
ochAddLine	outchannel.c	/^struct outchannel *ochAddLine(char* pName, uchar** ppRestOfConfLine)$/;"	f
ochConstruct	outchannel.c	/^struct outchannel* ochConstruct(void)$/;"	f
ochDeleteAll	outchannel.c	/^void ochDeleteAll(void)$/;"	f
ochFind	outchannel.c	/^struct outchannel *ochFind(char *pName, int iLenName)$/;"	f
ochLast	runtime/rsconf.h	/^	struct outchannel *ochLast;	\/* points to the last element of the outchannel list *\/$/;"	m	struct:outchannels_s	typeref:struct:outchannels_s::outchannel
ochPrintList	outchannel.c	/^void ochPrintList(void)$/;"	f
ochRoot	runtime/rsconf.h	/^	struct outchannel *ochRoot;	\/* the root of the outchannel list *\/$/;"	m	struct:outchannels_s	typeref:struct:outchannels_s::outchannel
off64_t	runtime/typedefs.h	/^		typedef off_t off64_t;$/;"	t
offAfterPRI	runtime/msg.h	/^	short	offAfterPRI;	\/* offset, at which raw message WITHOUT PRI part starts in pszRawMsg *\/$/;"	m	struct:msg
offMSG	runtime/msg.h	/^	short	offMSG;		\/* offset at which the MSG part starts in pszRawMsg *\/$/;"	m	struct:msg
offsBuf	plugins/omhdfs/omhdfs.c	/^	unsigned offsBuf;$/;"	m	struct:_instanceData	file:
offsHour	runtime/syslogd-types.h	/^	int8_t offsHour;$/;"	m	struct:tzinfo
offsMin	runtime/syslogd-types.h	/^	int8_t offsMin;$/;"	m	struct:tzinfo
offsMode	runtime/syslogd-types.h	/^	char offsMode;$/;"	m	struct:tzinfo
offsSndBuf	tools/omfwd.c	/^	unsigned offsSndBuf;	\/* next free spot in send buffer *\/$/;"	m	struct:wrkrInstanceData	file:
ofields	tools/logctl.c	/^struct ofields$/;"	s	file:
om	runtime/modules.h	/^		} om;$/;"	m	union:modInfo_s::__anon29	typeref:struct:modInfo_s::__anon29::__anon31
omodStringRequest_s	runtime/objomsr.h	/^struct omodStringRequest_s {	\/* strings requested by output module for doAction() *\/$/;"	s
omodStringRequest_t	runtime/objomsr.h	/^typedef struct omodStringRequest_s omodStringRequest_t;$/;"	t	typeref:struct:omodStringRequest_s
omsnmp_exitSession	plugins/omsnmp/omsnmp.c	/^omsnmp_exitSession(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
omsnmp_initSession	plugins/omsnmp/omsnmp.c	/^omsnmp_initSession(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
omsnmp_sendsnmp	plugins/omsnmp/omsnmp.c	/^static rsRetVal omsnmp_sendsnmp(wrkrInstanceData_t *pWrkrData, uchar *psz)$/;"	f	file:
onAuthErr	plugins/imrelp/imrelp.c	/^onAuthErr(void *pUsr, char *authinfo, char* errmesg, __attribute__((unused)) relpRetVal errcode)$/;"	f	file:
onAuthErr	plugins/omrelp/omrelp.c	/^onAuthErr(void *pUsr, char *authinfo, char* errmesg, __attribute__((unused)) relpRetVal errcode)$/;"	f	file:
onErr	plugins/imrelp/imrelp.c	/^onErr(void *pUsr, char *objinfo, char* errmesg, __attribute__((unused)) relpRetVal errcode)$/;"	f	file:
onErr	plugins/omrelp/omrelp.c	/^onErr(void *pUsr, char *objinfo, char* errmesg, __attribute__((unused)) relpRetVal errcode)$/;"	f	file:
onErrClose	plugins/imdiag/imdiag.c	/^onErrClose(tcps_sess_t *pSess)$/;"	f	file:
onErrClose	plugins/imgssapi/imgssapi.c	/^onErrClose(tcps_sess_t *pSess)$/;"	f	file:
onErrClose	plugins/imtcp/imtcp.c	/^onErrClose(tcps_sess_t *pSess)$/;"	f	file:
onErrClose	runtime/strmsrv.c	/^onErrClose(strms_sess_t *pSess)$/;"	f	file:
onExit	plugins/external/messagemod/anon_cc_nbrs/anon_cc_nbrs.py	/^def onExit():$/;"	f
onExit	plugins/external/messagemod/fac-sever-rewrite/fac-sever-rewrite.py	/^def onExit():$/;"	f
onExit	plugins/external/skeletons/perl/plugin.pl	/^sub onExit {$/;"	s
onExit	plugins/external/skeletons/python/mm-python.py	/^def onExit():$/;"	f
onExit	plugins/external/skeletons/python/plugin.py	/^def onExit():$/;"	f
onExit	plugins/external/solr/rsyslog_solr.py	/^def onExit():$/;"	f
onGenericErr	plugins/imrelp/imrelp.c	/^onGenericErr(char *objinfo, char* errmesg, __attribute__((unused)) relpRetVal errcode)$/;"	f	file:
onGenericErr	plugins/omrelp/omrelp.c	/^onGenericErr(char *objinfo, char* errmesg, __attribute__((unused)) relpRetVal errcode)$/;"	f	file:
onInit	plugins/external/messagemod/anon_cc_nbrs/anon_cc_nbrs.py	/^def onInit():$/;"	f
onInit	plugins/external/messagemod/fac-sever-rewrite/fac-sever-rewrite.py	/^def onInit():$/;"	f
onInit	plugins/external/skeletons/perl/plugin.pl	/^sub onInit {$/;"	s
onInit	plugins/external/skeletons/python/mm-python.py	/^def onInit():$/;"	f
onInit	plugins/external/skeletons/python/plugin.py	/^def onInit():$/;"	f
onInit	plugins/external/solr/rsyslog_solr.py	/^def onInit():$/;"	f
onReceive	plugins/external/messagemod/anon_cc_nbrs/anon_cc_nbrs.py	/^def onReceive(msg):$/;"	f
onReceive	plugins/external/messagemod/fac-sever-rewrite/fac-sever-rewrite.py	/^def onReceive(msg):$/;"	f
onReceive	plugins/external/skeletons/perl/plugin.pl	/^sub onReceive {$/;"	s
onReceive	plugins/external/skeletons/python/mm-python.py	/^def onReceive(msg):$/;"	f
onReceive	plugins/external/skeletons/python/plugin.py	/^def onReceive(msgs):$/;"	f
onReceive	plugins/external/solr/rsyslog_solr.py	/^def onReceive(msgs):$/;"	f
onRegularClose	plugins/imdiag/imdiag.c	/^onRegularClose(tcps_sess_t *pSess)$/;"	f	file:
onRegularClose	plugins/imgssapi/imgssapi.c	/^onRegularClose(tcps_sess_t *pSess)$/;"	f	file:
onRegularClose	plugins/imtcp/imtcp.c	/^onRegularClose(tcps_sess_t *pSess)$/;"	f	file:
onRegularClose	runtime/strmsrv.c	/^onRegularClose(strms_sess_t *pSess)$/;"	f	file:
onSessAccept	plugins/imgssapi/imgssapi.c	/^onSessAccept(tcpsrv_t *pThis, tcps_sess_t *pSess)$/;"	f	file:
onSyslogRcv	plugins/imrelp/imrelp.c	/^onSyslogRcv(void *pUsr, uchar *pHostname, uchar *pIP, uchar *msg, size_t lenMsg)$/;"	f	file:
one_digit	runtime/msg.c	/^static char *one_digit[10] = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	file:
one_ip	runtime/hashtable/tester.c	/^    uint32_t one_ip; uint32_t two_ip; uint16_t one_port; uint16_t two_port;$/;"	m	struct:key	file:
one_port	runtime/hashtable/tester.c	/^    uint32_t one_ip; uint32_t two_ip; uint16_t one_port; uint16_t two_port;$/;"	m	struct:key	file:
opMode	plugins/imfile/imfile.c	/^	uint8_t opMode;$/;"	m	struct:modConfData_s	file:
openConn	tests/diagtalker.c	/^int openConn(int *fd)$/;"	f
openConn	tests/tcpflood.c	/^int openConn(int *fd)$/;"	f
openConnections	tests/tcpflood.c	/^int openConnections(void)$/;"	f
openFile	plugins/imfile/imfile.c	/^openFile(lstn_t *pLstn)$/;"	f	file:
openKafka	plugins/omkafka/omkafka.c	/^openKafka(instanceData *const __restrict__ pData)$/;"	f	file:
openLogSocket	plugins/imuxsock/imuxsock.c	/^openLogSocket(lstn_t *pLstn)$/;"	f	file:
openMode	runtime/libgcry.h	/^	char openMode; \/* 'r': read, 'w': write *\/$/;"	m	struct:gcryfile_s
openPipe	plugins/mmexternal/mmexternal.c	/^openPipe(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
openPipe	plugins/omprog/omprog.c	/^openPipe(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
openPipe	runtime/libgcry_common.c	/^openPipe(char *cmd, int *fd)$/;"	f	file:
openPipe	tests/nettester.c	/^int openPipe(char *configFile, pid_t *pid, int *pfd)$/;"	f
openSocket	plugins/omuxsock/omuxsock.c	/^openSocket(instanceData *pData)$/;"	f	file:
open_cursor	tools/logctl.c	/^struct db_cursor* open_cursor(struct db_connect *db_conn, struct output *out)$/;"	f
operation	grammar/rainerscript.h	/^			fiop_t operation;$/;"	m	struct:cnfstmt::__anon4::__anon10
optFormatEscape	template.h	/^	char optFormatEscape;	\/* in text fields, *\/$/;"	m	struct:__anon68
optchar	tools/rsyslogd.c	/^	char optchar;$/;"	m	struct:bufOpt	file:
optionForce	tools/rscryutil.c	/^static int optionForce = 0;$/;"	v	file:
option_DisallowWarning	runtime/glbl.c	/^static int option_DisallowWarning = 1;	\/* complain if message from disallowed sender is received *\/$/;"	v	file:
options	template.h	/^			} options;		\/* options as bit fields *\/$/;"	m	struct:templateEntry::__anon69::__anon71	typeref:struct:templateEntry::__anon69::__anon71::__anon72
opts	contrib/mmgrok/mmgrok.c	/^	unsigned long opts;$/;"	v
opts	plugins/mmaudit/mmaudit.c	/^	unsigned long opts;$/;"	v
opts	plugins/mmjsonparse/mmjsonparse.c	/^	unsigned long opts;$/;"	v
opts	plugins/mmnormalize/mmnormalize.c	/^	unsigned long opts;$/;"	v
opts	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	unsigned long opts;$/;"	v
opts	plugins/ommongodb/ommongodb.c	/^	unsigned long opts;$/;"	v
opts	plugins/omruleset/omruleset.c	/^	unsigned long opts;$/;"	v
opts	plugins/omstdout/omstdout.c	/^	unsigned long opts;$/;"	v
origin	runtime/statsobj.h	/^	uchar *origin;$/;"	m	struct:statsobj_s
os	plugins/impstats/statslog-analyzer.py	/^import os$/;"	i
os	plugins/impstats/statslog-graph.py	/^import os$/;"	i
os	plugins/impstats/statslog-splitter.py	/^import os$/;"	i
ourCert	runtime/nsd_gtls.h	/^	gnutls_x509_crt_t ourCert;	\/**< our certificate, if in client mode (unused in server mode) *\/$/;"	m	struct:nsd_gtls_s
ourConf	tests/rscript.c	/^rsconf_t *ourConf;$/;"	v
ourConf	tests/rt-init.c	/^rsconf_t *ourConf;$/;"	v
ourConf	tools/rsyslogd.c	/^rsconf_t *ourConf = NULL;	\/* our config object *\/$/;"	v
ourEnvp	tests/nettester.c	/^static char **ourEnvp;$/;"	v	file:
ourHostName	tests/nettester.c	/^static char *ourHostName;$/;"	v	file:
ourKey	runtime/nsd_gtls.h	/^	gnutls_x509_privkey_t ourKey;	\/**< our private key, if in client mode (unused in server mode) *\/$/;"	m	struct:nsd_gtls_s
outHtmlFile	plugins/impstats/statslog-splitter.py	/^		outHtmlFile = open(szOutputDir + "\/index.html", 'w')$/;"	v
outchannel	outchannel.h	/^struct outchannel {$/;"	s
outchannels_s	runtime/rsconf.h	/^struct outchannels_s {$/;"	s
outchannels_t	runtime/typedefs.h	/^typedef struct outchannels_s outchannels_t;$/;"	t	typeref:struct:outchannels_s
outfile	plugins/external/skeletons/python/plugin.py	/^outfile = "" # "define" global var that the app code needs$/;"	v
output	tests/testconfgen.c	/^void output(int n)$/;"	f
output	tools/logctl.c	/^struct output $/;"	s	file:
outputCZMQ	contrib/omczmq/omczmq.c	/^rsRetVal outputCZMQ(uchar* msg, instanceData* pData) {$/;"	f
outputData	plugins/impstats/statslog-analyzer.py	/^outputData = {}$/;"	v
outputFileName	plugins/mmexternal/mmexternal.c	/^	uchar *outputFileName;	\/* name of file for std[out\/err] or NULL if to discard *\/$/;"	m	struct:_instanceData	file:
outputFileName	plugins/omprog/omprog.c	/^	uchar *outputFileName;	\/* name of file for std[out\/err] or NULL if to discard *\/$/;"	m	struct:_instanceData	file:
outputFiles	plugins/impstats/statslog-splitter.py	/^outputFiles = {}$/;"	v
outputHash	runtime/librsgt_read.c	/^outputHash(FILE *fp, char *hdr, uint8_t *data, uint16_t len, uint8_t verbose)$/;"	f	file:
outputHash	runtime/librsksi_read.c	/^outputHash(FILE *fp, const char *hdr, const uint8_t *data,$/;"	f	file:
outputHexBlob	runtime/librsgt_read.c	/^outputHexBlob(FILE *fp, uint8_t *blob, uint16_t len, uint8_t verbose)$/;"	f	file:
outputHexBlob	runtime/librsksi_read.c	/^outputHexBlob(FILE *fp, const uint8_t *blob, const uint16_t len, const uint8_t verbose)$/;"	f	file:
outputKSIHash	runtime/librsksi_read.c	/^outputKSIHash(FILE *fp, char *hdr, const KSI_DataHash *const __restrict__ hash, const uint8_t verbose)$/;"	f	file:
p	runtime/wti.h	/^	} p; \/* short name for "parameters" *\/$/;"	m	struct:actWrkrInfo	typeref:union:actWrkrInfo::__anon60
p	tools/logctl.c	/^	mongo_packet *p;	$/;"	m	struct:output	file:
p2parse	contrib/pmaixforwardedfrom/pmaixforwardedfrom.c	/^	uchar *p2parse;$/;"	v
p2parse	contrib/pmcisconames/pmcisconames.c	/^	uchar *p2parse;$/;"	v
p2parse	contrib/pmpanngfw/pmpanngfw.c	/^    uchar *p2parse;$/;"	v
p2parse	contrib/pmsnare/pmsnare.c	/^	uchar *p2parse;$/;"	v
p2parse	plugins/pmciscoios/pmciscoios.c	/^	uchar *p2parse;$/;"	v
p2parse	plugins/pmlastmsg/pmlastmsg.c	/^	uchar *p2parse;$/;"	v
p2parse	tools/pmrfc3164.c	/^	uchar *p2parse;$/;"	v
p2parse	tools/pmrfc5424.c	/^	uchar *p2parse;$/;"	v
p2target	contrib/pmpanngfw/pmpanngfw.c	/^    uchar *p2target;$/;"	v
pACLAddHostnameOnFail	runtime/net.h	/^	int    *pACLAddHostnameOnFail; \/* add hostname to acl when DNS resolving has failed *\/$/;"	v
pACLDontResolve	runtime/net.h	/^	int    *pACLDontResolve;       \/* add hostname to acl instead of resolving it to IP(s) *\/$/;"	v
pAPI	plugins/im3195/im3195.c	/^	srAPIShutdownListener(pAPI);$/;"	v
pAPI	plugins/im3195/im3195.c	/^static srAPIObj* pAPI;$/;"	v	file:
pAction	runtime/queue.h	/^	action_t *pAction;	\/* for action queues, ptr to action object; for main queues unused *\/$/;"	m	struct:queue_s
pAction	runtime/wti.h	/^	action_t *pAction;$/;"	m	struct:actWrkrInfo
pAfterRun	threads.h	/^	rsRetVal (*pAfterRun)(struct thrdInfo*);   \/* cleanup function *\/$/;"	m	struct:thrdInfo
pAllowedSenders_GSS	runtime/net.c	/^struct AllowedSenders *pAllowedSenders_GSS = NULL;$/;"	v	typeref:struct:AllowedSenders
pAllowedSenders_TCP	runtime/net.c	/^struct AllowedSenders *pAllowedSenders_TCP = NULL; \/* lists. If NULL, all senders are ok! *\/$/;"	v	typeref:struct:AllowedSenders
pBaseDrvrName	runtime/netstrms.h	/^	uchar *pBaseDrvrName;	\/**< nsd base driver name to use, or NULL if system default *\/$/;"	m	struct:netstrms_s
pBaseDrvrName	runtime/nspoll.h	/^	uchar *pBaseDrvrName;	\/**< nsd base driver name to use, or NULL if system default *\/$/;"	m	struct:nspoll_s
pBaseDrvrName	runtime/nssel.h	/^	uchar *pBaseDrvrName;	\/**< nsd base driver name to use, or NULL if system default *\/$/;"	m	struct:nssel_s
pBindRuleset	contrib/imczmq/imczmq.c	/^	ruleset_t *pBindRuleset;	\/* holds the ruleset reference *\/$/;"	m	struct:instanceConf_s	file:
pBindRuleset	contrib/imzmq3/imzmq3.c	/^    ruleset_t*             pBindRuleset;$/;"	m	struct:instanceConf_s	file:
pBindRuleset	plugins/imfile/imfile.c	/^	ruleset_t *pBindRuleset;	\/* ruleset to bind listener to (use system default if unspecified) *\/$/;"	m	struct:instanceConf_s	file:
pBindRuleset	plugins/impstats/impstats.c	/^	ruleset_t *pBindRuleset;	\/* ruleset to bind listener to (use system default if unspecified) *\/$/;"	m	struct:modConfData_s	file:
pBindRuleset	plugins/imptcp/imptcp.c	/^	ruleset_t *pBindRuleset;	\/* ruleset to bind listener to (use system default if unspecified) *\/$/;"	m	struct:instanceConf_s	file:
pBindRuleset	plugins/imrelp/imrelp.c	/^	ruleset_t *pBindRuleset;	\/* ruleset to bind listener to *\/$/;"	m	struct:instanceConf_s	file:
pBindRuleset	plugins/imtcp/imtcp.c	/^	ruleset_t *pBindRuleset;	\/* ruleset to bind listener to (use system default if unspecified) *\/$/;"	m	struct:instanceConf_s	file:
pBindRuleset	plugins/imudp/imudp.c	/^	ruleset_t *pBindRuleset;	\/* ruleset to bind listener to (use system default if unspecified) *\/$/;"	m	struct:instanceConf_s	file:
pBuf	runtime/queue.h	/^			void** pBuf;		\/* the queued user data structure *\/$/;"	m	struct:queue_s::__anon48::__anon49
pBuf	runtime/stream.h	/^		uchar *pBuf;$/;"	m	struct:strm_s::__anon67
pBuf	runtime/stringbuf.h	/^	uchar *pBuf;		\/**< pointer to the string buffer, may be NULL if string is empty *\/$/;"	m	struct:cstr_s
pBuf	tools/pmrfc5424.c	/^	uchar *pBuf = NULL;$/;"	v
pCSAPPNAME	runtime/msg.h	/^	cstr_t *pCSAPPNAME;	\/* APP-NAME *\/$/;"	m	struct:msg
pCSCompValue	grammar/rainerscript.h	/^			struct cstr_s *pCSCompValue;\/* value to "compare" against *\/$/;"	m	struct:cnfstmt::__anon4::__anon10	typeref:struct:cnfstmt::__anon4::__anon10::cstr_s
pCSMSGID	runtime/msg.h	/^	cstr_t *pCSMSGID;	\/* MSGID *\/$/;"	m	struct:msg
pCSPROCID	runtime/msg.h	/^	cstr_t *pCSPROCID;	\/* PROCID *\/$/;"	m	struct:msg
pCStr	parse.h	/^	cstr_t *pCStr;		\/**< pointer to the string object we are parsing *\/$/;"	m	struct:rsParsObject
pConf	contrib/imczmq/imczmq.c	/^	rsconf_t *pConf;$/;"	m	struct:modConfData_s	file:
pConf	contrib/imkmsg/imkmsg.h	/^	rsconf_t *pConf;$/;"	m	struct:modConfData_s
pConf	contrib/imzmq3/imzmq3.c	/^    rsconf_t* pConf;$/;"	m	struct:modConfData_s	file:
pConf	contrib/mmcount/mmcount.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	contrib/mmgrok/mmgrok.c	/^    rsconf_t   *pConf;\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	contrib/mmsequence/mmsequence.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/imfile/imfile.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/imklog/imklog.h	/^	rsconf_t *pConf;$/;"	m	struct:modConfData_s
pConf	plugins/immark/immark.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/impstats/impstats.c	/^	rsconf_t *pConf; \/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/imptcp/imptcp.c	/^	rsconf_t *pConf;		\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/imrelp/imrelp.c	/^	rsconf_t *pConf;		\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/imtcp/imtcp.c	/^	rsconf_t *pConf;		\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/imudp/imudp.c	/^	rsconf_t *pConf;		\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/imuxsock/imuxsock.c	/^	rsconf_t *pConf;		\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/mmanon/mmanon.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/mmfields/mmfields.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/mmjsonparse/mmjsonparse.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/mmnormalize/mmnormalize.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/mmpstrucdata/mmpstrucdata.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/mmutf8fix/mmutf8fix.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/omjournal/omjournal.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/omlibdbi/omlibdbi.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/omudpspoof/omudpspoof.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	plugins/omuxsock/omuxsock.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	tools/omfile.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	tools/omfwd.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConf	tools/ompipe.c	/^	rsconf_t *pConf;	\/* our overall config object *\/$/;"	m	struct:modConfData_s	file:
pConstant	template.h	/^			uchar *pConstant;	\/* pointer to constant value *\/$/;"	m	struct:templateEntry::__anon69::__anon70
pConsumer	runtime/queue.h	/^	rsRetVal (*pConsumer)(void *,batch_t*, wti_t*); \/* user-supplied consumer function for dequeued messages *\/$/;"	m	struct:queue_s
pConsumer	runtime/wtp.h	/^	rsRetVal (*pConsumer)(void *); \/* user-supplied consumer function for dewtpd messages *\/$/;"	m	struct:wtp_s
pCounter	contrib/mmcount/mmcount.c	/^	int *pCounter;$/;"	v
pCounter	contrib/mmsequence/mmsequence.c	/^	int *pCounter;$/;"	v
pCurr	runtime/rsconf.h	/^	ruleset_t *pCurr; \/* currently "active" ruleset *\/$/;"	m	struct:rulesets_s
pCurrRuleset	tests/runtime-dummy.c	/^ruleset_t *pCurrRuleset;$/;"	v
pData	contrib/mmcount/mmcount.c	/^	instanceData *const pData = pWrkrData->pData;$/;"	v
pData	contrib/mmcount/mmcount.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/mmcount/mmcount.c	/^	setInstParamDefaults(pData);$/;"	v
pData	contrib/mmgrok/mmgrok.c	/^	setInstParamDefaults(pData);$/;"	v
pData	contrib/mmgrok/mmgrok.c	/^        instanceData *pData;$/;"	v
pData	contrib/mmgrok/mmgrok.c	/^        pData = pWrkrData->pData;$/;"	v
pData	contrib/mmgrok/mmgrok.c	/^    instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	instanceData *pData = pWrkrData->pData;$/;"	v
pData	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	setInstParamDefaults(pData);$/;"	v
pData	contrib/mmsequence/mmsequence.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/mmsequence/mmsequence.c	/^	instanceData *pData;$/;"	v
pData	contrib/mmsequence/mmsequence.c	/^	pData = pWrkrData->pData;$/;"	v
pData	contrib/mmsequence/mmsequence.c	/^	setInstParamDefaults(pData);$/;"	v
pData	contrib/omczmq/omczmq.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/omczmq/omczmq.c	/^	instanceData *pData;$/;"	v
pData	contrib/omczmq/omczmq.c	/^	setInstParamDefaults(pData);$/;"	v
pData	contrib/omhiredis/omhiredis.c	/^	instanceData *pData; \/* instanc data *\/$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/omhiredis/omhiredis.c	/^	setInstParamDefaults(pData);$/;"	v
pData	contrib/omhttpfs/omhttpfs.c	/^    instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/omhttpfs/omhttpfs.c	/^    setInstParamDefaults(pData);$/;"	v
pData	contrib/omrabbitmq/omrabbitmq.c	/^	instanceData *pData = pWrkrData->pData;$/;"	v
pData	contrib/omrabbitmq/omrabbitmq.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/omrabbitmq/omrabbitmq.c	/^	setInstParamDefaults(pData);$/;"	v
pData	contrib/omzmq3/omzmq3.c	/^	instanceData *pData = pWrkrData->pData;$/;"	v
pData	contrib/omzmq3/omzmq3.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	contrib/omzmq3/omzmq3.c	/^    setInstParamDefaults(pData);$/;"	v
pData	plugins/mmanon/mmanon.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmanon/mmanon.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/mmaudit/mmaudit.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmexternal/mmexternal.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmexternal/mmexternal.c	/^	instanceData *pData;$/;"	v
pData	plugins/mmexternal/mmexternal.c	/^	pData = pWrkrData->pData;$/;"	v
pData	plugins/mmexternal/mmexternal.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/mmfields/mmfields.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmfields/mmfields.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/mmjsonparse/mmjsonparse.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmjsonparse/mmjsonparse.c	/^	instanceData *pData;$/;"	v
pData	plugins/mmjsonparse/mmjsonparse.c	/^	pData = pWrkrData->pData;$/;"	v
pData	plugins/mmjsonparse/mmjsonparse.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/mmnormalize/mmnormalize.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmnormalize/mmnormalize.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/mmpstrucdata/mmpstrucdata.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmpstrucdata/mmpstrucdata.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	instanceData *pData;$/;"	v
pData	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	pData = pWrkrData->pData;$/;"	v
pData	plugins/mmutf8fix/mmutf8fix.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/mmutf8fix/mmutf8fix.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/omelasticsearch/omelasticsearch.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omelasticsearch/omelasticsearch.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/omgssapi/omgssapi.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omgssapi/omgssapi.c	/^	instanceData *pData;$/;"	v
pData	plugins/omhdfs/omhdfs.c	/^	instanceData *pData = pWrkrData->pData;$/;"	v
pData	plugins/omhdfs/omhdfs.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omjournal/omjournal.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omkafka/omkafka.c	/^	closeKafka(pData);$/;"	v
pData	plugins/omkafka/omkafka.c	/^	instanceData *const pData = pWrkrData->pData;$/;"	v
pData	plugins/omkafka/omkafka.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omkafka/omkafka.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/omlibdbi/omlibdbi.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omlibdbi/omlibdbi.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/ommail/ommail.c	/^	const instanceData *const __restrict__ pData = pWrkrData->pData;$/;"	v
pData	plugins/ommail/ommail.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/ommail/ommail.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/ommongodb/ommongodb.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/ommongodb/ommongodb.c	/^	instanceData *pData;$/;"	v
pData	plugins/ommongodb/ommongodb.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/ommysql/ommysql.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/ommysql/ommysql.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/ompgsql/ompgsql.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omprog/omprog.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omprog/omprog.c	/^	instanceData *pData;$/;"	v
pData	plugins/omprog/omprog.c	/^	pData = pWrkrData->pData;$/;"	v
pData	plugins/omprog/omprog.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/omrelp/omrelp.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omrelp/omrelp.c	/^	instanceData *pData;$/;"	v
pData	plugins/omrelp/omrelp.c	/^	pData = pWrkrData->pData;$/;"	v
pData	plugins/omrelp/omrelp.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/omruleset/omruleset.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omsnmp/omsnmp.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omsnmp/omsnmp.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/omstdout/omstdout.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omtesting/omtesting.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omtesting/omtesting.c	/^	instanceData *pData;$/;"	v
pData	plugins/omudpspoof/omudpspoof.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	plugins/omudpspoof/omudpspoof.c	/^	setInstParamDefaults(pData);$/;"	v
pData	plugins/omuxsock/omuxsock.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	runtime/cfsysline.h	/^	void *pData;				\/* user-supplied data pointer *\/$/;"	m	struct:cslCmdHdlr_s
pData	runtime/linkedlist.h	/^	void *pData;		\/* user-supplied data pointer *\/$/;"	m	struct:llElt_s
pData	tools/omdiscard.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	tools/omfile.c	/^		closeFile(pData);$/;"	v
pData	tools/omfile.c	/^	instanceData *__restrict__ const pData = pWrkrData->pData;$/;"	v
pData	tools/omfile.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	tools/omfile.c	/^	setInstParamDefaults(pData);$/;"	v
pData	tools/omfile.c	/^	setupInstStatsCtrs(pData);$/;"	v
pData	tools/omfwd.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	tools/omfwd.c	/^	setInstParamDefaults(pData);$/;"	v
pData	tools/ompipe.c	/^	instanceData *__restrict__ const pData = pWrkrData->pData;$/;"	v
pData	tools/ompipe.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	tools/ompipe.c	/^	instanceData *pData;$/;"	v
pData	tools/ompipe.c	/^	pData = pWrkrData->pData;$/;"	v
pData	tools/ompipe.c	/^	setInstParamDefaults(pData);$/;"	v
pData	tools/omshell.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	tools/omusrmsg.c	/^	instanceData *pData;$/;"	m	struct:wrkrInstanceData	file:
pData	tools/omusrmsg.c	/^	setInstParamDefaults(pData);$/;"	v
pDelRoot	runtime/queue.h	/^			qLinkedList_t *pDelRoot;$/;"	m	struct:queue_s::__anon48::__anon50
pDeqRoot	runtime/queue.h	/^			qLinkedList_t *pDeqRoot;$/;"	m	struct:queue_s::__anon48::__anon50
pDflt	runtime/rsconf.h	/^	ruleset_t *pDflt; \/* current default ruleset, e.g. for binding to actions which have no other *\/$/;"	m	struct:rulesets_s
pDfltHostnameCmp	runtime/conf.c	/^cstr_t *pDfltHostnameCmp = NULL;$/;"	v
pDfltParsLst	runtime/parser.c	/^	InitParserList(&pDfltParsLst);$/;"	v
pDfltParsLst	runtime/parser.c	/^parserList_t *pDfltParsLst = NULL;$/;"	v
pDfltProgNameCmp	runtime/conf.c	/^cstr_t *pDfltProgNameCmp = NULL;$/;"	v
pDrvrData	runtime/netstrm.h	/^	nsd_t *pDrvrData;	\/**< the driver's data elements (at most other places, this is called pNsd) *\/$/;"	m	struct:netstrm_s
pDrvrData	runtime/nspoll.h	/^	nsd_t *pDrvrData;	\/**< the driver's data elements *\/$/;"	m	struct:nspoll_s
pDrvrData	runtime/nssel.h	/^	nsd_t *pDrvrData;	\/**< the driver's data elements *\/$/;"	m	struct:nssel_s
pDrvrName	runtime/netstrms.h	/^	uchar *pDrvrName;	\/**< full base driver name (set when driver is loaded) *\/$/;"	m	struct:netstrms_s
pDrvrName	runtime/nspoll.h	/^	uchar *pDrvrName;	\/**< full base driver name (set when driver is loaded) *\/$/;"	m	struct:nspoll_s
pDrvrName	runtime/nssel.h	/^	uchar *pDrvrName;	\/**< full base driver name (set when driver is loaded) *\/$/;"	m	struct:nssel_s
pElem	runtime/batch.h	/^	batch_obj_t *pElem;	\/* batch elements *\/$/;"	m	struct:batch_s
pEltDestruct	runtime/linkedlist.h	/^	rsRetVal (*pEltDestruct)(void*pData);	\/* destructor for user pointer in llElt_t's *\/$/;"	m	struct:linkedList_s
pEntryLast	template.h	/^	struct templateEntry *pEntryLast;$/;"	m	struct:__anon68	typeref:struct:__anon68::templateEntry
pEntryRoot	template.h	/^	struct templateEntry *pEntryRoot;$/;"	m	struct:__anon68	typeref:struct:__anon68::templateEntry
pFile	plugins/omhdfs/omhdfs.c	/^	fileObjAddUser(pFile);$/;"	v
pFile	plugins/omhdfs/omhdfs.c	/^	file_t *pFile;$/;"	m	struct:_instanceData	file:
pFile	plugins/omhdfs/omhdfs.c	/^	file_t *pFile;$/;"	v
pFile	plugins/omhdfs/omhdfs.c	/^    file_t *pFile;$/;"	v
pFunc	runtime/ruleset.c	/^	rsRetVal (*pFunc)(void*, void*);$/;"	m	struct:iterateAllActions_s	file:
pFuncDB	runtime/debug.c	/^	dbgFuncDB_t *pFuncDB;$/;"	m	struct:dbgFuncDBListEntry_s	file:
pFuncDB	runtime/debug.c	/^	dbgFuncDB_t *pFuncDB;$/;"	m	struct:dbgMutLog_s	file:
pFuncDBListRoot	runtime/debug.c	/^dbgFuncDBListEntry_t *pFuncDBListRoot;$/;"	v
pHOSTNAME	tools/smfile.c	/^	uchar *pHOSTNAME;$/;"	v
pHOSTNAME	tools/smfwd.c	/^	uchar *pHOSTNAME;$/;"	v
pHOSTNAME	tools/smtradfile.c	/^	uchar *pHOSTNAME;$/;"	v
pHOSTNAME	tools/smtradfwd.c	/^	uchar *pHOSTNAME;$/;"	v
pHandles	runtime/modules.c	/^static struct dlhandle_s *pHandles = NULL;$/;"	v	typeref:struct:dlhandle_s	file:
pIOBuf	runtime/stream.h	/^	uchar *pIOBuf;	\/* the iobuffer currently in use to gather data *\/$/;"	m	struct:strm_s
pInputName	contrib/imkmsg/imkmsg.c	/^static prop_t *pInputName = NULL;	\/* there is only one global inputName for all messages generated by this module *\/$/;"	v	file:
pInputName	plugins/im3195/im3195.c	/^static prop_t *pInputName = NULL;       \/* there is only one global inputName for all messages generated by this module *\/$/;"	v	file:
pInputName	plugins/imdiag/imdiag.c	/^static prop_t *pInputName = NULL;	\/* there is only one global inputName for all messages generated by this input *\/$/;"	v	file:
pInputName	plugins/imfile/imfile.c	/^static prop_t *pInputName = NULL;	\/* there is only one global inputName for all messages generated by this input *\/$/;"	v	file:
pInputName	plugins/imjournal/imjournal.c	/^static prop_t *pInputName = NULL;	\/* there is only one global inputName for all messages generated by this module *\/$/;"	v	file:
pInputName	plugins/imklog/imklog.c	/^static prop_t *pInputName = NULL;	\/* there is only one global inputName for all messages generated by this module *\/$/;"	v	file:
pInputName	plugins/impstats/impstats.c	/^static prop_t *pInputName = NULL;$/;"	v	file:
pInputName	plugins/imptcp/imptcp.c	/^	prop_t *pInputName;		\/* InputName in (fast to process) property format *\/$/;"	m	struct:ptcpsrv_s	file:
pInputName	plugins/imrelp/imrelp.c	/^	prop_t *pInputName;		\/* InputName in property format for fast access *\/$/;"	m	struct:instanceConf_s	file:
pInputName	plugins/imsolaris/imsolaris.c	/^static prop_t *pInputName = NULL;	\/* our inputName currently is always "imuxsock", and this will hold it *\/$/;"	v	file:
pInputName	plugins/imudp/imudp.c	/^	prop_t *pInputName;$/;"	m	struct:lstn_s	file:
pInputName	plugins/imuxsock/imuxsock.c	/^static prop_t *pInputName = NULL;	\/* our inputName currently is always "imudp", and this will hold it *\/$/;"	v	file:
pInputName	runtime/msg.h	/^	prop_t *pInputName;	\/* input name property *\/$/;"	m	struct:msg
pInputName	runtime/tcpsrv.h	/^	prop_t *pInputName;$/;"	m	struct:tcpLstnPortList_s
pInst	runtime/parser.h	/^	void *pInst;		\/* instance data for the parser (v2+ module interface) *\/$/;"	m	struct:parser_s
pInt	runtime/statsobj.h	/^		int *pInt;$/;"	m	union:ctr_s::__anon52
pIntCtr	runtime/statsobj.h	/^		intctr_t *pIntCtr;$/;"	m	union:ctr_s::__anon52
pInternalInputName	tools/rsyslogd.c	/^prop_t *pInternalInputName = NULL;	\/* there is only one global inputName for all internally-generated messages *\/$/;"	v
pIsPermittedHost	runtime/strmsrv.h	/^	int      (*pIsPermittedHost)(struct sockaddr *addr, char *fromHostFQDN, void*pUsrSrv, void*pUsrSess);$/;"	m	struct:strmsrv_s
pIsPermittedHost	runtime/tcpsrv.h	/^	int      (*pIsPermittedHost)(struct sockaddr *addr, char *fromHostFQDN, void*pUsrSrv, void*pUsrSess);$/;"	m	struct:tcpsrv_s
pKey	runtime/linkedlist.h	/^	void *pKey;			\/* the list key (searchable, if set) *\/$/;"	m	struct:linkedList_s
pKey	runtime/linkedlist.h	/^	void *pKey;		\/* key for this element *\/$/;"	m	struct:llElt_s
pKeyDestruct	runtime/linkedlist.h	/^	rsRetVal (*pKeyDestruct)(void*pKey);	\/* destructor for key pointer in llElt_t's *\/$/;"	m	struct:linkedList_s
pLast	runtime/linkedlist.h	/^	llElt_t *pLast;	\/* list tail *\/$/;"	m	struct:linkedList_s
pLast	runtime/queue.h	/^			qLinkedList_t *pLast;$/;"	m	struct:queue_s::__anon48::__anon50
pLastAllowedSenders_GSS	runtime/net.c	/^static struct AllowedSenders *pLastAllowedSenders_GSS = NULL;$/;"	v	typeref:struct:AllowedSenders	file:
pLastAllowedSenders_TCP	runtime/net.c	/^static struct AllowedSenders *pLastAllowedSenders_TCP = NULL; \/* element in the respective list *\/$/;"	v	typeref:struct:AllowedSenders	file:
pLastAllowedSenders_UDP	runtime/net.c	/^static struct AllowedSenders *pLastAllowedSenders_UDP = NULL; \/* and now the pointers to the last *\/$/;"	v	typeref:struct:AllowedSenders	file:
pLoadedModules	runtime/modules.c	/^static modInfo_t *pLoadedModules = NULL;	\/* list of currently-loaded modules *\/$/;"	v	file:
pLoadedModulesLast	runtime/modules.c	/^static modInfo_t *pLoadedModulesLast = NULL;	\/* tail-pointer *\/$/;"	v	file:
pLocalHostIP	contrib/imkmsg/imkmsg.c	/^static prop_t *pLocalHostIP = NULL;	\/* a pseudo-constant propterty for 127.0.0.1 *\/$/;"	v	file:
pLocalHostIP	plugins/imjournal/imjournal.c	/^static prop_t *pLocalHostIP = NULL;	\/* a pseudo-constant propterty for 127.0.0.1 *\/$/;"	v	file:
pLocalHostIP	plugins/imklog/imklog.c	/^static prop_t *pLocalHostIP = NULL;$/;"	v	file:
pLocalHostIP	plugins/imuxsock/imuxsock.c	/^static prop_t *pLocalHostIP = NULL;	\/* there is only one global IP for all internally-generated messages *\/$/;"	v	file:
pLogHostName	plugins/imuxsock/imuxsock.c	/^	uchar *pLogHostName;		\/* host name to use with this socket *\/$/;"	m	struct:configSettings_s	file:
pLogHostName	plugins/imuxsock/imuxsock.c	/^	uchar *pLogHostName;		\/* host name to use with this socket *\/$/;"	m	struct:instanceConf_s	file:
pLogSockName	plugins/imuxsock/imuxsock.c	/^	uchar *pLogSockName;$/;"	m	struct:configSettings_s	file:
pLogSockName	plugins/imuxsock/imuxsock.c	/^	uchar *pLogSockName;$/;"	m	struct:modConfData_s	file:
pLstn	plugins/imfile/imfile.c	/^	lstn_t *pLstn;	\/* NULL, if this is a dir entry, otherwise pointer into listener(file) table *\/$/;"	m	struct:wd_map_s	file:
pLstn	plugins/imfile/imfile.c	/^	lstn_t *pLstn;$/;"	m	struct:dirInfoFiles_s	file:
pLstn	plugins/imptcp/imptcp.c	/^	ptcplstn_t *pLstn;		\/* root of our listeners *\/$/;"	m	struct:ptcpsrv_s	file:
pLstn	plugins/imptcp/imptcp.c	/^	ptcplstn_t *pLstn;	\/* our listener *\/$/;"	m	struct:ptcpsess_s	file:
pLstnInfo	runtime/strms_sess.h	/^	strmLstnPortList_t *pLstnInfo;	\/* pointer back to listener info *\/$/;"	m	struct:strms_sess_s
pLstnInfo	runtime/tcps_sess.h	/^	tcpLstnPortList_t *pLstnInfo;	\/* pointer back to listener info *\/$/;"	m	struct:tcps_sess_s
pLstnPorts	runtime/strmsrv.h	/^	strmLstnPortList_t *pLstnPorts;	\/**< head pointer for listen ports *\/$/;"	m	struct:strmsrv_s
pLstnPorts	runtime/tcpsrv.h	/^	tcpLstnPortList_t *pLstnPorts;	\/**< head pointer for listen ports *\/$/;"	m	struct:tcpsrv_s
pMSG	tools/smfile.c	/^	uchar *pMSG;$/;"	v
pMSG	tools/smfwd.c	/^	uchar *pMSG;$/;"	v
pMSG	tools/smtradfile.c	/^	uchar *pMSG;$/;"	v
pMSG	tools/smtradfwd.c	/^	uchar *pMSG;$/;"	v
pMod	action.h	/^	struct modInfo_s *pMod;\/* pointer to output module handling this selector *\/$/;"	m	struct:action_s	typeref:struct:action_s::modInfo_s
pMod	runtime/rsconf.h	/^	modInfo_t *pMod;$/;"	m	struct:cfgmodules_etry_s
pModData	action.h	/^	void	*pModData;	\/* pointer to module data - content is module-specific *\/$/;"	m	struct:action_s
pModDir	runtime/modules.c	/^static uchar *pModDir;		\/* directory where loadable modules are found *\/$/;"	v	file:
pModHdlr	runtime/modules.h	/^	void	*pModHdlr;$/;"	m	struct:dlhandle_s
pModHdlr	runtime/modules.h	/^	void *pModHdlr; \/* handler to the dynamic library holding the module *\/$/;"	m	struct:modInfo_s
pModInfo	runtime/obj-types.h	/^	struct modInfo_s *pModInfo;$/;"	m	struct:objInfo_s	typeref:struct:objInfo_s::modInfo_s
pModUsrRoot	runtime/modules.h	/^	modUsr_t *pModUsrRoot;$/;"	m	struct:modInfo_s
pModule	runtime/parser.h	/^	modInfo_t *pModule;	\/* pointer to parser's module *\/$/;"	m	struct:parser_s
pModule	runtime/strgen.h	/^	modInfo_t *pModule;	\/* pointer to strgen's module *\/$/;"	m	struct:strgen_s
pMsg	contrib/mmcount/mmcount.c	/^	msg_t *pMsg;$/;"	v
pMsg	contrib/mmcount/mmcount.c	/^	pMsg = (msg_t*) ppString[0];$/;"	v
pMsg	contrib/mmgrok/mmgrok.c	/^	msg_t *pMsg;$/;"	v
pMsg	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	msg_t *pMsg;$/;"	v
pMsg	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	pMsg = (msg_t*) ppString[0];$/;"	v
pMsg	contrib/mmsequence/mmsequence.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/imptcp/imptcp.c	/^	uchar *pMsg;		\/* message (fragment) received *\/$/;"	m	struct:ptcpsess_s	file:
pMsg	plugins/mmanon/mmanon.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/mmanon/mmanon.c	/^	pMsg = (msg_t*) ppString[0];$/;"	v
pMsg	plugins/mmaudit/mmaudit.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/mmaudit/mmaudit.c	/^	pMsg = (msg_t*) ppString[0];$/;"	v
pMsg	plugins/mmfields/mmfields.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/mmfields/mmfields.c	/^	pMsg = (msg_t*) ppString[0];$/;"	v
pMsg	plugins/mmjsonparse/mmjsonparse.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/mmnormalize/mmnormalize.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/mmnormalize/mmnormalize.c	/^	pMsg = (msg_t*) ppString[0];$/;"	v
pMsg	plugins/mmpstrucdata/mmpstrucdata.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/mmutf8fix/mmutf8fix.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/mmutf8fix/mmutf8fix.c	/^	pMsg = (msg_t*) ppString[0];$/;"	v
pMsg	plugins/omjournal/omjournal.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/omjournal/omjournal.c	/^	pMsg = (msg_t*) ppString[0];$/;"	v
pMsg	plugins/omrelp/omrelp.c	/^	uchar *pMsg; \/* temporary buffering *\/$/;"	v
pMsg	plugins/omruleset/omruleset.c	/^	msg_t *pMsg;$/;"	v
pMsg	plugins/omruleset/omruleset.c	/^	submitMsg2(pMsg);$/;"	v
pMsg	runtime/batch.h	/^	msg_t *pMsg;$/;"	m	struct:batch_obj_s
pMsg	runtime/queue.h	/^	msg_t *pMsg;$/;"	m	struct:qLinkedList_S
pMsg	runtime/ratelimit.h	/^	msg_t *pMsg;$/;"	m	struct:ratelimit_s
pMsg	runtime/tcps_sess.h	/^	uchar *pMsg;		\/* message (fragment) received *\/$/;"	m	struct:tcps_sess_s
pMsg	tools/iminternal.h	/^	msg_t *pMsg;	\/* the message (in all its glory) *\/$/;"	m	struct:iminternal_s
pMsgQueue	tests/runtime-dummy.c	/^void *pMsgQueue = NULL;$/;"	v
pMsgQueue	tools/rsyslogd.c	/^qqueue_t *pMsgQueue = NULL;	\/* default main message queue *\/$/;"	v
pNS	runtime/netstrm.h	/^	netstrms_t *pNS;	\/**< pointer to our netstream subsystem object *\/$/;"	m	struct:netstrm_s
pNS	runtime/strmsrv.h	/^	netstrms_t *pNS;	\/**< pointer to network stream subsystem *\/$/;"	m	struct:strmsrv_s
pNS	runtime/tcpsrv.h	/^	netstrms_t *pNS;	\/**< pointer to network stream subsystem *\/$/;"	m	struct:tcpsrv_s
pNS	tools/omfwd.c	/^	netstrms_t *pNS; \/* netstream subsystem *\/$/;"	m	struct:wrkrInstanceData	file:
pName	plugins/omkafka/omkafka.c	/^	uchar *pName;$/;"	m	struct:s_dynaTopicCacheEntry	file:
pName	runtime/debug.c	/^	uchar *pName;$/;"	m	struct:dbgPrintName_s	file:
pName	runtime/parser.h	/^	uchar *pName;		\/* name of this parser *\/$/;"	m	struct:parser_s
pName	runtime/strgen.h	/^	uchar *pName;		\/* name of this strgen *\/$/;"	m	struct:strgen_s
pName	tools/omfile.c	/^	uchar *pName;		\/* name currently open, if dynamic name *\/$/;"	m	struct:s_dynaFileCacheEntry	file:
pNetstrm	tools/omfwd.c	/^	netstrm_t *pNetstrm; \/* our output netstream *\/$/;"	m	struct:wrkrInstanceData	file:
pNext	outchannel.h	/^	struct outchannel *pNext;$/;"	m	struct:outchannel	typeref:struct:outchannel::outchannel
pNext	plugins/imptcp/imptcp.c	/^	ptcpsrv_t *pNext;		\/* linked list maintenance *\/$/;"	m	struct:ptcpsrv_s	file:
pNext	plugins/ommail/ommail.c	/^	toRcpt_t *pNext;$/;"	m	struct:toRcpt_s	file:
pNext	runtime/debug.c	/^	struct dbgFuncDBListEntry_s *pNext;$/;"	m	struct:dbgFuncDBListEntry_s	typeref:struct:dbgFuncDBListEntry_s::dbgFuncDBListEntry_s	file:
pNext	runtime/debug.c	/^	struct dbgMutLog_s *pNext;$/;"	m	struct:dbgMutLog_s	typeref:struct:dbgMutLog_s::dbgMutLog_s	file:
pNext	runtime/debug.c	/^	struct dbgPrintName_s *pNext;$/;"	m	struct:dbgPrintName_s	typeref:struct:dbgPrintName_s::dbgPrintName_s	file:
pNext	runtime/debug.h	/^	struct dbgCallStack_s *pNext;$/;"	m	struct:dbgCallStack_s	typeref:struct:dbgCallStack_s::dbgCallStack_s
pNext	runtime/linkedlist.h	/^	struct llElt_s *pNext;$/;"	m	struct:llElt_s	typeref:struct:llElt_s::llElt_s
pNext	runtime/modules.h	/^	struct modInfo_s *pNext;	\/* support for creating a linked module list *\/$/;"	m	struct:modInfo_s	typeref:struct:modInfo_s::modInfo_s
pNext	runtime/modules.h	/^	struct modUsr_s *pNext;$/;"	m	struct:modUsr_s	typeref:struct:modUsr_s::modUsr_s
pNext	runtime/net.h	/^	permittedPeerWildcard_t *pNext;$/;"	m	struct:permittedPeerWildcard_s
pNext	runtime/net.h	/^	permittedPeers_t *pNext;$/;"	m	struct:permittedPeers_s
pNext	runtime/net.h	/^	struct AllowedSenders *pNext;$/;"	m	struct:AllowedSenders	typeref:struct:AllowedSenders::AllowedSenders
pNext	runtime/nsdpoll_ptcp.h	/^	nsdpoll_epollevt_lst_t *pNext;$/;"	m	struct:nsdpoll_epollevt_lst_s
pNext	runtime/parser.h	/^	parserList_t *pNext;$/;"	m	struct:parserList_s
pNext	runtime/queue.h	/^	struct qLinkedList_S *pNext;$/;"	m	struct:qLinkedList_S	typeref:struct:qLinkedList_S::qLinkedList_S
pNext	runtime/queue.h	/^	struct toDeleteLst_s *pNext;$/;"	m	struct:toDeleteLst_s	typeref:struct:toDeleteLst_s::toDeleteLst_s
pNext	runtime/strgen.h	/^	strgenList_t *pNext;$/;"	m	struct:strgenList_s
pNext	runtime/strmsrv.h	/^	strmLstnPortList_t *pNext;	\/**< next port or NULL *\/$/;"	m	struct:strmLstnPortList_s
pNext	runtime/tcpsrv.h	/^	tcpLstnPortList_t *pNext;	\/**< next port or NULL *\/$/;"	m	struct:tcpLstnPortList_s
pNext	template.h	/^	struct template *pNext;$/;"	m	struct:__anon68	typeref:struct:__anon68::
pNext	template.h	/^	struct templateEntry *pNext;$/;"	m	struct:templateEntry	typeref:struct:templateEntry::templateEntry
pNext	tools/rsyslogd.c	/^	struct bufOpt *pNext;$/;"	m	struct:bufOpt	typeref:struct:bufOpt::bufOpt	file:
pObjInfo	runtime/obj-types.h	/^	objInfo_t *pObjInfo;$/;"	m	struct:obj_s
pOnErrClose	runtime/strmsrv.h	/^	rsRetVal (*pOnErrClose)(strms_sess_t *pSess);$/;"	m	struct:strmsrv_s
pOnErrClose	runtime/tcpsrv.h	/^	rsRetVal (*pOnErrClose)(tcps_sess_t *pSess);$/;"	m	struct:tcpsrv_s
pOnListenDeinit	runtime/strmsrv.h	/^	rsRetVal (*pOnListenDeinit)(void*);$/;"	m	struct:strmsrv_s
pOnListenDeinit	runtime/tcpsrv.h	/^	rsRetVal (*pOnListenDeinit)(void*);$/;"	m	struct:tcpsrv_s
pOnRegularClose	runtime/strmsrv.h	/^	rsRetVal (*pOnRegularClose)(strms_sess_t *pSess);$/;"	m	struct:strmsrv_s
pOnRegularClose	runtime/tcpsrv.h	/^	rsRetVal (*pOnRegularClose)(tcps_sess_t *pSess);$/;"	m	struct:tcpsrv_s
pOnSessAccept	runtime/strmsrv.h	/^	rsRetVal (*pOnSessAccept)(strmsrv_t *, strms_sess_t*);$/;"	m	struct:strmsrv_s
pOnSessAccept	runtime/tcpsrv.h	/^	rsRetVal (*pOnSessAccept)(tcpsrv_t *, tcps_sess_t*);$/;"	m	struct:tcpsrv_s
pOnSessDestruct	runtime/strmsrv.h	/^	rsRetVal (*pOnSessDestruct)(void*);$/;"	m	struct:strmsrv_s
pOnSessDestruct	runtime/tcpsrv.h	/^	rsRetVal (*pOnSessDestruct)(void*);$/;"	m	struct:tcpsrv_s
pOurTcpsrv	plugins/imdiag/imdiag.c	/^	pOurTcpsrv = NULL;$/;"	v
pOurTcpsrv	plugins/imdiag/imdiag.c	/^static tcpsrv_t *pOurTcpsrv = NULL;  \/* our TCP server(listener) TODO: change for multiple instances *\/$/;"	v	file:
pOurTcpsrv	plugins/imgssapi/imgssapi.c	/^	pOurTcpsrv = NULL;$/;"	v
pOurTcpsrv	plugins/imgssapi/imgssapi.c	/^static tcpsrv_t *pOurTcpsrv = NULL;  \/* our TCP server(listener) TODO: change for multiple instances *\/$/;"	v	file:
pOurTcpsrv	plugins/imtcp/imtcp.c	/^	pOurTcpsrv = NULL;$/;"	v
pOurTcpsrv	plugins/imtcp/imtcp.c	/^static tcpsrv_t *pOurTcpsrv = NULL;  \/* our TCP server(listener) TODO: change for multiple instances *\/$/;"	v	file:
pPRI	tools/smfwd.c	/^	char *pPRI;$/;"	v
pPRI	tools/smfwd.c	/^	pPRI = getPRI(pMsg);$/;"	v
pPRI	tools/smtradfwd.c	/^	char *pPRI;$/;"	v
pPRI	tools/smtradfwd.c	/^	pPRI = getPRI(pMsg);$/;"	v
pParam	runtime/ruleset.c	/^	void *pParam;$/;"	m	struct:iterateAllActions_s	file:
pParsLstRoot	runtime/parser.c	/^	InitParserList(&pParsLstRoot);$/;"	v
pParsLstRoot	runtime/parser.c	/^parserList_t *pParsLstRoot = NULL;$/;"	v
pParser	runtime/parser.h	/^	parser_t *pParser;$/;"	m	struct:parserList_s
pParserLst	runtime/ruleset.h	/^	parserList_t *pParserLst;\/* list of parsers to use for this ruleset *\/$/;"	m	struct:ruleset_s
pPermPeers	plugins/omuxsock/omuxsock.c	/^	permittedPeers_t *pPermPeers;$/;"	m	struct:_instanceData	file:
pPermPeers	runtime/netstrms.h	/^	permittedPeers_t *pPermPeers;\/**< current driver's permitted peers *\/$/;"	m	struct:netstrms_s
pPermPeers	runtime/nsd_gtls.h	/^	permittedPeers_t *pPermPeers; \/* permitted peers *\/$/;"	m	struct:nsd_gtls_s
pPermPeers	runtime/strmsrv.h	/^	permittedPeers_t *pPermPeers;\/**< driver's permitted peers *\/$/;"	m	struct:strmsrv_s
pPermPeers	runtime/tcpsrv.h	/^	permittedPeers_t *pPermPeers;\/**< driver's permitted peers *\/$/;"	m	struct:tcpsrv_s
pPermPeers	tools/omfwd.c	/^	permittedPeers_t *pPermPeers;$/;"	m	struct:_instanceData	file:
pPermPeers	tools/omfwd.c	/^	permittedPeers_t *pPermPeers;$/;"	m	struct:configSettings_s	file:
pPermPeersRoot	plugins/imdiag/imdiag.c	/^static permittedPeers_t *pPermPeersRoot = NULL;$/;"	v	file:
pPermPeersRoot	plugins/imtcp/imtcp.c	/^static permittedPeers_t *pPermPeersRoot = NULL;$/;"	v	file:
pPoll	runtime/tcpsrv.c	/^	nspoll_t *pPoll;$/;"	m	struct:wrkrInfo_s	file:
pPrev	runtime/debug.c	/^	struct dbgMutLog_s *pPrev;$/;"	m	struct:dbgMutLog_s	typeref:struct:dbgMutLog_s::dbgMutLog_s	file:
pPrev	runtime/debug.h	/^	struct dbgCallStack_s *pPrev;$/;"	m	struct:dbgCallStack_s	typeref:struct:dbgCallStack_s::dbgCallStack_s
pPrev	runtime/modules.h	/^	struct modInfo_s *pPrev;	\/* support for creating a double linked module list *\/$/;"	m	struct:modInfo_s	typeref:struct:modInfo_s::modInfo_s
pProp	contrib/mmcount/mmcount.c	/^	msgPropDescrDestruct(&pProp);$/;"	v
pProp	contrib/mmcount/mmcount.c	/^	msgPropDescr_t pProp;$/;"	v
pQueue	action.h	/^	qqueue_t *pQueue;	\/* action queue *\/$/;"	m	struct:action_s
pQueue	runtime/ruleset.h	/^	qqueue_t *pQueue;	\/* "main" message queue, if the ruleset has its own (else NULL) *\/$/;"	m	struct:ruleset_s
pRcvData	runtime/strmsrv.h	/^	rsRetVal (*pRcvData)(strms_sess_t*, char*, size_t, ssize_t *);$/;"	m	struct:strmsrv_s
pRcvData	runtime/tcpsrv.h	/^	rsRetVal (*pRcvData)(tcps_sess_t*, char*, size_t, ssize_t *);$/;"	m	struct:tcpsrv_s
pRcvDummy	plugins/imdiag/imdiag.c	/^static prop_t *pRcvDummy = NULL;$/;"	v	file:
pRcvFrom	runtime/msg.h	/^		prop_t *pRcvFrom;\/* name of system message was received from *\/$/;"	m	union:msg::__anon36
pRcvFromIP	runtime/msg.h	/^	prop_t *pRcvFromIP;	\/* IP of system message was received from *\/$/;"	m	struct:msg
pRcvIPDummy	plugins/imdiag/imdiag.c	/^static prop_t *pRcvIPDummy = NULL;$/;"	v	file:
pReadDel	runtime/queue.h	/^			strm_t *pReadDel; \/* current file for deleting *\/$/;"	m	struct:queue_s::__anon48::__anon51
pReadDeq	runtime/queue.h	/^			strm_t *pReadDeq; \/* current file for dequeueing *\/$/;"	m	struct:queue_s::__anon48::__anon51
pReadfds	plugins/imuxsock/imuxsock.c	/^        fd_set  *pReadfds = malloc(glbl.GetFdSetSize());$/;"	v
pReadfds	plugins/imuxsock/imuxsock.c	/^        fd_set *pReadfds = &readfds;$/;"	v
pReadfds	runtime/nsdsel_ptcp.h	/^	fd_set *pReadfds;$/;"	m	struct:nsdsel_ptcp_s
pRelpClt	plugins/omrelp/omrelp.c	/^	relpClt_t *pRelpClt; \/* relp client for this instance *\/$/;"	m	struct:wrkrInstanceData	file:
pRelpEngine	plugins/imrelp/imrelp.c	/^	pRelpEngine = NULL;$/;"	v
pRelpEngine	plugins/imrelp/imrelp.c	/^static relpEngine_t *pRelpEngine;	\/* our relp engine *\/$/;"	v	file:
pRelpEngine	plugins/omrelp/omrelp.c	/^	relpEngineDestruct(&pRelpEngine);$/;"	v
pRelpEngine	plugins/omrelp/omrelp.c	/^static relpEngine_t *pRelpEngine;	\/* our relp engine *\/$/;"	v	file:
pRemHostName	runtime/nsd_ptcp.h	/^	uchar *pRemHostName; \/**< host name of remote peer (currently used in server mode, only) *\/$/;"	m	struct:nsd_ptcp_s
pRoot	runtime/linkedlist.h	/^	llElt_t *pRoot;	\/* list root *\/$/;"	m	struct:linkedList_s
pRoot	runtime/nsdpoll_ptcp.h	/^	nsdpoll_epollevt_lst_t *pRoot;	\/* Root of the epoll event list *\/$/;"	m	struct:nsdpoll_ptcp_s
pRootLstn	plugins/imfile/imfile.c	/^	lstn_t *pRootLstn;$/;"	m	struct:modConfData_s	file:
pRuleset	contrib/imczmq/imczmq.c	/^	ruleset_t *pRuleset;	\/* ruleset *\/$/;"	m	struct:lstn_s	file:
pRuleset	contrib/imzmq3/imzmq3.c	/^    ruleset_t* pRuleset;$/;"	m	struct:lstn_s	file:
pRuleset	plugins/imfile/imfile.c	/^	ruleset_t *pRuleset;	\/* ruleset to bind listener to (use system default if unspecified) *\/$/;"	m	struct:lstn_s	file:
pRuleset	plugins/imptcp/imptcp.c	/^	ruleset_t *pRuleset;$/;"	m	struct:ptcpsrv_s	file:
pRuleset	plugins/imudp/imudp.c	/^	ruleset_t *pRuleset;	\/* bound ruleset *\/$/;"	m	struct:lstn_s	file:
pRuleset	plugins/omruleset/omruleset.c	/^	ruleset_t *pRuleset;	\/* ruleset to enqueue message to (NULL = Default, not recommended) *\/$/;"	m	struct:configSettings_s	file:
pRuleset	plugins/omruleset/omruleset.c	/^	ruleset_t *pRuleset;	\/* ruleset to enqueue to *\/$/;"	m	struct:_instanceData	file:
pRuleset	runtime/msg.h	/^	ruleset_t *pRuleset;	\/* ruleset to be used for processing this message *\/$/;"	m	struct:msg
pRuleset	runtime/tcpsrv.h	/^	ruleset_t *pRuleset;		\/**< associated ruleset *\/$/;"	m	struct:tcpLstnPortList_s
pRuleset	runtime/tcpsrv.h	/^	ruleset_t *pRuleset;	\/**< ruleset to bind to *\/$/;"	m	struct:tcpsrv_s
pSess	plugins/imptcp/imptcp.c	/^	ptcpsess_t *pSess;		\/* root of our sessions *\/$/;"	m	struct:ptcpsrv_s	file:
pSessions	runtime/strmsrv.h	/^	strms_sess_t **pSessions;\/**< array of all of our sessions *\/$/;"	m	struct:strmsrv_s
pSessions	runtime/tcpsrv.h	/^	tcps_sess_t **pSessions;\/**< array of all of our sessions *\/$/;"	m	struct:tcpsrv_s
pSock	runtime/nsdpoll_ptcp.h	/^	nsd_ptcp_t *pSock;	\/* our associated netstream driver data *\/$/;"	m	struct:nsdpoll_epollevt_lst_s
pSockArray	plugins/omudpspoof/omudpspoof.c	/^	int	*pSockArray;		\/* sockets to use for UDP *\/$/;"	m	struct:wrkrInstanceData	file:
pSockArray	tools/omfwd.c	/^	int *pSockArray;	\/* sockets to use for UDP *\/$/;"	m	struct:wrkrInstanceData	file:
pSrv	plugins/imptcp/imptcp.c	/^	ptcpsrv_t *pSrv, *srvDel;$/;"	v
pSrv	plugins/imptcp/imptcp.c	/^	ptcpsrv_t *pSrv;	\/* our server *\/$/;"	m	struct:ptcplstn_s	file:
pSrv	runtime/strms_sess.h	/^	strmsrv_t *pSrv;	\/* pointer back to my server (e.g. for callbacks) *\/$/;"	m	struct:strms_sess_s
pSrv	runtime/strmsrv.h	/^	strmsrv_t *pSrv;			\/**< pointer to higher-level server instance *\/$/;"	m	struct:strmLstnPortList_s
pSrv	runtime/tcps_sess.h	/^	tcpsrv_t *pSrv;	\/* pointer back to my server (e.g. for callbacks) *\/$/;"	m	struct:tcps_sess_s
pSrv	runtime/tcpsrv.c	/^	tcpsrv_t *pSrv; \/* pSrv == NULL -> idle *\/$/;"	m	struct:wrkrInfo_s	file:
pSrv	runtime/tcpsrv.h	/^	tcpsrv_t *pSrv;			\/**< pointer to higher-level server instance *\/$/;"	m	struct:tcpLstnPortList_s
pSrvRoot	plugins/imptcp/imptcp.c	/^static ptcpsrv_t *pSrvRoot = NULL;$/;"	v	file:
pStr	runtime/var.h	/^		cstr_t *pStr;$/;"	m	union:var_s::__anon58
pStrgen	runtime/strgen.h	/^	strgen_t *pStrgen;$/;"	m	struct:strgenList_s
pStrgen	template.h	/^	rsRetVal (*pStrgen)(const msg_t*const, actWrkrIParams_t *const iparam);$/;"	m	struct:__anon68
pStrgenLstRoot	runtime/strgen.c	/^	InitStrgenList(&pStrgenLstRoot);$/;"	v
pStrm	plugins/imfile/imfile.c	/^	strm_t *pStrm;	\/* its stream (NULL if not assigned) *\/$/;"	m	struct:lstn_s	file:
pStrm	runtime/strms_sess.h	/^	netstrm_t *pStrm;$/;"	m	struct:strms_sess_s
pStrm	runtime/tcps_sess.h	/^	netstrm_t *pStrm;$/;"	m	struct:tcps_sess_s
pStrm	tools/omfile.c	/^	strm_t	*pStrm;		\/* our output stream *\/$/;"	m	struct:_instanceData	file:
pStrm	tools/omfile.c	/^	strm_t	*pStrm;		\/* our output stream *\/$/;"	m	struct:s_dynaFileCacheEntry	file:
pTAG	tools/smfile.c	/^	uchar *pTAG;$/;"	v
pTAG	tools/smfwd.c	/^	uchar *pTAG;$/;"	v
pTAG	tools/smtradfile.c	/^	uchar *pTAG;$/;"	v
pTAG	tools/smtradfwd.c	/^	uchar *pTAG;$/;"	v
pTCPClt	plugins/omgssapi/omgssapi.c	/^	tcpclt_t *pTCPClt;		\/* our tcpclt object *\/$/;"	m	struct:_instanceData	file:
pTCPClt	tools/omfwd.c	/^	tcpclt_t *pTCPClt;	\/* our tcpclt object *\/$/;"	m	struct:wrkrInstanceData	file:
pTailLstn	plugins/imfile/imfile.c	/^	lstn_t *pTailLstn;$/;"	m	struct:modConfData_s	file:
pTcp	runtime/nsd_gtls.h	/^	nsd_t *pTcp;		\/**< our aggregated nsd_ptcp data *\/$/;"	m	struct:nsd_gtls_s
pTcp	runtime/nsdsel_gtls.h	/^	nsdsel_t *pTcp;		\/* our aggregated ptcp sel handler (which does almost everything) *\/$/;"	m	struct:nsdsel_gtls_s
pThis	runtime/rsconf.c	/^		tplPrintList(pThis);$/;"	v
pThis	runtime/stream.c	/^	strmCloseFile(pThis);$/;"	v
pThrd	plugins/imudp/imudp.c	/^	thrdInfo_t *pThrd;$/;"	m	struct:wrkrInfo_s	file:
pTimeStamp	tools/smfile.c	/^	pTimeStamp = (uchar*) getTimeReported(pMsg, tplFmtRFC3339Date);$/;"	v
pTimeStamp	tools/smfile.c	/^	uchar *pTimeStamp;$/;"	v
pTimeStamp	tools/smfwd.c	/^	uchar *pTimeStamp;$/;"	v
pTimeStamp	tools/smtradfile.c	/^	pTimeStamp = (uchar*) getTimeReported(pMsg, tplFmtRFC3164Date);$/;"	v
pTimeStamp	tools/smtradfile.c	/^	uchar *pTimeStamp;$/;"	v
pTimeStamp	tools/smtradfwd.c	/^	uchar *pTimeStamp;$/;"	v
pTopic	plugins/omkafka/omkafka.c	/^	rd_kafka_topic_t *pTopic;$/;"	m	struct:_instanceData	file:
pTopic	plugins/omkafka/omkafka.c	/^	rd_kafka_topic_t *pTopic;$/;"	m	struct:s_dynaTopicCacheEntry	file:
pUsr	runtime/janitor.h	/^	void *pUsr;	\/* user-settable pointer (passed to callback) *\/$/;"	m	struct:janitorEtry
pUsr	runtime/netstrm.h	/^	void *pUsr;		\/**< pointer to user-provided data structure *\/$/;"	m	struct:netstrm_s
pUsr	runtime/nsd.h	/^	void *pUsr;$/;"	m	struct:nsd_epworkset_s
pUsr	runtime/nsdpoll_ptcp.h	/^	void *pUsr;$/;"	m	struct:nsdpoll_epollevt_lst_s
pUsr	runtime/strms_sess.h	/^	void *pUsr;		\/* a user-pointer *\/$/;"	m	struct:strms_sess_s
pUsr	runtime/strmsrv.h	/^	void *pUsr;		\/**< a user-settable pointer (provides extensibility for "derived classes")*\/$/;"	m	struct:strmsrv_s
pUsr	runtime/tcps_sess.h	/^	void *pUsr;		\/* a user-pointer *\/$/;"	m	struct:tcps_sess_s
pUsr	runtime/tcpsrv.c	/^	void *pUsr;$/;"	m	struct:wrkrInfo_s	file:
pUsr	runtime/tcpsrv.h	/^	void *pUsr;		\/**< a user-settable pointer (provides extensibility for "derived classes")*\/$/;"	m	struct:tcpsrv_s
pUsr	runtime/tcpsrv.h	/^	void *pUsr;$/;"	m	struct:tcpsrv_workset_s
pUsr	runtime/wtp.h	/^	void *pUsr;		\/* pointer to user object (in this case, the queue the wtp belongs to) *\/$/;"	m	struct:wtp_s
pUsrThrdMain	threads.h	/^	rsRetVal (*pUsrThrdMain)(struct thrdInfo*); \/* user thread main to be called in new thread *\/$/;"	m	struct:thrdInfo
pUsrWCntr	runtime/stream.h	/^	int64 *pUsrWCntr; \/* NULL or a user-provided counter that receives the nbr of bytes written since the last CntrSet() *\/$/;"	m	struct:strm_s
pWildcardLast	runtime/net.h	/^	permittedPeerWildcard_t *pWildcardLast;	\/**< end of the wildcard list, NULL if not initialized *\/$/;"	m	struct:permittedPeers_s
pWildcardRoot	runtime/net.h	/^	permittedPeerWildcard_t *pWildcardRoot;	\/**< root of the wildcard, NULL if not initialized *\/$/;"	m	struct:permittedPeers_s
pWrite	runtime/queue.h	/^			strm_t *pWrite;   \/* current file to be written *\/$/;"	m	struct:queue_s::__anon48::__anon51
pWritefds	runtime/nsdsel_ptcp.h	/^	fd_set *pWritefds;$/;"	m	struct:nsdsel_ptcp_s
pWrkr	runtime/wtp.h	/^	struct wti_s **pWrkr;\/* array with control structure for the worker thread(s) associated with this wtp *\/$/;"	m	struct:wtp_s	typeref:struct:wtp_s::wti_s
pWrkrData	tools/omfwd.c	/^	closeUDPSockets(pWrkrData);$/;"	v
pWtp	runtime/wti.h	/^	wtp_t *pWtp; \/* my worker thread pool (important if only the work thread instance is passed! *\/$/;"	m	struct:wti_s
pWtpDA	runtime/queue.h	/^	wtp_t	*pWtpDA;$/;"	m	struct:queue_s
pWtpReg	runtime/queue.h	/^	wtp_t	*pWtpReg;$/;"	m	struct:queue_s
pZipBuf	runtime/stream.h	/^	Bytef *pZipBuf;$/;"	m	struct:strm_s
param	runtime/rsyslog.h	/^	uchar *param;$/;"	m	struct:actWrkrIParams
paramPassing_t	runtime/syslogd-types.h	/^	  ACT_JSON_PASSING = 3} paramPassing_t;$/;"	t	typeref:enum:__anon53
paramblk	runtime/glbl.c	/^static struct cnfparamblk paramblk =$/;"	v	typeref:struct:cnfparamblk	file:
parent	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *parent;$/;"	m	struct:_instanceData	file:
parent	runtime/hashtable_itr.h	/^    struct entry *parent;$/;"	m	struct:hashtable_itr	typeref:struct:hashtable_itr::entry
parsAddrWithBits	parse.c	/^rsRetVal parsAddrWithBits(rsParsObj *pThis, struct NetAddr **pIP, int *pBits)$/;"	f
parsDelimCStr	parse.c	/^rsRetVal parsDelimCStr(rsParsObj *pThis, cstr_t **ppCStr, char cDelim, int bTrimLeading, int bTrimTrailing, int bConvLower)$/;"	f
parsGetCurrentPosition	parse.c	/^int parsGetCurrentPosition(rsParsObj *pThis)$/;"	f
parsInt	parse.c	/^rsRetVal parsInt(rsParsObj *pThis, int* pInt)$/;"	f
parsIsAtEndOfParseString	parse.c	/^int parsIsAtEndOfParseString(rsParsObj *pThis)$/;"	f
parsPeekAtCharAtParsPtr	parse.c	/^char parsPeekAtCharAtParsPtr(rsParsObj *pThis)$/;"	f
parsQuotedCStr	parse.c	/^rsRetVal parsQuotedCStr(rsParsObj *pThis, cstr_t **ppCStr)$/;"	f
parsSkipAfterChar	parse.c	/^rsRetVal parsSkipAfterChar(rsParsObj *pThis, char c)$/;"	f
parsSkipWhitespace	parse.c	/^rsRetVal parsSkipWhitespace(rsParsObj *pThis)$/;"	f
parse	runtime/modules.h	/^			rsRetVal (*parse)(msg_t*);$/;"	m	struct:modInfo_s::__anon29::__anon33
parse2	runtime/modules.h	/^			rsRetVal (*parse2)(instanceConf_t *const, msg_t*);$/;"	m	struct:modInfo_s::__anon29::__anon33
parseAndSubmitMessage	tools/rsyslogd.c	/^parseAndSubmitMessage(uchar *hname, uchar *hnameIP, uchar *msg, int len, int flags, flowControl_t flowCtlType,$/;"	f
parseIntVal	runtime/cfsysline.c	/^static rsRetVal parseIntVal(uchar **pp, int64 *pVal)$/;"	f	file:
parseName	plugins/mmaudit/mmaudit.c	/^parseName(uchar **buf, char *name, unsigned lenName)$/;"	f	file:
parsePARAM_VALUE	plugins/mmpstrucdata/mmpstrucdata.c	/^parsePARAM_VALUE(uchar *sdbuf, int lenbuf, int *curridx, uchar *fieldbuf)$/;"	f	file:
parsePRI	plugins/imklog/imklog.c	/^parsePRI(uchar **ppSz, syslog_pri_t *piPri)$/;"	f	file:
parseRFCField	tools/pmrfc5424.c	/^static int parseRFCField(uchar **pp2parse, uchar *pResult, int *pLenStr)$/;"	f	file:
parseRFCStructuredData	tools/pmrfc5424.c	/^static int parseRFCStructuredData(uchar **pp2parse, uchar *pResult, int *pLenStr)$/;"	f	file:
parseRequestAndResponseForContext	plugins/omelasticsearch/omelasticsearch.c	/^parseRequestAndResponseForContext(wrkrInstanceData_t *pWrkrData,cJSON **pReplyRoot,uchar *reqmsg,context *ctx)$/;"	f	file:
parseSD_ELEMENT	plugins/mmpstrucdata/mmpstrucdata.c	/^parseSD_ELEMENT(uchar *sdbuf, int lenbuf, int *curridx, struct json_object *jroot)$/;"	f	file:
parseSD_NAME	plugins/mmpstrucdata/mmpstrucdata.c	/^parseSD_NAME(uchar *sdbuf, int lenbuf, int *curridx, uchar *namebuf)$/;"	f	file:
parseSD_PARAM	plugins/mmpstrucdata/mmpstrucdata.c	/^parseSD_PARAM(uchar *sdbuf, int lenbuf, int *curridx, struct json_object *jroot)$/;"	f	file:
parseSelectorAct	runtime/modules.h	/^			rsRetVal (*parseSelectorAct)(uchar**, void**,omodStringRequest_t**);$/;"	m	struct:modInfo_s::__anon29::__anon31
parseSubscriptions	contrib/imzmq3/imzmq3.c	/^static rsRetVal parseSubscriptions(char* subscribes, sublist** subList){$/;"	f	file:
parseValue	plugins/mmaudit/mmaudit.c	/^parseValue(uchar **buf, char *val, unsigned lenval)$/;"	f	file:
parse_array	plugins/omelasticsearch/cJSON/cjson.c	/^static const char *parse_array(cJSON *item,const char *value)$/;"	f	file:
parse_fields	plugins/mmfields/mmfields.c	/^parse_fields(instanceData *pData, msg_t *pMsg, uchar *msgtext, int lenMsg)$/;"	f	file:
parse_number	plugins/omelasticsearch/cJSON/cjson.c	/^static const char *parse_number(cJSON *item,const char *num)$/;"	f	file:
parse_object	plugins/omelasticsearch/cJSON/cjson.c	/^static const char *parse_object(cJSON *item,const char *value)$/;"	f	file:
parse_result_store	contrib/mmgrok/mmgrok.c	/^parse_result_store(const grok_match_t gm,instanceData *pData)$/;"	f	file:
parse_sd	plugins/mmpstrucdata/mmpstrucdata.c	/^parse_sd(instanceData *pData, msg_t *pMsg)$/;"	f	file:
parse_string	plugins/omelasticsearch/cJSON/cjson.c	/^static const char *parse_string(cJSON *item,const char *str)$/;"	f	file:
parse_value	plugins/omelasticsearch/cJSON/cjson.c	/^static const char *parse_value(cJSON *item,const char *value)$/;"	f	file:
parser	runtime/parser.h	/^PROTOTYPEObj(parser);$/;"	v
parserCURR_IF_VERSION	runtime/parser.h	63;"	d
parserConstructViaModAndName	runtime/parser.c	/^parserConstructViaModAndName(modInfo_t *__restrict__ pMod, uchar *const __restrict__ pName, void *pInst)$/;"	f
parserList_s	runtime/parser.h	/^struct parserList_s {$/;"	s
parserList_t	runtime/typedefs.h	/^typedef struct parserList_s parserList_t;$/;"	t	typeref:struct:parserList_s
parser_errmsg	grammar/testdriver.c	/^parser_errmsg(char *fmt, ...)$/;"	f
parser_errmsg	runtime/rsconf.c	/^parser_errmsg(char *fmt, ...)$/;"	f
parser_s	runtime/parser.h	/^struct parser_s {$/;"	s
parser_t	runtime/typedefs.h	/^typedef struct parser_s parser_t;$/;"	t	typeref:struct:parser_s
parser_warnmsg	runtime/rsconf.c	/^parser_warnmsg(char *fmt, ...)$/;"	f
parserpblk	plugins/pmciscoios/pmciscoios.c	/^static struct cnfparamblk parserpblk =$/;"	v	typeref:struct:cnfparamblk	file:
parserpblk	runtime/rsconf.c	/^static struct cnfparamblk parserpblk =$/;"	v	typeref:struct:cnfparamblk	file:
parserpblk	tools/pmrfc3164.c	/^static struct cnfparamblk parserpblk =$/;"	v	typeref:struct:cnfparamblk	file:
parserpdescr	plugins/pmciscoios/pmciscoios.c	/^static struct cnfparamdescr parserpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
parserpdescr	runtime/rsconf.c	/^static struct cnfparamdescr parserpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
parserpdescr	tools/pmrfc3164.c	/^static struct cnfparamdescr parserpdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
part	tools/syncdemo.c	/^typedef enum { part, none, atomic, cas, spinlock, mutex, semaphore } syncType_t;$/;"	e	enum:__anon79	file:
password	contrib/omrabbitmq/omrabbitmq.c	/^	uchar *password;$/;"	m	struct:_instanceData	file:
pbShutdownImmediate	runtime/wti.h	/^	int *pbShutdownImmediate;\/* end processing of this batch immediately if set to 1 *\/$/;"	m	struct:wti_s
pblk	action.c	/^static struct cnfparamblk pblk =$/;"	v	typeref:struct:cnfparamblk	file:
pblk	runtime/lmsig_gt.c	/^static struct cnfparamblk pblk =$/;"	v	typeref:struct:cnfparamblk	file:
pblk	runtime/lmsig_ksi.c	/^static struct cnfparamblk pblk =$/;"	v	typeref:struct:cnfparamblk	file:
pblk	runtime/modules.c	/^static struct cnfparamblk pblk =$/;"	v	typeref:struct:cnfparamblk	file:
pblk	runtime/queue.c	/^static struct cnfparamblk pblk =$/;"	v	typeref:struct:cnfparamblk	file:
pblk	template.c	/^static struct cnfparamblk pblk =$/;"	v	typeref:struct:cnfparamblk	file:
pblkConstant	template.c	/^static struct cnfparamblk pblkConstant =$/;"	v	typeref:struct:cnfparamblk	file:
pblkProperty	template.c	/^static struct cnfparamblk pblkProperty =$/;"	v	typeref:struct:cnfparamblk	file:
pblkQueue	runtime/lmcry_gcry.c	/^static struct cnfparamblk pblkQueue =$/;"	v	typeref:struct:cnfparamblk	file:
pblkRegular	runtime/lmcry_gcry.c	/^static struct cnfparamblk pblkRegular =$/;"	v	typeref:struct:cnfparamblk	file:
pcondBusy	runtime/wti.h	/^	pthread_cond_t pcondBusy; \/* condition to wake up the worker, protected by pmutUsr in wtp *\/$/;"	m	struct:wti_s
pcsName	runtime/var.h	/^	cstr_t *pcsName;$/;"	m	struct:var_s
peParamPassing	action.h	/^	paramPassing_t *peParamPassing;	\/* mode of parameter passing to action for that template *\/$/;"	m	struct:action_s
peerIP	plugins/imptcp/imptcp.c	/^	prop_t *peerIP;$/;"	m	struct:ptcpsess_s	file:
peerName	plugins/imptcp/imptcp.c	/^	prop_t *peerName;	\/* host name we received messages from *\/$/;"	m	struct:ptcpsess_s	file:
permitted	runtime/cfsysline.h	/^	int *permitted;				\/* is this parameter currently permitted? (NULL=don't check) *\/$/;"	m	struct:cslCmdHdlr_s
permittedPeerWildcard_s	runtime/net.h	/^struct permittedPeerWildcard_s {$/;"	s
permittedPeerWildcard_t	runtime/typedefs.h	/^typedef struct permittedPeerWildcard_s permittedPeerWildcard_t; \/* this should go away in the long term -- rgerhards, 2008-05-19 *\/$/;"	t	typeref:struct:permittedPeerWildcard_s
permittedPeers	plugins/imrelp/imrelp.c	/^	} permittedPeers;$/;"	m	struct:instanceConf_s	typeref:struct:instanceConf_s::__anon14	file:
permittedPeers	plugins/imtcp/imtcp.c	/^	struct cnfarray *permittedPeers;$/;"	m	struct:modConfData_s	typeref:struct:modConfData_s::cnfarray	file:
permittedPeers	plugins/omrelp/omrelp.c	/^	} permittedPeers;$/;"	m	struct:_instanceData	typeref:struct:_instanceData::__anon24	file:
permittedPeers_s	runtime/net.h	/^struct permittedPeers_s {$/;"	s
permittedPeers_t	runtime/typedefs.h	/^typedef struct permittedPeers_s permittedPeers_t; \/* this should go away in the long term -- rgerhards, 2008-05-19 *\/$/;"	t	typeref:struct:permittedPeers_s
persistJournalState	plugins/imjournal/imjournal.c	/^persistJournalState () {$/;"	f	file:
persistStrmState	plugins/imfile/imfile.c	/^persistStrmState(lstn_t *pLstn)$/;"	f	file:
pfChkStopWrkr	runtime/wtp.h	/^	rsRetVal (*pfChkStopWrkr)(void *pUsr, int);$/;"	m	struct:wtp_s
pfDoWork	runtime/wtp.h	/^	rsRetVal (*pfDoWork)(void *pUsr, void *pWti);$/;"	m	struct:wtp_s
pfGetDeqBatchSize	runtime/wtp.h	/^	rsRetVal (*pfGetDeqBatchSize)(void *pUsr, int*); \/* obtains max dequeue count from queue config *\/$/;"	m	struct:wtp_s
pfObjProcessed	runtime/wtp.h	/^	rsRetVal (*pfObjProcessed)(void *pUsr, wti_t *pWti); \/* indicate user object is processed *\/$/;"	m	struct:wtp_s
pfRateLimiter	runtime/wtp.h	/^	rsRetVal (*pfRateLimiter)(void *pUsr);$/;"	m	struct:wtp_s
pfrominet	runtime/msg.h	/^		struct sockaddr_storage *pfrominet; \/* unresolved name *\/$/;"	m	union:msg::__anon36	typeref:struct:msg::__anon36::sockaddr_storage
piTplOpts	runtime/objomsr.h	/^	int *piTplOpts;\/* pointer to array of check-options when pulling template *\/$/;"	m	struct:omodStringRequest_s
pid	plugins/imuxsock/imuxsock.c	/^struct ucred { int pid; uid_t uid; gid_t gid; };$/;"	m	struct:ucred	file:
pid	plugins/mmexternal/mmexternal.c	/^	pid_t pid;		\/* pid of currently running process *\/$/;"	m	struct:wrkrInstanceData	file:
pid	plugins/omprog/omprog.c	/^	pid_t pid;		\/* pid of currently running process *\/$/;"	m	struct:wrkrInstanceData	file:
pid_field_name	plugins/imjournal/imjournal.c	/^static char *pid_field_name;		\/* read-only after startup *\/$/;"	v	file:
pipe	tools/ompipe.c	/^	uchar	*pipe;	\/* pipe or template name (display only) *\/$/;"	m	struct:_instanceData	file:
pm	runtime/modules.h	/^		} pm;$/;"	m	union:modInfo_s::__anon29	typeref:struct:modInfo_s::__anon29::__anon33
pmask	grammar/rainerscript.h	/^			uchar pmask[LOG_NFACILITIES+1];	\/* priority mask *\/$/;"	m	struct:cnfstmt::__anon4::__anon9
pmask	grammar/rainerscript.h	/^	uchar pmask[LOG_NFACILITIES+1];	\/* priority mask *\/$/;"	m	struct:funcData_prifilt
pmaskPrint	grammar/rainerscript.c	/^pmaskPrint(uchar *pmask, int indent)$/;"	f	file:
pmsg	contrib/mmgrok/mmgrok.c	/^    msg_t *pmsg;    \/* store  origin messages*\/$/;"	m	struct:_instanceData	file:
pmut	runtime/debug.h	/^	pthread_mutex_t *pmut;$/;"	m	struct:dbgFuncDBmutInfoEntry_s
pmutUsr	runtime/wtp.h	/^	pthread_mutex_t *pmutUsr;$/;"	m	struct:wtp_s
pollFile	plugins/imfile/imfile.c	/^pollFile(lstn_t *pLstn, int *pbHadFileData)$/;"	f	file:
pollFileCancelCleanup	plugins/imfile/imfile.c	/^static void pollFileCancelCleanup(void *pArg)$/;"	f	file:
pollJournal	plugins/imjournal/imjournal.c	/^pollJournal()$/;"	f	file:
pollPeriod	plugins/external/skeletons/python/plugin.py	/^pollPeriod = 0.75 # the number of seconds between polling for new messages$/;"	v
pollPeriod	plugins/external/solr/rsyslog_solr.py	/^pollPeriod = 0.75 # the number of seconds between polling for new messages$/;"	v
pollerData_t	contrib/imczmq/imczmq.c	/^} pollerData_t;$/;"	t	typeref:struct:_pollerData_t	file:
poller_data	contrib/imzmq3/imzmq3.c	/^} poller_data;$/;"	t	typeref:struct:_poller_data	file:
pomsrGetSupportedTplOpts	contrib/mmgrok/mmgrok.c	/^	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);$/;"	v
pomsrGetSupportedTplOpts	plugins/mmaudit/mmaudit.c	/^	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);$/;"	v
pomsrGetSupportedTplOpts	plugins/mmjsonparse/mmjsonparse.c	/^	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);$/;"	v
pomsrGetSupportedTplOpts	plugins/mmnormalize/mmnormalize.c	/^	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);$/;"	v
pomsrGetSupportedTplOpts	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);$/;"	v
pomsrGetSupportedTplOpts	plugins/ommongodb/ommongodb.c	/^	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);$/;"	v
pomsrGetSupportedTplOpts	plugins/omruleset/omruleset.c	/^	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);$/;"	v
pomsrGetSupportedTplOpts	plugins/omstdout/omstdout.c	/^	rsRetVal (*pomsrGetSupportedTplOpts)(unsigned long *pOpts);$/;"	v
populateUsers	tools/omusrmsg.c	/^populateUsers(instanceData *pData, es_str_t *usrs)$/;"	f	file:
port	contrib/omhiredis/omhiredis.c	/^	int port; \/* redis port *\/$/;"	m	struct:_instanceData	file:
port	contrib/omhttpfs/omhttpfs.c	/^    int  port;$/;"	m	struct:_instanceData	file:
port	contrib/omrabbitmq/omrabbitmq.c	/^	int port;$/;"	m	struct:_instanceData	file:
port	plugins/imptcp/imptcp.c	/^	uchar *port;			\/* Port to listen to *\/$/;"	m	struct:ptcpsrv_s	file:
port	plugins/omelasticsearch/omelasticsearch.c	/^	int port;$/;"	m	struct:_instanceData	file:
port	plugins/omgssapi/omgssapi.c	/^	char *port;$/;"	m	struct:_instanceData	file:
port	plugins/ommongodb/ommongodb.c	/^	int port;$/;"	m	struct:_instanceData	file:
port	plugins/omrelp/omrelp.c	/^	uchar *port;$/;"	m	struct:_instanceData	file:
port	plugins/omudpspoof/omudpspoof.c	/^	uchar	*port;$/;"	m	struct:_instanceData	file:
port	tools/omfwd.c	/^	char *port;$/;"	m	struct:_instanceData	file:
portIdx	plugins/imudp/imudp.c	/^	int portIdx;$/;"	v
postHeader	plugins/omelasticsearch/omelasticsearch.c	/^	HEADER	*postHeader;	\/* json POST request info *\/$/;"	m	struct:wrkrInstanceData	file:
pows	tests/testconfgen.c	/^void pows(int n, int i)$/;"	f
ppLstn	runtime/strmsrv.h	/^	netstrm_t **ppLstn;	\/**< our netstream listeners *\/$/;"	m	struct:strmsrv_s
ppLstn	runtime/tcpsrv.h	/^	netstrm_t **ppLstn;	\/**< our netstream listeners *\/$/;"	m	struct:tcpsrv_s
ppLstnPort	runtime/strmsrv.h	/^	strmLstnPortList_t **ppLstnPort; \/**< pointer to relevant listen port description *\/$/;"	m	struct:strmsrv_s
ppLstnPort	runtime/tcpsrv.h	/^	tcpLstnPortList_t **ppLstnPort; \/**< pointer to relevant listen port description *\/$/;"	m	struct:tcpsrv_s
ppMsgs	runtime/typedefs.h	/^	msg_t	**ppMsgs;$/;"	m	struct:multi_submit_s
ppOMSR	tools/ompipe.c	/^	CHKiRet(cflineParseFileName(p, (uchar*) pData->pipe, *ppOMSR, 0, OMSR_NO_RQD_TPL_OPTS,$/;"	v
ppTpl	action.h	/^	struct template **ppTpl;\/* array of template to use - strings must be passed to doAction$/;"	m	struct:action_s	typeref:struct:action_s::
ppTplName	runtime/objomsr.h	/^	uchar **ppTplName;	\/* pointer to array of template names *\/$/;"	m	struct:omodStringRequest_s
pqDA	runtime/queue.h	/^	struct queue_s *pqDA;	\/* queue for disk-assisted modes *\/$/;"	m	struct:queue_s	typeref:struct:queue_s::queue_s
pqParent	runtime/queue.h	/^	struct queue_s *pqParent;\/* pointer to the parent (if this is a child queue) *\/$/;"	m	struct:queue_s	typeref:struct:queue_s::queue_s
precision	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	m	struct:record	file:
prepRetryFunc	runtime/tcpclt.h	/^	rsRetVal (*prepRetryFunc)(void*);$/;"	m	struct:tcpclt_s
prepareAPPNAME	runtime/msg.c	/^static inline void prepareAPPNAME(msg_t * const pM, sbool bLockMutex)$/;"	f	file:
prepareBackground	tools/rsyslogd.c	/^prepareBackground(const int parentPipeFD)$/;"	f	file:
prepareDoActionParams	action.c	/^prepareDoActionParams(action_t * __restrict__ const pAction,$/;"	f	file:
prepareDynFile	tools/omfile.c	/^prepareDynFile(instanceData *__restrict__ const pData, const uchar *__restrict__ const newFileName)$/;"	f	file:
prepareDynTopic	plugins/omkafka/omkafka.c	/^prepareDynTopic(instanceData *__restrict__ const pData, const uchar *__restrict__ const newTopicName,$/;"	f	file:
prepareErrorFileContent	plugins/omelasticsearch/omelasticsearch.c	/^	rsRetVal (*prepareErrorFileContent)(struct exeContext *ctx,int itemStatus,char *request,char *response);$/;"	m	struct:exeContext	file:
prepareFile	tools/omfile.c	/^prepareFile(instanceData *__restrict__ const pData, const uchar *__restrict__ const newFileName)$/;"	f	file:
prepareGenerators	tests/tcpflood.c	/^prepareGenerators()$/;"	f	file:
preparePROCID	runtime/msg.c	/^static inline void preparePROCID(msg_t * const pM, sbool bLockMutex)$/;"	f	file:
preparePipe	tools/ompipe.c	/^preparePipe(instanceData *pData)$/;"	f	file:
prepareTopic	plugins/omkafka/omkafka.c	/^prepareTopic(instanceData *__restrict__ const pData, const uchar *__restrict__ const newTopicName)$/;"	f	file:
preprocessBatch	tools/rsyslogd.c	/^preprocessBatch(batch_t *pBatch, int *pbShutdownImmediate) {$/;"	f	file:
prev	plugins/imfile/imfile.c	/^	struct lstn_s *next, *prev;$/;"	m	struct:lstn_s	typeref:struct:lstn_s::	file:
prev	plugins/imptcp/imptcp.c	/^	ptcplstn_t *prev, *next;$/;"	m	struct:ptcplstn_s	file:
prev	plugins/imptcp/imptcp.c	/^	ptcpsess_t *prev, *next;$/;"	m	struct:ptcpsess_s	file:
prev	plugins/omelasticsearch/cJSON/cjson.h	/^	struct cJSON *next,*prev;	\/* next\/prev allow you to walk array\/object chains. Alternatively, use GetArraySize\/GetArrayItem\/GetObjectItem *\/$/;"	m	struct:cJSON	typeref:struct:cJSON::
prev	runtime/statsobj.h	/^	statsobj_t *prev;$/;"	m	struct:statsobj_s
prev	runtime/statsobj.h	/^	struct ctr_s *next, *prev;$/;"	m	struct:ctr_s	typeref:struct:ctr_s::
prevLineSegment	plugins/imfile/imfile.c	/^	uchar *prevLineSegment;	\/* previous line segment (in regex mode) *\/$/;"	m	struct:lstn_s	file:
prevLineSegment	runtime/stream.h	/^	cstr_t *prevLineSegment; \/* for ReadLine, previous, unprocessed part of file *\/$/;"	m	struct:strm_s
prevMsg	runtime/tcpclt.h	/^	char *prevMsg;$/;"	m	struct:tcpclt_s
prevMsgSegment	runtime/stream.h	/^	cstr_t *prevMsgSegment; \/* for ReadMultiLine, previous, yet unprocessed part of msg *\/$/;"	m	struct:strm_s
pri2fac	runtime/rsyslog.h	/^static inline syslog_pri_t pri2fac(const syslog_pri_t pri)$/;"	f
pri2sev	runtime/rsyslog.h	/^static inline syslog_pri_t pri2sev(const syslog_pri_t pri)$/;"	f
prifiltCombine	grammar/rainerscript.c	/^prifiltCombine(struct funcData_prifilt *__restrict__ const prifilt,$/;"	f	file:
prifiltInvert	grammar/rainerscript.c	/^prifiltInvert(struct funcData_prifilt *__restrict__ const prifilt)$/;"	f	file:
prifiltSetFacility	grammar/rainerscript.c	/^prifiltSetFacility(struct funcData_prifilt *__restrict__ const prifilt, const int fac, const int mode)$/;"	f	file:
prifiltSetSeverity	grammar/rainerscript.c	/^prifiltSetSeverity(struct funcData_prifilt *prifilt, int sev, int mode)$/;"	f	file:
prime_table_length	runtime/hashtable.c	/^const unsigned int prime_table_length = sizeof(primes)\/sizeof(primes[0]);$/;"	v
primeindex	runtime/hashtable_private.h	/^    unsigned int primeindex;$/;"	m	struct:hashtable
primes	runtime/hashtable.c	/^static const unsigned int primes[] = {$/;"	v	file:
printNameFileRoot	runtime/debug.c	/^static dbgPrintName_t *printNameFileRoot = NULL;$/;"	v	file:
printParserList	runtime/parser.c	/^printParserList(parserList_t *pList)$/;"	f
printVersion	tools/rsyslogd.c	/^printVersion(void)$/;"	f	file:
print_array	plugins/omelasticsearch/cJSON/cjson.c	/^static char *print_array(cJSON *item,int depth,int fmt)$/;"	f	file:
print_object	plugins/omelasticsearch/cJSON/cjson.c	/^static char *print_object(cJSON *item,int depth,int fmt)$/;"	f	file:
print_string	plugins/omelasticsearch/cJSON/cjson.c	/^static char *print_string(cJSON *item)	{return print_string_ptr(item->valuestring);}$/;"	f	file:
print_string_ptr	plugins/omelasticsearch/cJSON/cjson.c	/^static char *print_string_ptr(const char *str)$/;"	f	file:
print_value	plugins/omelasticsearch/cJSON/cjson.c	/^static char *print_value(cJSON *item,int depth,int fmt)$/;"	f	file:
printable	grammar/rainerscript.h	/^	uchar *printable; \/* printable text for debugging *\/$/;"	m	struct:cnfstmt
pristring	plugins/imrelp/imrelp.c	/^	uchar *pristring;		\/* GnuTLS priority string (NULL if not to be provided) *\/$/;"	m	struct:instanceConf_s	file:
pristring	plugins/omrelp/omrelp.c	/^	uchar *pristring;		\/* GnuTLS priority string (NULL if not to be provided) *\/$/;"	m	struct:_instanceData	file:
processBatch	runtime/ruleset.c	/^processBatch(batch_t *pBatch, wti_t *pWti)$/;"	f	file:
processBatchMain	action.c	/^processBatchMain(void *__restrict__ const pVoid,$/;"	f	file:
processCfSysLineCommand	runtime/cfsysline.c	/^rsRetVal processCfSysLineCommand(uchar *pCmdName, uchar **p)$/;"	f
processDataRcvd	plugins/imptcp/imptcp.c	/^processDataRcvd(ptcpsess_t *pThis, char c, struct syslogTime *stTime, time_t ttGenTime, multi_submit_t *pMultiSub)$/;"	f	file:
processDataRcvd	runtime/tcps_sess.c	/^processDataRcvd(tcps_sess_t *pThis, char c, struct syslogTime *stTime, time_t ttGenTime, multi_submit_t *pMultiSub)$/;"	f	file:
processFile	tools/logsigner.c	/^processFile(char *name)$/;"	f
processFile	tools/rsgtutil.c	/^processFile(char *name)$/;"	f	file:
processImInternal	tools/rsyslogd.c	/^static inline void processImInternal(void)$/;"	f	file:
processJSON	plugins/mmjsonparse/mmjsonparse.c	/^processJSON(wrkrInstanceData_t *pWrkrData, msg_t *pMsg, char *buf, size_t lenBuf)$/;"	f	file:
processKafkaParam	plugins/omkafka/omkafka.c	/^processKafkaParam(char *const param,$/;"	f	file:
processMsg	tools/omfwd.c	/^processMsg(wrkrInstanceData_t *__restrict__ const pWrkrData,$/;"	f	file:
processMsgMain	action.c	/^processMsgMain(action_t *__restrict__ const pAction,$/;"	f	file:
processPacket	plugins/imudp/imudp.c	/^processPacket(struct lstn_s *lstn, struct sockaddr_storage *frominetPrev, int *pbIsPermitted,$/;"	f	file:
processProgramReply	plugins/mmexternal/mmexternal.c	/^processProgramReply(wrkrInstanceData_t *__restrict__ const pWrkrData, msg_t *const pMsg)$/;"	f	file:
processSocket	plugins/imudp/imudp.c	/^processSocket(struct wrkrInfo_s *pWrkr, struct lstn_s *lstn, struct sockaddr_storage *frominetPrev, int *pbIsPermitted)$/;"	f	file:
processTestFile	tests/nettester.c	/^processTestFile(int fd, char *pszFileName)$/;"	f
processWorkItem	plugins/imptcp/imptcp.c	/^processWorkItem(struct epoll_event *event)$/;"	f	file:
processWorkSet	plugins/imptcp/imptcp.c	/^processWorkSet(int nEvents, struct epoll_event events[])$/;"	f	file:
processWorkset	runtime/tcpsrv.c	/^processWorkset(tcpsrv_t *pThis, nspoll_t *pPoll, int numEntries, nsd_epworkset_t workset[])$/;"	f	file:
processWorksetItem	runtime/tcpsrv.c	/^processWorksetItem(tcpsrv_t *pThis, nspoll_t *pPoll, int idx, void *pUsr)$/;"	f	file:
procs	tools/syncdemo.c	/^static int procs = 0; \/* number of processors *\/$/;"	v	file:
prog	tools/logctl.c	/^	const char *prog;	$/;"	m	struct:ofields	file:
progName	tools/omshell.c	/^	uchar	progName[MAXFNAME]; \/* program  to execute *\/$/;"	m	struct:_instanceData	file:
prop	grammar/rainerscript.h	/^			msgPropDescr_t prop; \/* requested property *\/$/;"	m	struct:cnfstmt::__anon4::__anon10
prop	grammar/rainerscript.h	/^	msgPropDescr_t prop;$/;"	m	struct:cnfvar
prop	runtime/prop.h	/^	INTERFACEObjDebugPrint(prop);$/;"	v
prop	runtime/prop.h	/^PROTOTYPEObj(prop);$/;"	v
propCURR_IF_VERSION	runtime/prop.h	52;"	d
propConstructFinalize	runtime/prop.c	/^propConstructFinalize(prop_t __attribute__((unused)) *pThis)$/;"	f	file:
propGetSzStr	runtime/prop.h	/^propGetSzStr(prop_t *pThis)$/;"	f
propIDToName	runtime/msg.c	/^uchar *propIDToName(propid_t propID)$/;"	f
propLocalHostName	runtime/glbl.c	/^static prop_t *propLocalHostName = NULL;\/* our hostname as FQDN - read-only after startup *\/$/;"	v	file:
propLocalHostNameToDelete	runtime/glbl.c	/^static prop_t *propLocalHostNameToDelete = NULL;\/* see GenerateLocalHostName function hdr comment! *\/$/;"	v	file:
propLocalIPIF	runtime/glbl.c	/^static prop_t *propLocalIPIF = NULL;\/* IP address to report for the local host (default is 127.0.0.1) *\/$/;"	v	file:
propNameToID	runtime/msg.c	/^propNameToID(uchar *pName, propid_t *pPropID)$/;"	f
propType_t	runtime/obj-types.h	/^} propType_t;$/;"	t	typeref:enum:__anon44
prop_s	runtime/prop.h	/^struct prop_s {$/;"	s
prop_t	runtime/typedefs.h	/^typedef struct prop_s prop_t;$/;"	t	typeref:struct:prop_s
propconst	grammar/grammar.y	/^propconst:				{ $$ = NULL; }$/;"	l
property	grammar/grammar.y	/^property: BEGIN_PROPERTY nvlst ENDOBJ	{ $$ = cnfobjNew(CNFOBJ_PROPERTY, $2); }$/;"	l
property	tools/recover_qi.pl	/^sub property {$/;"	s
propid_t	runtime/typedefs.h	/^typedef uintTiny	propid_t;$/;"	t
props	contrib/omrabbitmq/omrabbitmq.c	/^	amqp_basic_properties_t props;$/;"	m	struct:_instanceData	file:
protocol	tools/omfwd.c	/^	int protocol;$/;"	m	struct:_instanceData	file:
prsf_t	runtime/typedefs.h	/^typedef rsRetVal (*prsf_t)(struct vmstk_s*, int);	\/* pointer to a RainerScript function *\/$/;"	t
psz	plugins/omgssapi/omgssapi.c	/^	char *psz = NULL; \/* temporary buffering *\/$/;"	v
psz	plugins/omudpspoof/omudpspoof.c	/^	char *psz; \/* temporary buffering *\/$/;"	v
psz	plugins/omuxsock/omuxsock.c	/^	char *psz = NULL; \/* temporary buffering *\/$/;"	v
psz	runtime/prop.h	/^		uchar *psz;		\/* stored string *\/$/;"	m	union:prop_s::__anon46
pszActionName	action.c	/^	uchar *pszActionName;				\/* short name for the action *\/$/;"	m	struct:configSettings_s	file:
pszActionQFName	action.c	/^	uchar *pszActionQFName;				\/* prefix for the main message queue file *\/$/;"	m	struct:configSettings_s	file:
pszAddr	runtime/tcpsrv.h	/^	uchar *pszAddr;                 \/**< the addrs the listener shall listen on *\/$/;"	m	struct:tcpLstnPortList_s
pszAltDbgFileName	runtime/debug.c	/^char *pszAltDbgFileName = NULL; \/* if set, debug output is *also* sent to here *\/$/;"	v
pszAppName	contrib/mmcount/mmcount.c	/^	char *pszAppName;$/;"	m	struct:_instanceData	file:
pszBaseName	plugins/imfile/imfile.c	/^	uchar *pszBaseName;$/;"	m	struct:lstn_s	file:
pszBindAddr	plugins/imptcp/imptcp.c	/^	uchar *pszBindAddr;		\/* IP to bind socket to *\/$/;"	m	struct:instanceConf_s	file:
pszBindAddr	plugins/imtcp/imtcp.c	/^	uchar *pszBindAddr;             \/* IP to bind socket to *\/$/;"	m	struct:instanceConf_s	file:
pszBindAddr	plugins/imudp/imudp.c	/^	uchar *pszBindAddr;		\/* IP to bind socket to *\/$/;"	m	struct:configSettings_s	file:
pszBindAddr	plugins/imudp/imudp.c	/^	uchar *pszBindAddr;		\/* IP to bind socket to *\/$/;"	m	struct:instanceConf_s	file:
pszBindPort	plugins/imptcp/imptcp.c	/^	uchar *pszBindPort;		\/* port to bind to *\/$/;"	m	struct:instanceConf_s	file:
pszBindPort	plugins/imrelp/imrelp.c	/^	uchar *pszBindPort;		\/* port to bind to *\/$/;"	m	struct:instanceConf_s	file:
pszBindPort	plugins/imtcp/imtcp.c	/^	uchar *pszBindPort;		\/* port to bind to *\/$/;"	m	struct:instanceConf_s	file:
pszBindPort	plugins/imudp/imudp.c	/^	uchar *pszBindPort;		\/* Port to bind socket to *\/$/;"	m	struct:instanceConf_s	file:
pszBindRuleset	contrib/imczmq/imczmq.c	/^	uchar *pszBindRuleset;		\/* (optional) ruleset to bind to *\/$/;"	m	struct:instanceConf_s	file:
pszBindRuleset	contrib/imzmq3/imzmq3.c	/^    uchar*                 pszBindRuleset;$/;"	m	struct:instanceConf_s	file:
pszBindRuleset	plugins/imfile/imfile.c	/^	uchar *pszBindRuleset;$/;"	m	struct:configSettings_s	file:
pszBindRuleset	plugins/imfile/imfile.c	/^	uchar *pszBindRuleset;$/;"	m	struct:instanceConf_s	file:
pszBindRuleset	plugins/impstats/impstats.c	/^	uchar *pszBindRuleset;		\/* name of ruleset to bind to *\/$/;"	m	struct:modConfData_s	file:
pszBindRuleset	plugins/imptcp/imptcp.c	/^	uchar *pszBindRuleset;		\/* name of ruleset to bind to *\/$/;"	m	struct:instanceConf_s	file:
pszBindRuleset	plugins/imptcp/imptcp.c	/^	uchar *pszBindRuleset;$/;"	m	struct:configSettings_s	file:
pszBindRuleset	plugins/imrelp/imrelp.c	/^	uchar *pszBindRuleset;		\/* default name of Ruleset to bind to *\/$/;"	m	struct:modConfData_s	file:
pszBindRuleset	plugins/imrelp/imrelp.c	/^	uchar *pszBindRuleset;		\/* name of Ruleset to bind to *\/$/;"	m	struct:configSettings_s	file:
pszBindRuleset	plugins/imrelp/imrelp.c	/^	uchar *pszBindRuleset;		\/* name of ruleset to bind to *\/$/;"	m	struct:instanceConf_s	file:
pszBindRuleset	plugins/imtcp/imtcp.c	/^	uchar *pszBindRuleset;		\/* name of ruleset to bind to *\/$/;"	m	struct:instanceConf_s	file:
pszBindRuleset	plugins/imtcp/imtcp.c	/^	uchar *pszBindRuleset;$/;"	m	struct:configSettings_s	file:
pszBindRuleset	plugins/imudp/imudp.c	/^	uchar *pszBindRuleset;		\/* name of Ruleset to bind to *\/$/;"	m	struct:configSettings_s	file:
pszBindRuleset	plugins/imudp/imudp.c	/^	uchar *pszBindRuleset;		\/* name of ruleset to bind to *\/$/;"	m	struct:instanceConf_s	file:
pszBuf	runtime/stringbuf.h	/^	uchar *pszBuf;		\/**< pointer to the sz version of the string (after it has been created )*\/$/;"	m	struct:cstr_s
pszCommunity	plugins/omsnmp/omsnmp.c	/^	uchar* pszCommunity;$/;"	m	struct:configSettings_s	file:
pszConfDAGFile	runtime/rsconf.h	/^	uchar *pszConfDAGFile;	\/* name of config DAG file, non-NULL means generate one *\/$/;"	m	struct:globals_s
pszConnectHost	runtime/nsd_gtls.h	/^	uchar *pszConnectHost;	\/**< hostname used for connect - may be used to authenticate peer if no other name given *\/$/;"	m	struct:nsd_gtls_s
pszCurrFName	runtime/stream.h	/^	uchar *pszCurrFName; \/* name of current file (if open) *\/$/;"	m	struct:strm_s
pszCustomConf	tests/nettester.c	/^static char* pszCustomConf = NULL;	\/* custom config file, use -c conf to specify *\/$/;"	v	file:
pszDbgHdr	runtime/wti.h	/^	uchar *pszDbgHdr;	\/* header string for debug messages *\/$/;"	m	struct:wti_s
pszDbgHdr	runtime/wtp.h	/^	uchar *pszDbgHdr;	\/* header string for debug messages *\/$/;"	m	struct:wtp_s
pszDfltNetstrmDrvr	runtime/glbl.c	/^static uchar *pszDfltNetstrmDrvr = NULL; \/* module name of default netstream driver *\/$/;"	v	file:
pszDfltNetstrmDrvrCAF	runtime/glbl.c	/^static uchar *pszDfltNetstrmDrvrCAF = NULL; \/* default CA file for the netstrm driver *\/$/;"	v	file:
pszDfltNetstrmDrvrCertFile	runtime/glbl.c	/^	free(pszDfltNetstrmDrvrCertFile);$/;"	v
pszDfltNetstrmDrvrCertFile	runtime/glbl.c	/^static uchar *pszDfltNetstrmDrvrCertFile = NULL; \/* default cert file for the netstrm driver (server) *\/$/;"	v	file:
pszDfltNetstrmDrvrKeyFile	runtime/glbl.c	/^	free(pszDfltNetstrmDrvrKeyFile);$/;"	v
pszDfltNetstrmDrvrKeyFile	runtime/glbl.c	/^static uchar *pszDfltNetstrmDrvrKeyFile = NULL; \/* default key file for the netstrm driver (server) *\/$/;"	v	file:
pszDir	runtime/stream.h	/^	uchar *pszDir; \/* Directory *\/$/;"	m	struct:strm_s
pszDirName	plugins/imfile/imfile.c	/^	uchar *pszDirName;$/;"	m	struct:instanceConf_s	file:
pszDirName	plugins/imfile/imfile.c	/^	uchar *pszDirName;$/;"	m	struct:lstn_s	file:
pszDomainPart	runtime/net.h	/^	uchar *pszDomainPart;$/;"	m	struct:permittedPeerWildcard_s
pszDrvrAuthMode	runtime/netstrms.h	/^	uchar *pszDrvrAuthMode;	\/**< current driver authentication mode *\/$/;"	m	struct:netstrms_s
pszDrvrAuthMode	runtime/strmsrv.h	/^	uchar *pszDrvrAuthMode;	\/**< auth mode of the stream driver to use *\/$/;"	m	struct:strmsrv_s
pszDrvrAuthMode	runtime/tcpsrv.h	/^	uchar *pszDrvrAuthMode;	\/**< auth mode of the stream driver to use *\/$/;"	m	struct:tcpsrv_s
pszDrvrName	runtime/tcpsrv.h	/^	uchar *pszDrvrName;	\/**< name of stream driver to use *\/$/;"	m	struct:tcpsrv_s
pszEnterpriseOID	plugins/omsnmp/omsnmp.c	/^	uchar* pszEnterpriseOID;$/;"	m	struct:configSettings_s	file:
pszFName	runtime/stream.h	/^	uchar *pszFName; \/* prefix for generated filenames *\/$/;"	m	struct:strm_s
pszFile	runtime/modules.h	/^	char *pszFile;$/;"	m	struct:modUsr_s
pszFileBaseName	plugins/imfile/imfile.c	/^	uchar *pszFileBaseName;$/;"	m	struct:instanceConf_s	file:
pszFileDfltTplName	plugins/omlibdbi/omlibdbi.c	/^	free(pszFileDfltTplName);$/;"	v
pszFileDfltTplName	plugins/omlibdbi/omlibdbi.c	/^uchar	*pszFileDfltTplName; \/* name of the default template to use *\/$/;"	v
pszFileDfltTplName	tools/omfile.c	/^	free(pszFileDfltTplName);$/;"	v
pszFileDfltTplName	tools/omfile.c	/^	pszFileDfltTplName = NULL; \/* make sure this can be free'ed! *\/$/;"	v
pszFileDfltTplName	tools/omfile.c	/^uchar	*pszFileDfltTplName; \/* name of the default template to use *\/$/;"	v
pszFileDfltTplName	tools/omfile.h	/^uchar	*pszFileDfltTplName;$/;"	v
pszFileDfltTplName	tools/ompipe.c	/^	free(pszFileDfltTplName);$/;"	v
pszFileName	plugins/imfile/imfile.c	/^	uchar *pszFileName;$/;"	m	struct:configSettings_s	file:
pszFileName	plugins/imfile/imfile.c	/^	uchar *pszFileName;$/;"	m	struct:instanceConf_s	file:
pszFileName	plugins/imfile/imfile.c	/^	uchar *pszFileName;$/;"	m	struct:lstn_s	file:
pszFilePrefix	runtime/queue.h	/^	uchar *pszFilePrefix;$/;"	m	struct:queue_s
pszFileTag	plugins/imfile/imfile.c	/^	uchar *pszFileTag;$/;"	m	struct:configSettings_s	file:
pszFileTemplate	outchannel.h	/^	uchar *pszFileTemplate;$/;"	m	struct:outchannel
pszFrom	plugins/ommail/ommail.c	/^			uchar *pszFrom;$/;"	m	struct:_instanceData::__anon20::__anon21	file:
pszFrom	plugins/ommail/ommail.c	/^	uchar *pszFrom;$/;"	m	struct:configSettings_s	file:
pszHOSTNAME	runtime/msg.h	/^	uchar	*pszHOSTNAME;	\/* HOSTNAME from syslog message *\/$/;"	m	struct:msg
pszHost	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	uchar pszHost[512];$/;"	v
pszID	runtime/net.h	/^	uchar *pszID;$/;"	m	struct:permittedPeers_s
pszID	runtime/obj-types.h	/^	uchar *pszID; \/* the object ID as a string *\/$/;"	m	struct:objInfo_s
pszInputName	plugins/imdiag/imdiag.c	/^	free(pszInputName);$/;"	v
pszInputName	plugins/imdiag/imdiag.c	/^static uchar *pszInputName = NULL; \/* value for inputname property, NULL is OK and handled by core engine *\/$/;"	v	file:
pszInputName	plugins/imptcp/imptcp.c	/^	uchar *pszInputName;		\/* value for inputname property, NULL is OK and handled by core engine *\/$/;"	m	struct:configSettings_s	file:
pszInputName	plugins/imptcp/imptcp.c	/^	uchar *pszInputName;		\/* value for inputname property, NULL is OK and handled by core engine *\/$/;"	m	struct:instanceConf_s	file:
pszInputName	plugins/imptcp/imptcp.c	/^	uchar *pszInputName;$/;"	m	struct:ptcpsrv_s	file:
pszInputName	plugins/imrelp/imrelp.c	/^	uchar *pszInputName;		\/* value for inputname property *\/$/;"	m	struct:instanceConf_s	file:
pszInputName	plugins/imtcp/imtcp.c	/^	uchar *pszInputName;		\/* value for inputname property, NULL is OK and handled by core engine *\/$/;"	m	struct:instanceConf_s	file:
pszInputName	plugins/imtcp/imtcp.c	/^	uchar *pszInputName;$/;"	m	struct:configSettings_s	file:
pszInputName	runtime/strmsrv.h	/^	uchar *pszInputName;		\/**< value to be used as input name *\/$/;"	m	struct:strmLstnPortList_s
pszInputName	runtime/strmsrv.h	/^	uchar *pszInputName;	\/**< value to be used as input name *\/$/;"	m	struct:strmsrv_s
pszInputName	runtime/tcpsrv.h	/^	uchar *pszInputName;	\/**< value to be used as input name *\/$/;"	m	struct:tcpsrv_s
pszKey	contrib/mmcount/mmcount.c	/^	char *pszKey;$/;"	m	struct:_instanceData	file:
pszKey	contrib/mmsequence/mmsequence.c	/^	char *pszKey;$/;"	m	struct:_instanceData	file:
pszMainMsgQFName	runtime/rsconf.h	/^	uchar *pszMainMsgQFName;	\/* prefix for the main message queue file *\/$/;"	m	struct:queuecnf_s
pszMatch	contrib/mmgrok/mmgrok.c	/^    char *pszMatch;$/;"	m	struct:_instanceData	file:
pszMySQLConfigFile	plugins/ommysql/ommysql.c	/^	uchar *pszMySQLConfigFile;	\/* MySQL Client Configuration File *\/$/;"	m	struct:configSettings_s	file:
pszMySQLConfigSection	plugins/ommysql/ommysql.c	/^	uchar *pszMySQLConfigSection;	\/* MySQL Client Configuration Section *\/ $/;"	m	struct:configSettings_s	file:
pszName	action.h	/^	uchar *pszName;		\/* action name *\/$/;"	m	struct:action_s
pszName	outchannel.h	/^	char *pszName;$/;"	m	struct:outchannel
pszName	runtime/modules.h	/^	uchar	*pszName;$/;"	m	struct:dlhandle_s
pszName	runtime/modules.h	/^	uchar*		pszName;	\/* printable module name, e.g. for dbgprintf *\/$/;"	m	struct:modInfo_s
pszName	runtime/msg.c	/^	uchar *pszName;$/;"	m	struct:__anon35	file:
pszName	runtime/obj-types.h	/^	uchar *pszName;		\/* the name of *this* specific object instance *\/$/;"	m	struct:obj_s
pszName	runtime/obj-types.h	/^	uchar *pszName;$/;"	m	struct:objInfo_s
pszName	runtime/ruleset.h	/^	uchar *pszName;		\/* name of our ruleset *\/$/;"	m	struct:ruleset_s
pszName	template.h	/^	char *pszName;$/;"	m	struct:__anon68
pszOrigin	runtime/tcpsrv.h	/^	uchar *pszOrigin;		\/**< module to be used as "origin" (e.g. for pstats) *\/$/;"	m	struct:tcpsrv_s
pszPath	contrib/imkmsg/imkmsg.h	/^	uchar *pszPath;$/;"	m	struct:modConfData_s
pszPath	plugins/imklog/imklog.c	/^	uchar *pszPath;$/;"	m	struct:configSettings_s	file:
pszPath	plugins/imklog/imklog.h	/^	uchar *pszPath;$/;"	m	struct:modConfData_s
pszPath	plugins/mmnormalize/mmnormalize.c	/^	char *pszPath;		\/**< path of normalized data *\/$/;"	m	struct:_instanceData	file:
pszPatternDir	contrib/mmgrok/mmgrok.c	/^    char *pszPatternDir;$/;"	m	struct:_instanceData	file:
pszPort	runtime/strmsrv.h	/^	uchar *pszPort;			\/**< the ports the listener shall listen on *\/$/;"	m	struct:strmLstnPortList_s
pszPort	runtime/tcpsrv.h	/^	uchar *pszPort;			\/**< the ports the listener shall listen on *\/$/;"	m	struct:tcpLstnPortList_s
pszQIFNam	runtime/queue.h	/^	uchar *pszQIFNam;	\/* full .qi file name, based on parts above *\/$/;"	m	struct:queue_s
pszRawMsg	runtime/msg.h	/^	uchar	*pszRawMsg;	\/* message as it was received on the wire. This is important in case we$/;"	m	struct:msg
pszRcvBuf	runtime/nsd_gtls.h	/^	char *pszRcvBuf;$/;"	m	struct:nsd_gtls_s
pszRcvdAt3164	runtime/msg.h	/^	char *pszRcvdAt3164;	\/* time as RFC3164 formatted string (always 15 charcters) *\/$/;"	m	struct:msg
pszRcvdAt3339	runtime/msg.h	/^	char *pszRcvdAt3339;	\/* time as RFC3164 formatted string (32 charcters at most) *\/$/;"	m	struct:msg
pszRcvdAt_MySQL	runtime/msg.h	/^	char *pszRcvdAt_MySQL;	\/* rcvdAt as MySQL formatted string (always 14 charcters) *\/$/;"	m	struct:msg
pszRcvdAt_PgSQL	runtime/msg.h	/^        char *pszRcvdAt_PgSQL;  \/* rcvdAt as PgSQL formatted string (always 21 characters) *\/$/;"	m	struct:msg
pszRcvdAt_SecFrac	runtime/msg.h	/^	char pszRcvdAt_SecFrac[7];	     \/* same as above. Both are fractional seconds for their respective timestamp *\/$/;"	m	struct:msg
pszRcvdAt_Unix	runtime/msg.h	/^	char pszRcvdAt_Unix[12];$/;"	m	struct:msg
pszRulesetName	plugins/omruleset/omruleset.c	/^	uchar *pszRulesetName;	\/* primarily for debugging\/display purposes *\/$/;"	m	struct:_instanceData	file:
pszRulesetName	plugins/omruleset/omruleset.c	/^	uchar *pszRulesetName;$/;"	m	struct:configSettings_s	file:
pszSchedPolicy	plugins/imudp/imudp.c	/^	uchar *pszSchedPolicy;		\/* scheduling policy string *\/$/;"	m	struct:configSettings_s	file:
pszSchedPolicy	plugins/imudp/imudp.c	/^	uchar *pszSchedPolicy;		\/* scheduling policy string *\/$/;"	m	struct:modConfData_s	file:
pszSever	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	uchar pszSever[512];$/;"	v
pszSeverityMapping	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	uchar *pszSeverityMapping; \/**< severitystring to numerical code mapping for snmptrapd string *\/$/;"	m	struct:configSettings_s	file:
pszSizeLimitCmd	runtime/stream.h	/^	uchar	*pszSizeLimitCmd;	\/* command to carry out when size limit is reached *\/$/;"	m	struct:strm_s
pszSizeLimitCmd	tools/omfile.c	/^	uchar	*pszSizeLimitCmd;	\/* command to carry out when size limit is reached *\/$/;"	m	struct:_instanceData	file:
pszSnmpTrapOID	plugins/omsnmp/omsnmp.c	/^	uchar* pszSnmpTrapOID;$/;"	m	struct:configSettings_s	file:
pszSource	contrib/mmgrok/mmgrok.c	/^    char *pszSource;$/;"	m	struct:_instanceData	file:
pszSourceNameTemplate	plugins/omudpspoof/omudpspoof.c	/^	uchar *pszSourceNameTemplate; \/* name of the template containing the spoofing address *\/$/;"	m	struct:configSettings_s	file:
pszSpoolDir	runtime/queue.h	/^	uchar *pszSpoolDir;$/;"	m	struct:queue_s
pszSrv	plugins/ommail/ommail.c	/^			uchar *pszSrv;$/;"	m	struct:_instanceData::__anon20::__anon21	file:
pszSrv	plugins/ommail/ommail.c	/^	uchar *pszSrv;$/;"	m	struct:configSettings_s	file:
pszSrvPort	plugins/ommail/ommail.c	/^			uchar *pszSrvPort;$/;"	m	struct:_instanceData::__anon20::__anon21	file:
pszSrvPort	plugins/ommail/ommail.c	/^	uchar *pszSrvPort;$/;"	m	struct:configSettings_s	file:
pszStateFile	plugins/imfile/imfile.c	/^	uchar *pszStateFile; \/* file in which state between runs is to be stored (dynamic if NULL) *\/$/;"	m	struct:lstn_s	file:
pszStateFile	plugins/imfile/imfile.c	/^	uchar *pszStateFile;$/;"	m	struct:configSettings_s	file:
pszStateFile	plugins/imfile/imfile.c	/^	uchar *pszStateFile;$/;"	m	struct:instanceConf_s	file:
pszStrmDrvr	tools/omfwd.c	/^	uchar *pszStrmDrvr; \/* name of the stream driver to use *\/$/;"	m	struct:configSettings_s	file:
pszStrmDrvr	tools/omfwd.c	/^	uchar *pszStrmDrvr;$/;"	m	struct:_instanceData	file:
pszStrmDrvrAuthMode	plugins/imdiag/imdiag.c	/^static uchar *pszStrmDrvrAuthMode = NULL; \/* authentication mode to use *\/$/;"	v	file:
pszStrmDrvrAuthMode	plugins/imtcp/imtcp.c	/^	uchar *pszStrmDrvrAuthMode; \/* authentication mode to use *\/$/;"	m	struct:modConfData_s	file:
pszStrmDrvrAuthMode	plugins/imtcp/imtcp.c	/^	uchar *pszStrmDrvrAuthMode;$/;"	m	struct:configSettings_s	file:
pszStrmDrvrAuthMode	tools/omfwd.c	/^	uchar *pszStrmDrvrAuthMode; \/* authentication mode to use *\/$/;"	m	struct:configSettings_s	file:
pszStrmDrvrAuthMode	tools/omfwd.c	/^	uchar *pszStrmDrvrAuthMode;$/;"	m	struct:_instanceData	file:
pszStrmDrvrName	plugins/imtcp/imtcp.c	/^	uchar *pszStrmDrvrName; \/* stream driver to use *\/$/;"	m	struct:modConfData_s	file:
pszStrucData	runtime/msg.h	/^	uchar *pszStrucData;    \/* STRUCTURED-DATA *\/$/;"	m	struct:msg
pszSubject	plugins/ommail/ommail.c	/^	uchar *pszSubject;$/;"	m	struct:configSettings_s	file:
pszSyslogMessageOID	plugins/omsnmp/omsnmp.c	/^	uchar* pszSyslogMessageOID;$/;"	m	struct:configSettings_s	file:
pszTAG	runtime/msg.h	/^		uchar	*pszTAG;	\/* pointer to tag value *\/$/;"	m	union:msg::__anon38
pszTIMESTAMP3164	runtime/msg.h	/^	char *pszTIMESTAMP3164;	\/* TIMESTAMP as RFC3164 formatted string (always 15 charcters) *\/$/;"	m	struct:msg
pszTIMESTAMP3339	runtime/msg.h	/^	char *pszTIMESTAMP3339;	\/* TIMESTAMP as RFC3339 formatted string (32 charcters at most) *\/$/;"	m	struct:msg
pszTIMESTAMP_MySQL	runtime/msg.h	/^	char *pszTIMESTAMP_MySQL;\/* TIMESTAMP as MySQL formatted string (always 14 charcters) *\/$/;"	m	struct:msg
pszTIMESTAMP_PgSQL	runtime/msg.h	/^        char *pszTIMESTAMP_PgSQL;\/* TIMESTAMP as PgSQL formatted string (always 21 characters) *\/$/;"	m	struct:msg
pszTIMESTAMP_SecFrac	runtime/msg.h	/^	char pszTIMESTAMP_SecFrac[7]; \/* Note: a pointer is 64 bits\/8 char, so this is actually fewer than a pointer! *\/$/;"	m	struct:msg
pszTIMESTAMP_Unix	runtime/msg.h	/^	char pszTIMESTAMP_Unix[12]; \/* almost as small as a pointer! *\/$/;"	m	struct:msg
pszTag	plugins/imfile/imfile.c	/^	uchar *pszTag;$/;"	m	struct:instanceConf_s	file:
pszTag	plugins/imfile/imfile.c	/^	uchar *pszTag;$/;"	m	struct:lstn_s	file:
pszTag	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	uchar *pszTag;$/;"	v
pszTagID	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	uchar *pszTagID;	\/* cached: name plus trailing shlash (for compares) *\/$/;"	m	struct:_instanceData	file:
pszTagName	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	uchar *pszTagName;	\/**< name of tag start value that indicates snmptrapd initiated message *\/$/;"	m	struct:configSettings_s	file:
pszTagName	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	uchar *pszTagName;$/;"	m	struct:_instanceData	file:
pszTarget	contrib/mmgrok/mmgrok.c	/^    char *pszTarget;\/* as a json root for store parse json data *\/$/;"	m	struct:_instanceData	file:
pszTarget	plugins/omsnmp/omsnmp.c	/^	uchar* pszTarget;$/;"	m	struct:configSettings_s	file:
pszTargetHost	plugins/omudpspoof/omudpspoof.c	/^	uchar *pszTargetHost;$/;"	m	struct:configSettings_s	file:
pszTargetPort	plugins/omudpspoof/omudpspoof.c	/^	uchar *pszTargetPort;$/;"	m	struct:configSettings_s	file:
pszThrdName	runtime/debug.h	/^	char *pszThrdName;$/;"	m	struct:dbgCallStack_s
pszTimestamp3164	runtime/msg.h	/^	char pszTimestamp3164[CONST_LEN_TIMESTAMP_3164 + 1];$/;"	m	struct:msg
pszTimestamp3339	runtime/msg.h	/^	char pszTimestamp3339[CONST_LEN_TIMESTAMP_3339 + 1];$/;"	m	struct:msg
pszTo	plugins/ommail/ommail.c	/^	uchar *pszTo;$/;"	m	struct:toRcpt_s	file:
pszTplName	plugins/omgssapi/omgssapi.c	/^	uchar	*pszTplName; \/* name of the default template to use *\/$/;"	m	struct:configSettings_s	file:
pszTplName	tools/omfwd.c	/^	uchar *pszTplName; \/* name of the default template to use *\/$/;"	m	struct:configSettings_s	file:
pszTransport	plugins/omsnmp/omsnmp.c	/^	uchar* pszTransport; \/* default transport *\/$/;"	m	struct:configSettings_s	file:
pszUUID	runtime/msg.h	/^	uchar *pszUUID; \/* The message's UUID *\/$/;"	m	struct:msg
pszValue	contrib/mmcount/mmcount.c	/^	char *pszValue;$/;"	m	struct:_instanceData	file:
pszValue	contrib/mmcount/mmcount.c	/^	char *pszValue;$/;"	v
pszVar	contrib/mmsequence/mmsequence.c	/^	char *pszVar;$/;"	m	struct:_instanceData	file:
pszWorkDir	runtime/glbl.c	/^	free(pszWorkDir);$/;"	v
pszWorkDir	runtime/glbl.c	/^static uchar *pszWorkDir = NULL;$/;"	v	file:
ptcplstn_s	plugins/imptcp/imptcp.c	/^struct ptcplstn_s {$/;"	s	file:
ptcplstn_t	plugins/imptcp/imptcp.c	/^typedef struct ptcplstn_s ptcplstn_t;$/;"	t	typeref:struct:ptcplstn_s	file:
ptcpsess_s	plugins/imptcp/imptcp.c	/^struct ptcpsess_s {$/;"	s	file:
ptcpsess_t	plugins/imptcp/imptcp.c	/^typedef struct ptcpsess_s ptcpsess_t;$/;"	t	typeref:struct:ptcpsess_s	file:
ptcpsrv_s	plugins/imptcp/imptcp.c	/^struct ptcpsrv_s {$/;"	s	file:
ptcpsrv_t	plugins/imptcp/imptcp.c	/^typedef struct ptcpsrv_s ptcpsrv_t;$/;"	t	typeref:struct:ptcpsrv_s	file:
ptr	plugins/imptcp/imptcp.c	/^	void *ptr;$/;"	m	struct:epolld_s	file:
ptr	runtime/msg.h	/^		uchar	*ptr;	\/* pointer to progname value *\/$/;"	m	union:msg::__anon37
ptrRcvBuf	runtime/nsd_gtls.h	/^	int ptrRcvBuf;		\/**< offset for next recv operation if 0 < lenRcvBuf < NSD_GTLS_MAX_RCVBUF *\/$/;"	m	struct:nsd_gtls_s
pvals	contrib/imczmq/imczmq.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	contrib/imczmq/imczmq.c	/^	struct cnfparamvals* pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/imczmq/imczmq.c	/^	struct cnfparamvals* pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/imzmq3/imzmq3.c	/^    pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	contrib/imzmq3/imzmq3.c	/^    struct cnfparamvals* pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/imzmq3/imzmq3.c	/^    struct cnfparamvals* pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/mmcount/mmcount.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/mmgrok/mmgrok.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/mmsequence/mmsequence.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/omczmq/omczmq.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/omhiredis/omhiredis.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/omhttpfs/omhttpfs.c	/^    struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/omrabbitmq/omrabbitmq.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	contrib/omzmq3/omzmq3.c	/^    struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imfile/imfile.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imfile/imfile.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imjournal/imjournal.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/imjournal/imjournal.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imklog/imklog.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/imklog/imklog.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/immark/immark.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/immark/immark.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/impstats/impstats.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/impstats/impstats.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imptcp/imptcp.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/imptcp/imptcp.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imptcp/imptcp.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imrelp/imrelp.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/imrelp/imrelp.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imrelp/imrelp.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imtcp/imtcp.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/imtcp/imtcp.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imtcp/imtcp.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imudp/imudp.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/imudp/imudp.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imudp/imudp.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imuxsock/imuxsock.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/imuxsock/imuxsock.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/imuxsock/imuxsock.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/mmanon/mmanon.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/mmexternal/mmexternal.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/mmfields/mmfields.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/mmjsonparse/mmjsonparse.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/mmnormalize/mmnormalize.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/mmnormalize/mmnormalize.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/mmnormalize/mmnormalize.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/mmpstrucdata/mmpstrucdata.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/mmutf8fix/mmutf8fix.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omelasticsearch/omelasticsearch.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omkafka/omkafka.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omlibdbi/omlibdbi.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/omlibdbi/omlibdbi.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omlibdbi/omlibdbi.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/ommail/ommail.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/ommongodb/ommongodb.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/ommysql/ommysql.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omprog/omprog.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omrelp/omrelp.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omsnmp/omsnmp.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omudpspoof/omudpspoof.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/omudpspoof/omudpspoof.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omudpspoof/omudpspoof.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/omuxsock/omuxsock.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	plugins/omuxsock/omuxsock.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	plugins/pmciscoios/pmciscoios.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	tools/omfile.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	tools/omfile.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	tools/omfile.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	tools/omfwd.c	/^	const struct cnfparamvals *const __restrict__ pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	tools/omfwd.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	tools/ompipe.c	/^	pvals = nvlstGetParams(lst, &modpblk, NULL);$/;"	v
pvals	tools/ompipe.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pvals	tools/ompipe.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	tools/omusrmsg.c	/^	struct cnfparamvals *pvals;$/;"	v	typeref:struct:cnfparamvals
pvals	tools/pmrfc3164.c	/^	struct cnfparamvals *pvals = NULL;$/;"	v	typeref:struct:cnfparamvals
pwd	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *pwd;$/;"	m	struct:_instanceData	file:
pwd	plugins/omlibdbi/omlibdbi.c	/^	uchar *pwd;		\/* password for connect *\/$/;"	m	struct:_instanceData	file:
pwd	plugins/omlibdbi/omlibdbi.c	/^	uchar *pwd;		\/* password for connect *\/$/;"	m	struct:configSettings_s	file:
pwd	plugins/ommongodb/ommongodb.c	/^	uchar *pwd;$/;"	m	struct:_instanceData	file:
pygal	plugins/impstats/statslog-graph.py	/^import pygal $/;"	i
q	plugins/omgssapi/omgssapi.c	/^	uchar *q;$/;"	v
q	plugins/omrelp/omrelp.c	/^	uchar *q;$/;"	v
q	tools/omfwd.c	/^	uchar *q;$/;"	v
qAdd	runtime/queue.h	/^	rsRetVal (*qAdd)(struct queue_s *pThis, msg_t *pMsg);$/;"	m	struct:queue_s
qAddDirect	runtime/queue.c	/^qAddDirect(qqueue_t *pThis, msg_t* pMsg)$/;"	f	file:
qAddDirectWithWti	runtime/queue.c	/^static rsRetVal qAddDirectWithWti(qqueue_t *pThis, msg_t* pMsg, wti_t *pWti)$/;"	f	file:
qAddDisk	runtime/queue.c	/^static rsRetVal qAddDisk(qqueue_t *pThis, msg_t* pMsg)$/;"	f	file:
qAddFixedArray	runtime/queue.c	/^static rsRetVal qAddFixedArray(qqueue_t *pThis, msg_t* in)$/;"	f	file:
qAddLinkedList	runtime/queue.c	/^static rsRetVal qAddLinkedList(qqueue_t *pThis, msg_t* pMsg)$/;"	f	file:
qConstruct	action.h	/^	rsRetVal (*qConstruct)(struct queue_s *pThis);$/;"	m	struct:action_s
qConstruct	runtime/queue.h	/^	rsRetVal (*qConstruct)(struct queue_s *pThis);$/;"	m	struct:queue_s
qConstructDirect	runtime/queue.c	/^static rsRetVal qConstructDirect(qqueue_t __attribute__((unused)) *pThis)$/;"	f	file:
qConstructDisk	runtime/queue.c	/^static rsRetVal qConstructDisk(qqueue_t *pThis)$/;"	f	file:
qConstructFixedArray	runtime/queue.c	/^static rsRetVal qConstructFixedArray(qqueue_t *pThis)$/;"	f	file:
qConstructLinkedList	runtime/queue.c	/^static rsRetVal qConstructLinkedList(qqueue_t *pThis)$/;"	f	file:
qDel	runtime/queue.h	/^	rsRetVal (*qDel)(struct queue_s *pThis);$/;"	m	struct:queue_s
qDelFixedArray	runtime/queue.c	/^static rsRetVal qDelFixedArray(qqueue_t *pThis)$/;"	f	file:
qDelLinkedList	runtime/queue.c	/^static rsRetVal qDelLinkedList(qqueue_t *pThis)$/;"	f	file:
qDeq	runtime/queue.h	/^	rsRetVal (*qDeq)(struct queue_s *pThis, msg_t **ppMsg);$/;"	m	struct:queue_s
qDeqDisk	runtime/queue.c	/^static rsRetVal qDeqDisk(qqueue_t *pThis, msg_t **ppMsg)$/;"	f	file:
qDeqFixedArray	runtime/queue.c	/^static rsRetVal qDeqFixedArray(qqueue_t *pThis, msg_t **out)$/;"	f	file:
qDeqID	runtime/typedefs.h	/^typedef uint64 qDeqID;	\/* queue Dequeue order ID. 32 bits is considered dangerously few *\/$/;"	t
qDeqLinkedList	runtime/queue.c	/^static rsRetVal qDeqLinkedList(qqueue_t *pThis, msg_t **ppMsg)$/;"	f	file:
qDestruct	runtime/queue.h	/^	rsRetVal (*qDestruct)(struct queue_s *pThis);$/;"	m	struct:queue_s
qDestructDirect	runtime/queue.c	/^static rsRetVal qDestructDirect(qqueue_t __attribute__((unused)) *pThis)$/;"	f	file:
qDestructDisk	runtime/queue.c	/^static rsRetVal qDestructDisk(qqueue_t *pThis)$/;"	f	file:
qDestructFixedArray	runtime/queue.c	/^static rsRetVal qDestructFixedArray(qqueue_t *pThis)$/;"	f	file:
qDestructLinkedList	runtime/queue.c	/^static rsRetVal qDestructLinkedList(qqueue_t __attribute__((unused)) *pThis)$/;"	f	file:
qLinkedList_S	runtime/queue.h	/^typedef struct qLinkedList_S {$/;"	s
qLinkedList_t	runtime/queue.h	/^} qLinkedList_t;$/;"	t	typeref:struct:qLinkedList_S
qType	runtime/queue.h	/^	queueType_t	qType;$/;"	m	struct:queue_s
qqueue	runtime/queue.h	/^PROTOTYPEObjClassInit(qqueue);$/;"	v
qqueueAdd	runtime/queue.c	/^qqueueAdd(qqueue_t *pThis, msg_t *pMsg)$/;"	f	file:
qqueueAdviseMaxWorkers	runtime/queue.c	/^qqueueAdviseMaxWorkers(qqueue_t *pThis)$/;"	f	file:
qqueueApplyCnfParam	runtime/queue.c	/^qqueueApplyCnfParam(qqueue_t *pThis, struct nvlst *lst)$/;"	f
qqueueChkDiscardMsg	runtime/queue.c	/^static int qqueueChkDiscardMsg(qqueue_t *pThis, int iQueueSize, msg_t *pMsg)$/;"	f	file:
qqueueChkIsDA	runtime/queue.c	/^qqueueChkIsDA(qqueue_t *pThis)$/;"	f	file:
qqueueChkPersist	runtime/queue.c	/^static rsRetVal qqueueChkPersist(qqueue_t *const pThis, const int nUpdates)$/;"	f	file:
qqueueChkStopWrkrDA	runtime/queue.c	/^qqueueChkStopWrkrDA(qqueue_t *pThis)$/;"	f	file:
qqueueConstruct	runtime/queue.c	/^rsRetVal qqueueConstruct(qqueue_t **ppThis, queueType_t qType, int iWorkerThreads,$/;"	f
qqueueDbgPrint	runtime/queue.c	/^qqueueDbgPrint(qqueue_t *pThis)$/;"	f
qqueueDeq	runtime/queue.c	/^qqueueDeq(qqueue_t *pThis, msg_t **ppMsg)$/;"	f	file:
qqueueEnqMsg	runtime/queue.c	/^qqueueEnqMsg(qqueue_t *pThis, flowControl_t flowCtlType, msg_t *pMsg)$/;"	f
qqueueGetID	runtime/queue.h	230;"	d
qqueueLoadPersStrmInfoFixup	runtime/queue.c	/^qqueueLoadPersStrmInfoFixup(strm_t *pStrm, qqueue_t __attribute__((unused)) *pThis)$/;"	f	file:
qqueueMultiEnqObjDirect	runtime/queue.c	/^qqueueMultiEnqObjDirect(qqueue_t *pThis, multi_submit_t *pMultiSub)$/;"	f	file:
qqueueMultiEnqObjNonDirect	runtime/queue.c	/^qqueueMultiEnqObjNonDirect(qqueue_t *pThis, multi_submit_t *pMultiSub)$/;"	f	file:
qqueuePersist	runtime/queue.c	/^static rsRetVal qqueuePersist(qqueue_t *pThis, int bIsCheckpoint)$/;"	f	file:
qqueueQueryInterface	runtime/queue.c	/^rsRetVal qqueueQueryInterface(void) { return RS_RET_NOT_IMPLEMENTED; }$/;"	f
qqueueSetDefaultsActionQueue	runtime/queue.c	/^qqueueSetDefaultsActionQueue(qqueue_t *pThis)$/;"	f
qqueueSetDefaultsRulesetQueue	runtime/queue.c	/^qqueueSetDefaultsRulesetQueue(qqueue_t *pThis)$/;"	f
qqueueSetFilePrefix	runtime/queue.c	/^qqueueSetFilePrefix(qqueue_t *pThis, uchar *pszPrefix, size_t iLenPrefix)$/;"	f
qqueueSetMaxFileSize	runtime/queue.c	/^qqueueSetMaxFileSize(qqueue_t *pThis, size_t iMaxFileSize)$/;"	f
qqueueSetProperty	runtime/queue.c	/^static rsRetVal qqueueSetProperty(qqueue_t *pThis, var_t *pProp)$/;"	f	file:
qqueueStart	runtime/queue.c	/^qqueueStart(qqueue_t *pThis) \/* this is the ConstructionFinalizer *\/$/;"	f
qqueueTryLoadPersistedInfo	runtime/queue.c	/^qqueueTryLoadPersistedInfo(qqueue_t *pThis)$/;"	f	file:
qqueue_t	runtime/typedefs.h	/^typedef struct queue_s qqueue_t;$/;"	t	typeref:struct:queue_s
qs_arrcmp	grammar/rainerscript.c	/^qs_arrcmp(const void *s1, const void *s2)$/;"	f	file:
qs_arrcmp_strtab	runtime/lookup.c	/^qs_arrcmp_strtab(const void *s1, const void *s2)$/;"	f	file:
qs_arrcmp_tzinfo	runtime/glbl.c	/^qs_arrcmp_tzinfo(const void *s1, const void *s2)$/;"	f	file:
query	tools/logctl.c	/^	bson *query;$/;"	m	struct:query_doc	file:
queryCoreFeatureSupport	runtime/modules.c	/^static rsRetVal queryCoreFeatureSupport(int *pBool, unsigned uFeat)$/;"	f	file:
queryHostEtryPt	runtime/modules.c	/^static rsRetVal queryHostEtryPt(uchar *name, rsRetVal (**pEtryPoint)())$/;"	f	file:
queryLocalHostname	tools/rsyslogd.c	/^queryLocalHostname(void)$/;"	f
query_doc	tools/logctl.c	/^struct query_doc$/;"	s	file:
queryopt	tools/logctl.c	/^struct queryopt$/;"	s	file:
queueCnfParamsSet	runtime/queue.c	/^queueCnfParamsSet(struct nvlst *lst)$/;"	f
queueDrain	runtime/queue.c	/^static inline void queueDrain(qqueue_t *pThis)$/;"	f	file:
queueSwitchToEmergencyMode	runtime/queue.c	/^queueSwitchToEmergencyMode(qqueue_t *pThis, rsRetVal initiatingError)$/;"	f	file:
queueType_t	runtime/queue.h	/^} queueType_t;$/;"	t	typeref:enum:__anon47
queue_s	runtime/queue.h	/^struct queue_s {$/;"	s
queuecnf_s	runtime/rsconf.h	/^struct queuecnf_s {$/;"	s
queuecnf_t	runtime/typedefs.h	/^typedef struct queuecnf_s queuecnf_t;$/;"	t	typeref:struct:queuecnf_s
queuefilenames	tools/rsyslogd.c	/^} *queuefilenames = NULL;$/;"	v	typeref:struct:queuefilenames_s	file:
queuefilenames_s	tools/rsyslogd.c	/^static struct queuefilenames_s {$/;"	s	file:
r	grammar/rainerscript.h	/^	struct cnfexpr *r;$/;"	m	struct:cnfexpr	typeref:struct:cnfexpr::cnfexpr
r	plugins/mmnormalize/mmnormalize.c	/^	int r;$/;"	v
r	plugins/omhdfs/omhdfs.c	/^	int r;$/;"	v
r	plugins/omjournal/omjournal.c	/^	(void) r; \/* prevent compiler warning *\/$/;"	v
r	plugins/omjournal/omjournal.c	/^	int r;$/;"	v
r	plugins/omstdout/omstdout.c	/^	int r;$/;"	v
r	runtime/wti.c	/^	int r;$/;"	v
randomKeyLen	tools/rscryutil.c	/^static int randomKeyLen = -1;$/;"	v	file:
randomNumber	runtime/srutils.c	/^long int randomNumber() {$/;"	f
rate	contrib/imzmq3/imzmq3.c	/^    int                    rate;$/;"	m	struct:instanceConf_s	file:
rate	contrib/omzmq3/omzmq3.c	/^    int     rate;$/;"	m	struct:_instanceData	file:
ratelimitAddMsg	runtime/ratelimit.c	/^ratelimitAddMsg(ratelimit_t *ratelimit, multi_submit_t *pMultiSub, msg_t *pMsg)$/;"	f
ratelimitBurst	plugins/imjournal/imjournal.c	/^	int ratelimitBurst;$/;"	m	struct:configSettings_s	file:
ratelimitBurst	plugins/imptcp/imptcp.c	/^	int ratelimitBurst;$/;"	m	struct:instanceConf_s	file:
ratelimitBurst	plugins/imtcp/imtcp.c	/^	int ratelimitBurst;$/;"	m	struct:instanceConf_s	file:
ratelimitBurst	plugins/imudp/imudp.c	/^	int ratelimitBurst;$/;"	m	struct:instanceConf_s	file:
ratelimitBurst	plugins/imuxsock/imuxsock.c	/^	int ratelimitBurst;		\/* max nbr of messages in interval *\/$/;"	m	struct:configSettings_s	file:
ratelimitBurst	plugins/imuxsock/imuxsock.c	/^	int ratelimitBurst;		\/* max nbr of messages in interval *\/$/;"	m	struct:instanceConf_s	file:
ratelimitBurst	plugins/imuxsock/imuxsock.c	/^	int ratelimitBurst;$/;"	m	struct:lstn_s	file:
ratelimitBurst	runtime/tcpsrv.h	/^	int ratelimitBurst;$/;"	m	struct:tcpsrv_s
ratelimitBurstSysSock	plugins/imuxsock/imuxsock.c	/^	int ratelimitBurstSysSock;$/;"	m	struct:configSettings_s	file:
ratelimitBurstSysSock	plugins/imuxsock/imuxsock.c	/^	int ratelimitBurstSysSock;$/;"	m	struct:modConfData_s	file:
ratelimitChecked	runtime/ratelimit.c	/^ratelimitChecked(ratelimit_t *ratelimit)$/;"	f
ratelimitDestruct	runtime/ratelimit.c	/^ratelimitDestruct(ratelimit_t *ratelimit)$/;"	f
ratelimitGenRepMsg	runtime/ratelimit.c	/^ratelimitGenRepMsg(ratelimit_t *ratelimit)$/;"	f	file:
ratelimitInterval	plugins/imjournal/imjournal.c	/^	int ratelimitInterval;$/;"	m	struct:configSettings_s	file:
ratelimitInterval	plugins/imptcp/imptcp.c	/^	int ratelimitInterval;$/;"	m	struct:instanceConf_s	file:
ratelimitInterval	plugins/imtcp/imtcp.c	/^	int ratelimitInterval;$/;"	m	struct:instanceConf_s	file:
ratelimitInterval	plugins/imudp/imudp.c	/^	int ratelimitInterval;$/;"	m	struct:instanceConf_s	file:
ratelimitInterval	plugins/imuxsock/imuxsock.c	/^	int ratelimitInterval;		\/* interval in seconds, 0 = off *\/$/;"	m	struct:configSettings_s	file:
ratelimitInterval	plugins/imuxsock/imuxsock.c	/^	int ratelimitInterval;		\/* interval in seconds, 0 = off *\/$/;"	m	struct:instanceConf_s	file:
ratelimitInterval	plugins/imuxsock/imuxsock.c	/^	int ratelimitInterval;$/;"	m	struct:lstn_s	file:
ratelimitInterval	runtime/tcpsrv.h	/^	int ratelimitInterval;$/;"	m	struct:tcpsrv_s
ratelimitIntervalSysSock	plugins/imuxsock/imuxsock.c	/^	int ratelimitIntervalSysSock;$/;"	m	struct:configSettings_s	file:
ratelimitIntervalSysSock	plugins/imuxsock/imuxsock.c	/^	int ratelimitIntervalSysSock;$/;"	m	struct:modConfData_s	file:
ratelimitModExit	runtime/ratelimit.c	/^ratelimitModExit(void)$/;"	f
ratelimitModInit	runtime/ratelimit.c	/^ratelimitModInit(void)$/;"	f
ratelimitMsg	runtime/ratelimit.c	/^ratelimitMsg(ratelimit_t *ratelimit, msg_t *pMsg, msg_t **ppRepMsg)$/;"	f
ratelimitNew	plugins/imjournal/imjournal.c	/^	CHKiRet(ratelimitNew(&ratelimiter, "imjournal", NULL));$/;"	v
ratelimitNew	runtime/ratelimit.c	/^ratelimitNew(ratelimit_t **ppThis, char *modname, char *dynname)$/;"	f
ratelimitSetLinuxLike	runtime/ratelimit.c	/^ratelimitSetLinuxLike(ratelimit_t *ratelimit, unsigned short interval, unsigned short burst)$/;"	f
ratelimitSetNoTimeCache	runtime/ratelimit.c	/^ratelimitSetNoTimeCache(ratelimit_t *ratelimit)$/;"	f
ratelimitSetSeverity	runtime/ratelimit.c	/^ratelimitSetSeverity(ratelimit_t *ratelimit, intTiny severity)$/;"	f
ratelimitSetThreadSafe	runtime/ratelimit.c	/^ratelimitSetThreadSafe(ratelimit_t *ratelimit)$/;"	f
ratelimitSev	plugins/imuxsock/imuxsock.c	/^	intTiny ratelimitSev;	\/* severity level (and below) for which rate-limiting shall apply *\/$/;"	m	struct:lstn_s	file:
ratelimitSeverity	plugins/imuxsock/imuxsock.c	/^	int ratelimitSeverity;$/;"	m	struct:configSettings_s	file:
ratelimitSeverity	plugins/imuxsock/imuxsock.c	/^	int ratelimitSeverity;$/;"	m	struct:instanceConf_s	file:
ratelimitSeveritySysSock	plugins/imuxsock/imuxsock.c	/^	int ratelimitSeveritySysSock;$/;"	m	struct:configSettings_s	file:
ratelimitSeveritySysSock	plugins/imuxsock/imuxsock.c	/^	int ratelimitSeveritySysSock;$/;"	m	struct:modConfData_s	file:
ratelimit_s	runtime/ratelimit.h	/^struct ratelimit_s {$/;"	s
ratelimit_t	runtime/typedefs.h	/^typedef struct ratelimit_s ratelimit_t;$/;"	t	typeref:struct:ratelimit_s
ratelimiter	plugins/imfile/imfile.c	/^	ratelimit_t *ratelimiter;$/;"	m	struct:lstn_s	file:
ratelimiter	plugins/imjournal/imjournal.c	/^	ratelimitDestruct(ratelimiter);$/;"	v
ratelimiter	plugins/imjournal/imjournal.c	/^	ratelimitSetNoTimeCache(ratelimiter);$/;"	v
ratelimiter	plugins/imjournal/imjournal.c	/^static ratelimit_t *ratelimiter = NULL;$/;"	v	file:
ratelimiter	plugins/imptcp/imptcp.c	/^	ratelimit_t *ratelimiter;$/;"	m	struct:ptcpsrv_s	file:
ratelimiter	plugins/imudp/imudp.c	/^	ratelimit_t *ratelimiter;$/;"	m	struct:lstn_s	file:
ratelimiter	runtime/tcpsrv.h	/^	ratelimit_t *ratelimiter;$/;"	m	struct:tcpLstnPortList_s
rcvBuf	contrib/imzmq3/imzmq3.c	/^    int                    rcvBuf;$/;"	m	struct:instanceConf_s	file:
rcvBuf	contrib/omzmq3/omzmq3.c	/^    int     rcvBuf;$/;"	m	struct:_instanceData	file:
rcvData	contrib/imczmq/imczmq.c	/^static rsRetVal rcvData(thrdInfo_t* pThrd){$/;"	f	file:
rcvFrom	runtime/msg.h	/^	} rcvFrom;$/;"	m	struct:msg	typeref:union:msg::__anon36
rcvHWM	contrib/imzmq3/imzmq3.c	/^    int                    rcvHWM; \/* then pass in 0 (the default). *\/$/;"	m	struct:instanceConf_s	file:
rcvHWM	contrib/omzmq3/omzmq3.c	/^    int     rcvHWM;$/;"	m	struct:_instanceData	file:
rcvMainLoop	plugins/imudp/imudp.c	/^rsRetVal rcvMainLoop(struct wrkrInfo_s *pWrkr)$/;"	f
rcvMainLoop	plugins/imudp/imudp.c	/^rsRetVal rcvMainLoop(thrdInfo_t *pWrkr)$/;"	f
rcvTimeout	contrib/imzmq3/imzmq3.c	/^    int                    rcvTimeout;$/;"	m	struct:instanceConf_s	file:
rcvTimeout	contrib/omzmq3/omzmq3.c	/^    int     rcvTimeout;$/;"	m	struct:_instanceData	file:
rcv_loop	contrib/imzmq3/imzmq3.c	/^static rsRetVal rcv_loop(thrdInfo_t* pThrd){$/;"	f	file:
rcvbuf	plugins/imudp/imudp.c	/^	int rcvbuf;			\/* 0 means: do not set, keep OS default *\/$/;"	m	struct:instanceConf_s	file:
rcvdBytes	plugins/imptcp/imptcp.c	/^	intctr_t rcvdBytes;$/;"	m	struct:ptcplstn_s	file:
rcvdDecompressed	plugins/imptcp/imptcp.c	/^	intctr_t rcvdDecompressed;$/;"	m	struct:ptcplstn_s	file:
re	plugins/external/messagemod/anon_cc_nbrs/anon_cc_nbrs.py	/^import re$/;"	i
re	plugins/external/messagemod/fac-sever-rewrite/fac-sever-rewrite.py	/^import re$/;"	i
re	plugins/impstats/statslog_regex.py	/^import re$/;"	i
re	template.h	/^			regex_t re;	\/* APR: this is the regular expression *\/$/;"	m	struct:templateEntry::__anon69::__anon71
readBlkEnd	runtime/libgcry.c	/^readBlkEnd(gcryfile gf)$/;"	f	file:
readBuf	runtime/libgcry.h	/^	uchar *readBuf;$/;"	m	struct:gcryfile_s
readBufIdx	runtime/libgcry.h	/^	int16_t readBufIdx;$/;"	m	struct:gcryfile_s
readBufMaxIdx	runtime/libgcry.h	/^	int16_t readBufMaxIdx;$/;"	m	struct:gcryfile_s
readConfFile	grammar/rainerscript.c	/^readConfFile(FILE * const fp, es_str_t **str)$/;"	f
readFile	runtime/nsd_gtls.c	/^readFile(uchar *pszFile, gnutls_datum_t *pBuf)$/;"	f	file:
readFile	tests/filewriter.c	/^readFile()$/;"	f	file:
readIV	runtime/libgcry.c	/^readIV(gcryfile gf, uchar **iv)$/;"	f	file:
readLine	tests/nettester.c	/^void readLine(int fd, char *ln)$/;"	f
readLog	plugins/imsolaris/imsolaris.c	/^readLog(int fd, uchar *pRcv, int iMaxLine)$/;"	f	file:
readMode	plugins/imfile/imfile.c	/^	int readMode;  \/* mode to use for ReadMultiLine call *\/$/;"	m	struct:configSettings_s	file:
readMode	plugins/imfile/imfile.c	/^	uint8_t readMode;	\/* which mode to use in ReadMulteLine call? *\/$/;"	m	struct:lstn_s	file:
readMode	plugins/imfile/imfile.c	/^	uint8_t readMode;$/;"	m	struct:instanceConf_s	file:
readProgChar	runtime/libgcry_common.c	/^readProgChar(int fd, char *c)$/;"	f	file:
readProgKey	runtime/libgcry_common.c	/^readProgKey(int fd, char *buf, unsigned keylen)$/;"	f	file:
readProgLine	runtime/libgcry_common.c	/^readProgLine(int fd, char *buf)$/;"	f	file:
readResponse	plugins/ommail/ommail.c	/^readResponse(wrkrInstanceData_t *pWrkrData, int *piState, int iExpected)$/;"	f	file:
readResponseLn	plugins/ommail/ommail.c	/^readResponseLn(wrkrInstanceData_t *pWrkrData, char *pLn, size_t lenLn, size_t *const __restrict__ respLen)$/;"	f	file:
readSocket	plugins/imuxsock/imuxsock.c	/^static rsRetVal readSocket(lstn_t *pLstn)$/;"	f	file:
readStateFile	runtime/librsgt.c	/^readStateFile(gtfile gf)$/;"	f	file:
readStateFile	runtime/librsksi.c	/^readStateFile(ksifile ksi)$/;"	f	file:
read_all	runtime/gss-misc.c	/^static int read_all(int fd, char *buf, unsigned int nbyte)$/;"	f	file:
read_data	tools/logctl.c	/^struct results* read_data(struct db_cursor *db_c)$/;"	f
readfds	plugins/imuxsock/imuxsock.c	/^        fd_set  readfds;$/;"	v
readfds	runtime/nsdsel_ptcp.h	/^	fd_set readfds;$/;"	m	struct:nsdsel_ptcp_s
readjournal	plugins/imjournal/imjournal.c	/^readjournal() {$/;"	f	file:
readklog	plugins/imklog/bsd.c	/^readklog(modConfData_t *pModConf)$/;"	f	file:
readkmsg	contrib/imkmsg/kmsg.c	/^readkmsg(void)$/;"	f	file:
ready	tools/ompipe.c	/^	int ready;$/;"	v
readyModForCnf	runtime/modules.c	/^readyModForCnf(modInfo_t *pThis, cfgmodules_etry_t **ppNew, cfgmodules_etry_t **ppLast)$/;"	f
rebindInterval	plugins/omrelp/omrelp.c	/^	unsigned rebindInterval;$/;"	m	struct:_instanceData	file:
recCount	runtime/librsgt_common.h	/^	uint64_t recCount;$/;"	m	struct:block_sig_s
recNum	runtime/librsgt.h	/^	uint64_t recNum;$/;"	m	struct:gterrctx_s
recNum	runtime/librsksi.h	/^	uint64_t recNum;$/;"	m	struct:ksierrctx_s
recNumInFile	runtime/librsgt.h	/^	uint64_t recNumInFile;$/;"	m	struct:gterrctx_s
recNumInFile	runtime/librsksi.h	/^	uint64_t recNumInFile;$/;"	m	struct:ksierrctx_s
reconnectIVL	contrib/imzmq3/imzmq3.c	/^    int                    reconnectIVL;$/;"	m	struct:instanceConf_s	file:
reconnectIVL	contrib/omzmq3/omzmq3.c	/^    int     reconnectIVL;$/;"	m	struct:_instanceData	file:
reconnectIVLMax	contrib/imzmq3/imzmq3.c	/^    int                    reconnectIVLMax;$/;"	m	struct:instanceConf_s	file:
reconnectIVLMax	contrib/omzmq3/omzmq3.c	/^    int     reconnectIVLMax;$/;"	m	struct:_instanceData	file:
record	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	s	file:
recoveryIVL	contrib/imzmq3/imzmq3.c	/^    int                    recoveryIVL;$/;"	m	struct:instanceConf_s	file:
recoveryIVL	contrib/omzmq3/omzmq3.c	/^    int     recoveryIVL;$/;"	m	struct:_instanceData	file:
recv_token	runtime/gss-misc.c	/^static int recv_token(int s, gss_buffer_t tok)$/;"	f	file:
recv_token	runtime/gss-misc.h	/^	int (*recv_token)(int s, gss_buffer_t tok);$/;"	v
recvmsg_iov	plugins/imudp/imudp.c	/^	struct iovec *recvmsg_iov;$/;"	m	struct:wrkrInfo_s	typeref:struct:wrkrInfo_s::iovec	file:
recvmsg_mmh	plugins/imudp/imudp.c	/^	struct mmsghdr *recvmsg_mmh;$/;"	m	struct:wrkrInfo_s	typeref:struct:wrkrInfo_s::mmsghdr	file:
refcnt	plugins/imfile/imfile.c	/^	int refcnt;	\/* due to inotify's async nature, we may have multiple$/;"	m	struct:dirInfoFiles_s	file:
regBuildInModule	runtime/rsconf.c	/^regBuildInModule(rsRetVal (*modInit)(), uchar *name, void *pModHdlr)$/;"	f	file:
regCfSysLineHdlr	runtime/cfsysline.c	/^rsRetVal regCfSysLineHdlr(uchar *pCmdName, int bChainingPermitted, ecslCmdHdrlType eType, rsRetVal (*pHdlr)(), void *pData, void *pOwnerCookie)$/;"	f
regCfSysLineHdlr2	runtime/cfsysline.c	/^rsRetVal regCfSysLineHdlr2(uchar *pCmdName, int bChainingPermitted, ecslCmdHdrlType eType, rsRetVal (*pHdlr)(), void *pData, void *pOwnerCookie, int *permitted)$/;"	f
regcomp	runtime/regexp.h	/^	int (*regcomp)(regex_t *preg, const char *regex, int cflags);$/;"	v
regerror	runtime/regexp.h	/^	size_t (*regerror)(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size);$/;"	v
regex_cache	grammar/rainerscript.h	/^			regex_t *regex_cache;\/* cache for compiled REs, if used *\/$/;"	m	struct:cnfstmt::__anon4::__anon10
regexec	runtime/regexp.h	/^	int (*regexec)(const regex_t *preg, const char *string, size_t nmatch, regmatch_t pmatch[], int eflags);$/;"	v
regexp	runtime/regexp.h	/^PROTOTYPEObj(regexp);$/;"	v
regexpCURR_IF_VERSION	runtime/regexp.h	35;"	d
regfree	runtime/regexp.h	/^	void (*regfree)(regex_t *preg);$/;"	v
reinitAllowRoot	runtime/net.c	/^reinitAllowRoot(uchar *pszType)$/;"	f	file:
reinitVar	runtime/msg.c	/^reinitVar(var_t *pVar)$/;"	f	file:
releaseDoActionParams	action.c	/^releaseDoActionParams(action_t *__restrict__ const pAction, wti_t *__restrict__ const pWti)$/;"	f	file:
relpEngineCltDestruct	plugins/omrelp/omrelp.c	/^		relpEngineCltDestruct(pRelpEngine, &pWrkrData->pRelpClt);$/;"	v
relpEngineConstruct	plugins/omrelp/omrelp.c	/^	CHKiRet(relpEngineConstruct(&pRelpEngine));$/;"	v
remAddr	runtime/nsd_ptcp.h	/^	struct sockaddr_storage remAddr; \/**< remote addr as sockaddr - used for legacy ACL code *\/$/;"	m	struct:nsd_ptcp_s	typeref:struct:nsd_ptcp_s::sockaddr_storage
remoteIP	runtime/nsd_ptcp.h	/^	prop_t *remoteIP; \/**< IP address of remote peer (currently used in server mode, only) *\/$/;"	m	struct:nsd_ptcp_s
removeEPollSock	plugins/imptcp/imptcp.c	/^removeEPollSock(int sock, epolld_t *epd)$/;"	f	file:
removeFromObjList	runtime/statsobj.c	/^	removeFromObjList(pThis);$/;"	v
removeFromObjList	runtime/statsobj.c	/^removeFromObjList(statsobj_t *pThis)$/;"	f	file:
removeNOPs	grammar/rainerscript.c	/^removeNOPs(struct cnfstmt *root)$/;"	f	file:
removePadding	runtime/libgcry.c	/^removePadding(uchar *buf, size_t *plen)$/;"	f	file:
removePadding	tools/rscryutil.c	/^removePadding(char *buf, size_t *plen)$/;"	f	file:
replChar	plugins/mmanon/mmanon.c	/^	char replChar;$/;"	m	struct:_instanceData	file:
replChar	plugins/mmutf8fix/mmutf8fix.c	/^	uchar replChar;$/;"	m	struct:_instanceData	file:
replies	contrib/omhiredis/omhiredis.c	/^	redisReply **replies; \/* array to hold replies from redis *\/$/;"	m	struct:wrkrInstanceData	file:
reply	contrib/omhttpfs/omhttpfs.c	/^    char* reply;$/;"	m	struct:wrkrInstanceData	file:
reply	plugins/omelasticsearch/omelasticsearch.c	/^	char *reply;$/;"	m	struct:wrkrInstanceData	file:
replyLen	contrib/omhttpfs/omhttpfs.c	/^    int replyLen;$/;"	m	struct:wrkrInstanceData	file:
replyLen	plugins/omelasticsearch/omelasticsearch.c	/^	int replyLen;$/;"	m	struct:wrkrInstanceData	file:
reportDBError	plugins/omlibdbi/omlibdbi.c	/^reportDBError(instanceData *pData, int bSilent)$/;"	f	file:
reportDBError	plugins/ommysql/ommysql.c	/^static void reportDBError(wrkrInstanceData_t *pWrkrData, int bSilent)$/;"	f	file:
reportDBError	plugins/ompgsql/ompgsql.c	/^static void reportDBError(instanceData *pData, int bSilent)$/;"	f	file:
reportErr	runtime/librsgt.c	/^reportErr(gtctx ctx, char *errmsg)$/;"	f	file:
reportErr	runtime/librsksi.c	/^reportErr(rsksictx ctx, char *errmsg)$/;"	f	file:
reportError	runtime/librsgt_read.c	/^reportError(int errcode, gterrctx_t *ectx)$/;"	f	file:
reportError	runtime/librsksi_read.c	/^reportError(const int errcode, ksierrctx_t *ectx)$/;"	f	file:
reportGTAPIErr	runtime/librsgt.c	/^reportGTAPIErr(gtctx ctx, gtfile gf, char *apiname, int ecode)$/;"	f	file:
reportKSIAPIErr	runtime/librsksi.c	/^reportKSIAPIErr(rsksictx ctx, ksifile ksi, char *apiname, int ecode)$/;"	f	file:
reportMongoError	plugins/ommongodb/ommongodb.c	/^reportMongoError(instanceData *pData)$/;"	f	file:
reportVerifySuccess	runtime/librsgt_read.c	/^reportVerifySuccess(gterrctx_t *ectx, GTVerificationInfo *vrfyInf)$/;"	f	file:
reportVerifySuccess	runtime/librsksi_read.c	/^reportVerifySuccess(ksierrctx_t *ectx) \/*OLD CODE , GTVerificationInfo *vrfyInf)*\/$/;"	f	file:
res	plugins/omgssapi/omgssapi.c	/^        struct addrinfo hints, *res;$/;"	v	typeref:struct:
resetConfigVariables	action.c	/^resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	contrib/imkmsg/imkmsg.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	contrib/mmgrok/mmgrok.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/im3195/im3195.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imdiag/imdiag.c	/^resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imfile/imfile.c	/^resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imgssapi/imgssapi.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imklog/imklog.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/immark/immark.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/impstats/impstats.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imptcp/imptcp.c	/^resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imrelp/imrelp.c	/^resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imsolaris/imsolaris.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp,$/;"	f	file:
resetConfigVariables	plugins/imtcp/imtcp.c	/^resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imudp/imudp.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/imuxsock/imuxsock.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/mmaudit/mmaudit.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/mmjsonparse/mmjsonparse.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/mmnormalize/mmnormalize.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/mmsnmptrapd/mmsnmptrapd.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omgssapi/omgssapi.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omhdfs/omhdfs.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omlibdbi/omlibdbi.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/ommail/ommail.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/ommysql/ommysql.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omprog/omprog.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omruleset/omruleset.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omsnmp/omsnmp.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omstdout/omstdout.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omudpspoof/omudpspoof.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	plugins/omuxsock/omuxsock.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	runtime/conf.c	/^resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	runtime/glbl.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	runtime/rsconf.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	tools/omfile.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetConfigVariables	tools/omfwd.c	/^static rsRetVal resetConfigVariables(uchar __attribute__((unused)) *pp, void __attribute__((unused)) *pVal)$/;"	f	file:
resetErrMsgsFlag	runtime/errmsg.c	/^resetErrMsgsFlag(void)$/;"	f
resetResettableCtr	runtime/statsobj.c	/^resetResettableCtr(ctr_t *pCtr, int8_t bResetCtrs)$/;"	f	file:
resolveAddr	runtime/dnscache.c	/^resolveAddr(struct sockaddr_storage *addr, dnscache_entry_t *etry)$/;"	f	file:
resolveDNS	runtime/msg.c	/^resolveDNS(msg_t * const pMsg) {$/;"	f	file:
resolveFileSizeLimit	runtime/stream.c	/^resolveFileSizeLimit(strm_t *pThis, uchar *pszCurrFName)$/;"	f	file:
respBuf	plugins/mmexternal/mmexternal.c	/^	char *respBuf;		\/* buffer to read exernal plugin's response *\/$/;"	m	struct:wrkrInstanceData	file:
restURL	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *restURL;		\/* last used URL for error reporting *\/$/;"	m	struct:wrkrInstanceData	file:
result	plugins/impstats/statslog-analyzer.py	/^				result = loglineregex.split(line)$/;"	v
result	plugins/impstats/statslog-splitter.py	/^				result = loglineregex.split(line)$/;"	v
result	tools/logctl.c	/^	bson *result;	$/;"	m	struct:results	file:
result_s	contrib/mmgrok/mmgrok.c	/^typedef struct result_s{$/;"	s	file:
result_t	contrib/mmgrok/mmgrok.c	/^}result_t;$/;"	t	typeref:struct:result_s	file:
results	tools/logctl.c	/^struct results $/;"	s	file:
ret	plugins/imjournal/imjournal.c	/^	int ret;$/;"	v
ret	plugins/omrelp/omrelp.c	/^	relpRetVal ret;$/;"	v
retryInterval	plugins/external/solr/rsyslog_solr.py	/^retryInterval = 5$/;"	v
righthash	runtime/librsgt.h	/^	GTDataHash *lefthash, *righthash; \/* hashes to display if tree hash fails *\/$/;"	m	struct:gterrctx_s
righthash	runtime/librsksi.h	/^	KSI_DataHash *lefthash, *righthash; \/* hashes to display if tree hash fails *\/$/;"	m	struct:ksierrctx_s
rk	plugins/omkafka/omkafka.c	/^	rd_kafka_t *rk;$/;"	m	struct:_instanceData	file:
rkLock	plugins/omkafka/omkafka.c	/^	pthread_rwlock_t rkLock;$/;"	m	struct:_instanceData	file:
rmLeadingSpace	grammar/rainerscript.c	/^rmLeadingSpace(char *s)$/;"	f
root	contrib/imczmq/imczmq.c	/^	instanceConf_t *root;$/;"	m	struct:modConfData_s	file:
root	contrib/imzmq3/imzmq3.c	/^    instanceConf_t* root;$/;"	m	struct:modConfData_s	file:
root	plugins/imfile/imfile.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
root	plugins/imptcp/imptcp.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
root	plugins/imrelp/imrelp.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
root	plugins/imtcp/imtcp.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
root	plugins/imudp/imudp.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
root	plugins/imuxsock/imuxsock.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
root	runtime/lookup.h	/^	lookup_t *root;	\/* the root of the template list *\/$/;"	m	struct:lookup_tables_s
root	runtime/rsconf.h	/^	cfgmodules_etry_t *root;$/;"	m	struct:cfgmodules_s
root	runtime/rsconf.h	/^	struct template *root;	\/* the root of the template list *\/$/;"	m	struct:templates_s	typeref:struct:templates_s::
root	runtime/ruleset.h	/^	struct cnfstmt *root;$/;"	m	struct:ruleset_s	typeref:struct:ruleset_s::cnfstmt
root	tests/filewriter.c	/^} *root, *tail;$/;"	v	typeref:struct:line
roots_hash	runtime/librsgt.h	/^	GTDataHash *roots_hash[MAX_ROOTS];$/;"	m	struct:gtfile_s
roots_hash	runtime/librsksi.h	/^	KSI_DataHash *roots_hash[MAX_ROOTS];$/;"	m	struct:ksifile_s
roots_valid	runtime/librsgt.h	/^	int8_t roots_valid[MAX_ROOTS];$/;"	m	struct:gtfile_s
roots_valid	runtime/librsksi.h	/^	int8_t roots_valid[MAX_ROOTS];$/;"	m	struct:ksifile_s
routing_key	contrib/omrabbitmq/omrabbitmq.c	/^	uchar *routing_key;$/;"	m	struct:_instanceData	file:
rsCHECKVALIDOBJECT	runtime/rsyslog.h	511;"	d
rsCHECKVALIDOBJECT	runtime/rsyslog.h	514;"	d
rsCStrAppendCStr	runtime/stringbuf.h	209;"	d
rsCStrAppendInt	runtime/stringbuf.c	/^rsRetVal rsCStrAppendInt(cstr_t *pThis, long i)$/;"	f
rsCStrAppendStr	runtime/stringbuf.c	/^rsRetVal rsCStrAppendStr(cstr_t *pThis, uchar* psz)$/;"	f
rsCStrAppendStrWithLen	runtime/stringbuf.c	/^rsRetVal rsCStrAppendStrWithLen(cstr_t *pThis, uchar* psz, size_t iStrLen)$/;"	f
rsCStrAppendStrf	runtime/stringbuf.c	/^rsRetVal rsCStrAppendStrf(cstr_t *pThis, char *fmt, ...)$/;"	f
rsCStrCStrCmp	runtime/stringbuf.c	/^int rsCStrCStrCmp(cstr_t *pCS1, cstr_t *pCS2)$/;"	f
rsCStrCaseInsensitiveLocateInSzStr	runtime/stringbuf.c	/^int rsCStrCaseInsensitiveLocateInSzStr(cstr_t *pThis, uchar *sz)$/;"	f
rsCStrCaseInsensitveStartsWithSzStr	runtime/stringbuf.c	/^int rsCStrCaseInsensitveStartsWithSzStr(cstr_t *pCS1, uchar *psz, size_t iLenSz)$/;"	f
rsCStrConstruct	runtime/stringbuf.h	57;"	d
rsCStrConstructFromCStr	runtime/stringbuf.c	/^rsRetVal rsCStrConstructFromCStr(cstr_t **ppThis, cstr_t *pFrom)$/;"	f
rsCStrConstructFromszStr	runtime/stringbuf.c	/^rsRetVal rsCStrConstructFromszStr(cstr_t **ppThis, uchar *sz)$/;"	f
rsCStrConstructFromszStrf	runtime/stringbuf.c	/^rsRetVal rsCStrConstructFromszStrf(cstr_t **ppThis, char *fmt, ...)$/;"	f
rsCStrConstructFromszStrv	runtime/stringbuf.c	/^static rsRetVal rsCStrConstructFromszStrv(cstr_t **ppThis, char *fmt, va_list ap)$/;"	f	file:
rsCStrConvertToBool	runtime/stringbuf.c	/^rsCStrConvertToBool(cstr_t *pStr, number_t *pBool)$/;"	f
rsCStrConvertToNumber	runtime/stringbuf.c	/^rsCStrConvertToNumber(cstr_t *pStr, number_t *pNumber)$/;"	f
rsCStrDestruct	runtime/stringbuf.c	/^void rsCStrDestruct(cstr_t **ppThis)$/;"	f
rsCStrExtendBuf	runtime/stringbuf.c	/^rsCStrExtendBuf(cstr_t *pThis, size_t iMinNeeded)$/;"	f
rsCStrGetBufBeg	runtime/stringbuf.h	224;"	d
rsCStrGetSzStr	runtime/stringbuf.c	/^uchar*  rsCStrGetSzStr(cstr_t *pThis)$/;"	f
rsCStrGetSzStrNoNULL	runtime/stringbuf.c	/^uchar*  rsCStrGetSzStrNoNULL(cstr_t *pThis)$/;"	f
rsCStrLen	runtime/stringbuf.h	222;"	d
rsCStrLocateInSzStr	runtime/stringbuf.c	/^int rsCStrLocateInSzStr(cstr_t *pThis, uchar *sz)$/;"	f
rsCStrOffsetSzStrCmp	runtime/stringbuf.c	/^int rsCStrOffsetSzStrCmp(cstr_t *pCS1, size_t iOffset, uchar *psz, size_t iLenSz)$/;"	f
rsCStrRegexDestruct	runtime/stringbuf.c	/^void rsCStrRegexDestruct(void *rc)$/;"	f
rsCStrSetSzStr	runtime/stringbuf.c	/^rsRetVal rsCStrSetSzStr(cstr_t *pThis, uchar *pszNew)$/;"	f
rsCStrStartsWithSzStr	runtime/stringbuf.c	/^int rsCStrStartsWithSzStr(cstr_t *pCS1, uchar *psz, size_t iLenSz)$/;"	f
rsCStrSzStrCmp	runtime/stringbuf.c	/^int rsCStrSzStrCmp(cstr_t *pCS1, uchar *psz, size_t iLenSz)$/;"	f
rsCStrSzStrMatchRegex	runtime/stringbuf.c	/^rsRetVal rsCStrSzStrMatchRegex(cstr_t *pCS1, uchar *psz, int iType, void *rc)$/;"	f
rsCStrSzStrStartsWithCStr	runtime/stringbuf.c	/^int rsCStrSzStrStartsWithCStr(cstr_t *pCS1, uchar *psz, size_t iLenSz)$/;"	f
rsCStrTruncate	runtime/stringbuf.c	/^rsRetVal rsCStrTruncate(cstr_t *pThis, size_t nTrunc)$/;"	f
rsObjID	runtime/rsyslog.h	/^typedef enum rsObjectID rsObjID;$/;"	t	typeref:enum:rsObjectID
rsObjectID	runtime/rsyslog.h	/^enum rsObjectID$/;"	g
rsParsAssignString	parse.c	/^rsRetVal rsParsAssignString(rsParsObj *pThis, cstr_t *pCStr)$/;"	f
rsParsConstruct	parse.c	/^rsRetVal rsParsConstruct(rsParsObj **ppThis)$/;"	f
rsParsConstructFromSz	parse.c	/^rsRetVal rsParsConstructFromSz(rsParsObj **ppThis, unsigned char *psz)$/;"	f
rsParsDestruct	parse.c	/^rsRetVal rsParsDestruct(rsParsObj *pThis)$/;"	f
rsParsGetParsePointer	parse.c	/^int rsParsGetParsePointer(rsParsObj *pThis)$/;"	f
rsParsObj	parse.h	/^typedef struct rsParsObject rsParsObj;$/;"	t	typeref:struct:rsParsObject
rsParsObject	parse.h	/^struct rsParsObject$/;"	s
rsRetVal	runtime/typedefs.h	/^typedef enum rsRetVal_ rsRetVal; \/**< friendly type for global return value *\/$/;"	t	typeref:enum:rsRetVal_
rsRetVal_	runtime/rsyslog.h	/^enum rsRetVal_				\/** return value. All methods return this if not specified otherwise *\/$/;"	g
rsSETOBJTYPE	runtime/rsyslog.h	510;"	d
rsSETOBJTYPE	runtime/rsyslog.h	513;"	d
rs_size_t	runtime/typedefs.h	/^typedef int rs_size_t; \/* we do never need more than 2Gig strings, signed permits to$/;"	t
rs_strerror_r	runtime/srutils.c	/^char *rs_strerror_r(int errnum, char *buf, size_t buflen) {$/;"	f
rsconf	runtime/rsconf.h	/^	INTERFACEObjDebugPrint(rsconf);$/;"	v
rsconf	runtime/rsconf.h	/^PROTOTYPEObj(rsconf);$/;"	v
rsconfCURR_IF_VERSION	runtime/rsconf.h	170;"	d
rsconfNeedDropPriv	runtime/rsconf.h	/^static inline int rsconfNeedDropPriv(rsconf_t *const cnf) {$/;"	f
rsconf_s	runtime/rsconf.h	/^struct rsconf_s {$/;"	s
rsconf_t	runtime/typedefs.h	/^typedef struct rsconf_s rsconf_t;$/;"	t	typeref:struct:rsconf_s
rsgcryAlgoname2Algo	runtime/libgcry.h	/^rsgcryAlgoname2Algo(char *algoname) {$/;"	f
rsgcryBlkBegin	runtime/libgcry.c	/^rsgcryBlkBegin(gcryfile gf)$/;"	f	file:
rsgcryCtxDel	runtime/libgcry.c	/^rsgcryCtxDel(gcryctx ctx)$/;"	f
rsgcryDecrypt	runtime/libgcry.c	/^rsgcryDecrypt(gcryfile pF, uchar *buf, size_t *len)$/;"	f
rsgcryEncrypt	runtime/libgcry.c	/^rsgcryEncrypt(gcryfile pF, uchar *buf, size_t *len)$/;"	f
rsgcryExit	runtime/libgcry.c	/^rsgcryExit(void)$/;"	f
rsgcryInit	runtime/libgcry.c	/^rsgcryInit(void)$/;"	f
rsgcryInitCrypt	runtime/libgcry.c	/^rsgcryInitCrypt(gcryctx ctx, gcryfile *pgf, uchar *fname, char openMode)$/;"	f
rsgcryModename2Mode	runtime/libgcry.h	/^rsgcryModename2Mode(char *modename) {$/;"	f
rsgcrySetAlgo	runtime/libgcry.c	/^rsgcrySetAlgo(gcryctx ctx, uchar *algoname)$/;"	f
rsgcrySetKey	runtime/libgcry.c	/^rsgcrySetKey(gcryctx ctx, unsigned char *key, uint16_t keyLen)$/;"	f
rsgcrySetMode	runtime/libgcry.c	/^rsgcrySetMode(gcryctx ctx, uchar *modename)$/;"	f
rsgtCtxDel	runtime/librsgt.c	/^rsgtCtxDel(gtctx ctx)$/;"	f
rsgtCtxNew	runtime/librsgt.c	/^rsgtCtxNew(void)$/;"	f
rsgtCtxOpenFile	runtime/librsgt.c	/^rsgtCtxOpenFile(gtctx ctx, unsigned char *logfn)$/;"	f
rsgtExit	runtime/librsgt.c	/^rsgtExit(void)$/;"	f
rsgtImprintFromGTDataHash	runtime/librsgt.c	/^rsgtImprintFromGTDataHash(GTDataHash *hash)$/;"	f
rsgtInit	runtime/librsgt.c	/^rsgtInit(char *usragent)$/;"	f
rsgtSetBlockSizeLimit	runtime/librsgt.h	/^rsgtSetBlockSizeLimit(gtctx ctx, uint64_t limit)$/;"	f
rsgtSetHashFunction	runtime/librsgt.c	/^rsgtSetHashFunction(gtctx ctx, char *algName)$/;"	f
rsgtSetKeepRecordHashes	runtime/librsgt.h	/^rsgtSetKeepRecordHashes(gtctx ctx, int val)$/;"	f
rsgtSetKeepTreeHashes	runtime/librsgt.h	/^rsgtSetKeepTreeHashes(gtctx ctx, int val)$/;"	f
rsgtSetTimestamper	runtime/librsgt.h	/^rsgtSetTimestamper(gtctx ctx, char *timestamper)$/;"	f
rsgt_ConvertSigFile	runtime/librsgt_read.c	/^int rsgt_ConvertSigFile(char* name, FILE *oldsigfp, FILE *newsigfp, int verbose)$/;"	f
rsgt_chkFileHdr	runtime/librsgt_read.c	/^rsgt_chkFileHdr(FILE *fp, char *expect)$/;"	f
rsgt_errctxExit	runtime/librsgt_read.c	/^rsgt_errctxExit(gterrctx_t *ectx)$/;"	f
rsgt_errctxFrstRecInBlk	runtime/librsgt_read.c	/^rsgt_errctxFrstRecInBlk(gterrctx_t *ectx, char *rec)$/;"	f
rsgt_errctxInit	runtime/librsgt_read.c	/^rsgt_errctxInit(gterrctx_t *ectx)$/;"	f
rsgt_errctxSetErrRec	runtime/librsgt_read.c	/^rsgt_errctxSetErrRec(gterrctx_t *ectx, char *rec)$/;"	f
rsgt_extendSig	runtime/librsgt_read.c	/^rsgt_extendSig(GTTimestamp *timestamp, tlvrecord_t *rec, gterrctx_t *ectx)$/;"	f	file:
rsgt_extend_puburl	runtime/librsgt_read.c	/^char *rsgt_extend_puburl = "http:\/\/verifier.guardtime.net\/gt-extendingservice";$/;"	v
rsgt_getBlockParams	runtime/librsgt_read.c	/^rsgt_getBlockParams(FILE *fp, uint8_t bRewind, block_sig_t **bs, block_hdr_t **bh,$/;"	f
rsgt_objfree	runtime/librsgt_read.c	/^rsgt_objfree(uint16_t tlvtype, void *obj)$/;"	f
rsgt_printBLOCK_HDR	runtime/librsgt_read.c	/^rsgt_printBLOCK_HDR(FILE *fp, block_hdr_t *bh, uint8_t verbose)$/;"	f
rsgt_printBLOCK_SIG	runtime/librsgt_read.c	/^rsgt_printBLOCK_SIG(FILE *fp, block_sig_t *bs, uint8_t verbose)$/;"	f
rsgt_printIMPRINT	runtime/librsgt_read.c	/^rsgt_printIMPRINT(FILE *fp, char *name, imprint_t *imp, uint8_t verbose)$/;"	f	file:
rsgt_printINT_HASH	runtime/librsgt_read.c	/^rsgt_printINT_HASH(FILE *fp, imprint_t *imp, uint8_t verbose)$/;"	f	file:
rsgt_printREC_HASH	runtime/librsgt_read.c	/^rsgt_printREC_HASH(FILE *fp, imprint_t *imp, uint8_t verbose)$/;"	f	file:
rsgt_read_debug	runtime/librsgt_read.c	/^static int rsgt_read_debug = 0;$/;"	v	file:
rsgt_read_puburl	runtime/librsgt_read.c	/^char *rsgt_read_puburl = "http:\/\/verify.guardtime.com\/gt-controlpublications.bin";$/;"	v
rsgt_read_showVerified	runtime/librsgt_read.c	/^uint8_t rsgt_read_showVerified = 0;$/;"	v
rsgt_set_debug	runtime/librsgt_read.c	/^void rsgt_set_debug(int iDebug)$/;"	f
rsgt_tlv16Write	runtime/librsgt_read.c	/^rsgt_tlv16Write(FILE *newsigfp, int flags, int tlvtype, uint16_t len)$/;"	f	file:
rsgt_tlv8Write	runtime/librsgt_read.c	/^rsgt_tlv8Write(FILE *newsigfp, int flags, int tlvtype, int len)$/;"	f	file:
rsgt_tlvDecodeBLOCK_HDR	runtime/librsgt_read.c	/^rsgt_tlvDecodeBLOCK_HDR(tlvrecord_t *rec, block_hdr_t **blockhdr)$/;"	f	file:
rsgt_tlvDecodeBLOCK_IV	runtime/librsgt_read.c	/^rsgt_tlvDecodeBLOCK_IV(tlvrecord_t *rec, uint16_t *strtidx, uint8_t **iv)$/;"	f	file:
rsgt_tlvDecodeBLOCK_SIG	runtime/librsgt_read.c	/^rsgt_tlvDecodeBLOCK_SIG(tlvrecord_t *rec, block_sig_t **blocksig)$/;"	f	file:
rsgt_tlvDecodeHASH_ALGO	runtime/librsgt_read.c	/^rsgt_tlvDecodeHASH_ALGO(tlvrecord_t *rec, uint16_t *strtidx, uint8_t *hashAlg)$/;"	f	file:
rsgt_tlvDecodeIMPRINT	runtime/librsgt_read.c	/^rsgt_tlvDecodeIMPRINT(tlvrecord_t *rec, imprint_t **imprint)$/;"	f	file:
rsgt_tlvDecodeLAST_HASH	runtime/librsgt_read.c	/^rsgt_tlvDecodeLAST_HASH(tlvrecord_t *rec, uint16_t *strtidx, imprint_t *imp)$/;"	f	file:
rsgt_tlvDecodeREC_COUNT	runtime/librsgt_read.c	/^rsgt_tlvDecodeREC_COUNT(tlvrecord_t *rec, uint16_t *strtidx, uint64_t *cnt)$/;"	f	file:
rsgt_tlvDecodeSIG	runtime/librsgt_read.c	/^rsgt_tlvDecodeSIG(tlvrecord_t *rec, uint16_t *strtidx, block_sig_t *bs)$/;"	f	file:
rsgt_tlvDecodeSUBREC	runtime/librsgt_read.c	/^rsgt_tlvDecodeSUBREC(tlvrecord_t *rec, uint16_t *stridx, tlvrecord_t *newrec)$/;"	f	file:
rsgt_tlvGetInt64OctetSize	runtime/librsgt_read.c	/^static inline uint8_t rsgt_tlvGetInt64OctetSize(uint64_t val)$/;"	f	file:
rsgt_tlvRecDecode	runtime/librsgt_read.c	/^rsgt_tlvRecDecode(tlvrecord_t *rec, void *obj)$/;"	f	file:
rsgt_tlvRecRead	runtime/librsgt_read.c	/^rsgt_tlvRecRead(FILE *fp, tlvrecord_t *rec)$/;"	f	file:
rsgt_tlvfileAddInt64	runtime/librsgt_read.c	/^static inline int rsgt_tlvfileAddInt64(FILE *newsigfp, uint64_t val)$/;"	f	file:
rsgt_tlvfileAddOctet	runtime/librsgt_read.c	/^static inline int rsgt_tlvfileAddOctet(FILE *newsigfp, int8_t octet)$/;"	f	file:
rsgt_tlvfileAddOctetString	runtime/librsgt_read.c	/^static inline int rsgt_tlvfileAddOctetString(FILE *newsigfp, uint8_t *octet, int size)$/;"	f	file:
rsgt_tlvprint	runtime/librsgt_read.c	/^rsgt_tlvprint(FILE *fp, uint16_t tlvtype, void *obj, uint8_t verbose)$/;"	f
rsgt_tlvrd	runtime/librsgt_read.c	/^rsgt_tlvrd(FILE *fp, tlvrecord_t *rec, void *obj)$/;"	f
rsgt_tlvrdHeader	runtime/librsgt_read.c	/^rsgt_tlvrdHeader(FILE *fp, uchar *hdr)$/;"	f
rsgt_tlvrdRecHash	runtime/librsgt_read.c	/^rsgt_tlvrdRecHash(FILE *fp, FILE *outfp, imprint_t **imp)$/;"	f	file:
rsgt_tlvrdTreeHash	runtime/librsgt_read.c	/^rsgt_tlvrdTreeHash(FILE *fp, FILE *outfp, imprint_t **imp)$/;"	f	file:
rsgt_tlvrdVrfyBlockSig	runtime/librsgt_read.c	/^rsgt_tlvrdVrfyBlockSig(FILE *fp, block_sig_t **bs, tlvrecord_t *rec)$/;"	f	file:
rsgt_tlvwrite	runtime/librsgt_read.c	/^rsgt_tlvwrite(FILE *fp, tlvrecord_t *rec)$/;"	f	file:
rsgt_userid	runtime/librsgt_read.c	/^char *rsgt_userid = ""; $/;"	v
rsgt_userkey	runtime/librsgt_read.c	/^char *rsgt_userkey = ""; $/;"	v
rsgt_vrfyBlkInit	runtime/librsgt_read.c	/^rsgt_vrfyBlkInit(gtfile gf, block_hdr_t *bh, uint8_t bHasRecHashes, uint8_t bHasIntermedHashes)$/;"	f
rsgt_vrfyConstruct_gf	runtime/librsgt_read.c	/^rsgt_vrfyConstruct_gf(void)$/;"	f
rsgt_vrfy_chkRecHash	runtime/librsgt_read.c	/^rsgt_vrfy_chkRecHash(gtfile gf, FILE *sigfp, FILE *nsigfp, $/;"	f	file:
rsgt_vrfy_chkTreeHash	runtime/librsgt_read.c	/^rsgt_vrfy_chkTreeHash(gtfile gf, FILE *sigfp, FILE *nsigfp,$/;"	f	file:
rsgt_vrfy_nextRec	runtime/librsgt_read.c	/^rsgt_vrfy_nextRec(block_sig_t *bs, gtfile gf, FILE *sigfp, FILE *nsigfp,$/;"	f
rsgtfileConstruct	runtime/librsgt.c	/^rsgtfileConstruct(gtctx ctx)$/;"	f	file:
rsgtfileDestruct	runtime/librsgt.c	/^rsgtfileDestruct(gtfile gf)$/;"	f
rsgtimprintDel	runtime/librsgt.c	/^rsgtimprintDel(imprint_t *imp)$/;"	f
rsgtsetErrFunc	runtime/librsgt.c	/^rsgtsetErrFunc(gtctx ctx, void (*func)(void*, uchar *), void *usrptr)$/;"	f
rsgtstatefile	runtime/librsgt.h	/^struct rsgtstatefile {$/;"	s
rsgtutil_usage	tools/rsgtutil.c	/^rsgtutil_usage(void)$/;"	f
rsksiCtxDel	runtime/librsksi.c	/^rsksiCtxDel(rsksictx ctx)$/;"	f
rsksiCtxNew	runtime/librsksi.c	/^rsksiCtxNew(void)$/;"	f
rsksiCtxOpenFile	runtime/librsksi.c	/^rsksiCtxOpenFile(rsksictx ctx, unsigned char *logfn)$/;"	f
rsksiExit	runtime/librsksi.c	/^rsksiExit(void)$/;"	f
rsksiImprintFromKSI_DataHash	runtime/librsksi.c	/^rsksiImprintFromKSI_DataHash(ksifile ksi, KSI_DataHash *hash)$/;"	f
rsksiInit	runtime/librsksi.c	/^rsksiInit(char *usragent)$/;"	f
rsksiSetAggregator	runtime/librsksi.c	/^rsksiSetAggregator(rsksictx ctx, char *uri, char *loginid, char *key)$/;"	f
rsksiSetBlockSizeLimit	runtime/librsksi.h	/^rsksiSetBlockSizeLimit(rsksictx ctx, uint64_t limit)$/;"	f
rsksiSetHashFunction	runtime/librsksi.c	/^rsksiSetHashFunction(rsksictx ctx, char *algName)$/;"	f
rsksiSetKeepRecordHashes	runtime/librsksi.h	/^rsksiSetKeepRecordHashes(rsksictx ctx, int val)$/;"	f
rsksiSetKeepTreeHashes	runtime/librsksi.h	/^rsksiSetKeepTreeHashes(rsksictx ctx, int val)$/;"	f
rsksi_ConvertSigFile	runtime/librsksi_read.c	/^int rsksi_ConvertSigFile(char* name, FILE *oldsigfp, FILE *newsigfp, int verbose)$/;"	f
rsksi_chkFileHdr	runtime/librsksi_read.c	/^rsksi_chkFileHdr(FILE *fp, char *expect)$/;"	f
rsksi_errctxExit	runtime/librsksi_read.c	/^rsksi_errctxExit(ksierrctx_t *ectx)$/;"	f
rsksi_errctxFrstRecInBlk	runtime/librsksi_read.c	/^rsksi_errctxFrstRecInBlk(ksierrctx_t *ectx, char *rec)$/;"	f
rsksi_errctxInit	runtime/librsksi_read.c	/^rsksi_errctxInit(ksierrctx_t *ectx)$/;"	f
rsksi_errctxSetErrRec	runtime/librsksi_read.c	/^rsksi_errctxSetErrRec(ksierrctx_t *ectx, char *rec)$/;"	f
rsksi_extendSig	runtime/librsksi_read.c	/^rsksi_extendSig(KSI_Signature *sig, ksifile ksi, tlvrecord_t *rec, ksierrctx_t *ectx)$/;"	f	file:
rsksi_extend_puburl	runtime/librsksi_read.c	/^char *rsksi_extend_puburl = ""; \/* old default "http:\/\/verifier.guardtime.net\/gt-extendingservice";*\/$/;"	v
rsksi_getBlockParams	runtime/librsksi_read.c	/^rsksi_getBlockParams(FILE *fp, uint8_t bRewind, block_sig_t **bs, block_hdr_t **bh,$/;"	f
rsksi_objfree	runtime/librsksi_read.c	/^rsksi_objfree(uint16_t tlvtype, void *obj)$/;"	f
rsksi_printBLOCK_HDR	runtime/librsksi_read.c	/^rsksi_printBLOCK_HDR(FILE *fp, block_hdr_t *bh, uint8_t verbose)$/;"	f
rsksi_printBLOCK_SIG	runtime/librsksi_read.c	/^rsksi_printBLOCK_SIG(FILE *fp, block_sig_t *bs, uint8_t verbose)$/;"	f
rsksi_printIMPRINT	runtime/librsksi_read.c	/^rsksi_printIMPRINT(FILE *fp, char *name, imprint_t *imp, uint8_t verbose)$/;"	f	file:
rsksi_printINT_HASH	runtime/librsksi_read.c	/^rsksi_printINT_HASH(FILE *fp, imprint_t *imp, uint8_t verbose)$/;"	f	file:
rsksi_printREC_HASH	runtime/librsksi_read.c	/^rsksi_printREC_HASH(FILE *fp, imprint_t *imp, uint8_t verbose)$/;"	f	file:
rsksi_read_debug	runtime/librsksi_read.c	/^static int rsksi_read_debug = 0;$/;"	v	file:
rsksi_read_puburl	runtime/librsksi_read.c	/^char *rsksi_read_puburl = ""; \/* old default http:\/\/verify.guardtime.com\/gt-controlpublications.bin";*\/$/;"	v
rsksi_read_showVerified	runtime/librsksi_read.c	/^uint8_t rsksi_read_showVerified = 0;$/;"	v
rsksi_set_debug	runtime/librsksi_read.c	/^void rsksi_set_debug(int iDebug)$/;"	f
rsksi_tlv16Write	runtime/librsksi_read.c	/^rsksi_tlv16Write(FILE *newsigfp, int flags, int tlvtype, uint16_t len)$/;"	f	file:
rsksi_tlv8Write	runtime/librsksi_read.c	/^rsksi_tlv8Write(FILE *newsigfp, int flags, int tlvtype, int len)$/;"	f	file:
rsksi_tlvDecodeBLOCK_HDR	runtime/librsksi_read.c	/^rsksi_tlvDecodeBLOCK_HDR(tlvrecord_t *rec, block_hdr_t **blockhdr)$/;"	f	file:
rsksi_tlvDecodeBLOCK_IV	runtime/librsksi_read.c	/^rsksi_tlvDecodeBLOCK_IV(tlvrecord_t *rec, uint16_t *strtidx, uint8_t **iv)$/;"	f	file:
rsksi_tlvDecodeBLOCK_SIG	runtime/librsksi_read.c	/^rsksi_tlvDecodeBLOCK_SIG(tlvrecord_t *rec, block_sig_t **blocksig)$/;"	f	file:
rsksi_tlvDecodeHASH_ALGO	runtime/librsksi_read.c	/^rsksi_tlvDecodeHASH_ALGO(tlvrecord_t *rec, uint16_t *strtidx, uint8_t *hashAlg)$/;"	f	file:
rsksi_tlvDecodeIMPRINT	runtime/librsksi_read.c	/^rsksi_tlvDecodeIMPRINT(tlvrecord_t *rec, imprint_t **imprint)$/;"	f	file:
rsksi_tlvDecodeLAST_HASH	runtime/librsksi_read.c	/^rsksi_tlvDecodeLAST_HASH(tlvrecord_t *rec, uint16_t *strtidx, imprint_t *imp)$/;"	f	file:
rsksi_tlvDecodeREC_COUNT	runtime/librsksi_read.c	/^rsksi_tlvDecodeREC_COUNT(tlvrecord_t *rec, uint16_t *strtidx, uint64_t *cnt)$/;"	f	file:
rsksi_tlvDecodeSIG	runtime/librsksi_read.c	/^rsksi_tlvDecodeSIG(tlvrecord_t *rec, uint16_t *strtidx, block_sig_t *bs)$/;"	f	file:
rsksi_tlvDecodeSUBREC	runtime/librsksi_read.c	/^rsksi_tlvDecodeSUBREC(tlvrecord_t *rec, uint16_t *stridx, tlvrecord_t *newrec)$/;"	f	file:
rsksi_tlvGetInt64OctetSize	runtime/librsksi_read.c	/^static inline uint8_t rsksi_tlvGetInt64OctetSize(uint64_t val)$/;"	f	file:
rsksi_tlvRecDecode	runtime/librsksi_read.c	/^rsksi_tlvRecDecode(tlvrecord_t *rec, void *obj)$/;"	f	file:
rsksi_tlvRecRead	runtime/librsksi_read.c	/^rsksi_tlvRecRead(FILE *fp, tlvrecord_t *rec)$/;"	f	file:
rsksi_tlvfileAddInt64	runtime/librsksi_read.c	/^static inline int rsksi_tlvfileAddInt64(FILE *newsigfp, uint64_t val)$/;"	f	file:
rsksi_tlvfileAddOctet	runtime/librsksi_read.c	/^static inline int rsksi_tlvfileAddOctet(FILE *newsigfp, int8_t octet)$/;"	f	file:
rsksi_tlvfileAddOctetString	runtime/librsksi_read.c	/^static inline int rsksi_tlvfileAddOctetString(FILE *newsigfp, uint8_t *octet, int size)$/;"	f	file:
rsksi_tlvprint	runtime/librsksi_read.c	/^rsksi_tlvprint(FILE *fp, uint16_t tlvtype, void *obj, uint8_t verbose)$/;"	f
rsksi_tlvrd	runtime/librsksi_read.c	/^rsksi_tlvrd(FILE *fp, tlvrecord_t *rec, void *obj)$/;"	f
rsksi_tlvrdHeader	runtime/librsksi_read.c	/^rsksi_tlvrdHeader(FILE *fp, uchar *hdr)$/;"	f
rsksi_tlvrdRecHash	runtime/librsksi_read.c	/^rsksi_tlvrdRecHash(FILE *fp, FILE *outfp, imprint_t **imp)$/;"	f	file:
rsksi_tlvrdTreeHash	runtime/librsksi_read.c	/^rsksi_tlvrdTreeHash(FILE *fp, FILE *outfp, imprint_t **imp)$/;"	f	file:
rsksi_tlvrdVrfyBlockSig	runtime/librsksi_read.c	/^rsksi_tlvrdVrfyBlockSig(FILE *fp, block_sig_t **bs, tlvrecord_t *rec)$/;"	f	file:
rsksi_tlvwrite	runtime/librsksi_read.c	/^rsksi_tlvwrite(FILE *fp, tlvrecord_t *rec)$/;"	f	file:
rsksi_userid	runtime/librsksi_read.c	/^char *rsksi_userid = "";$/;"	v
rsksi_userkey	runtime/librsksi_read.c	/^char *rsksi_userkey = "";$/;"	v
rsksi_vrfyBlkInit	runtime/librsksi_read.c	/^rsksi_vrfyBlkInit(ksifile ksi, block_hdr_t *bh, uint8_t bHasRecHashes, uint8_t bHasIntermedHashes)$/;"	f
rsksi_vrfyConstruct_gf	runtime/librsksi_read.c	/^rsksi_vrfyConstruct_gf(void)$/;"	f
rsksi_vrfy_chkRecHash	runtime/librsksi_read.c	/^rsksi_vrfy_chkRecHash(ksifile ksi, FILE *sigfp, FILE *nsigfp, $/;"	f	file:
rsksi_vrfy_chkTreeHash	runtime/librsksi_read.c	/^rsksi_vrfy_chkTreeHash(ksifile ksi, FILE *sigfp, FILE *nsigfp,$/;"	f	file:
rsksi_vrfy_nextRec	runtime/librsksi_read.c	/^rsksi_vrfy_nextRec(ksifile ksi, FILE *sigfp, FILE *nsigfp,$/;"	f
rsksictx	runtime/librsksi.h	/^typedef struct rsksictx_s *rsksictx;$/;"	t	typeref:struct:rsksictx_s
rsksictx_s	runtime/librsksi.h	/^struct rsksictx_s {$/;"	s
rsksifileConstruct	runtime/librsksi.c	/^rsksifileConstruct(rsksictx ctx)$/;"	f	file:
rsksifileDestruct	runtime/librsksi.c	/^rsksifileDestruct(ksifile ksi)$/;"	f
rsksiimprintDel	runtime/librsksi.c	/^rsksiimprintDel(imprint_t *imp)$/;"	f
rsksisetErrFunc	runtime/librsksi.c	/^rsksisetErrFunc(rsksictx ctx, void (*func)(void*, uchar *), void *usrptr)$/;"	f
rsksistatefile	runtime/librsksi.h	/^struct rsksistatefile {$/;"	s
rspblk	runtime/ruleset.c	/^static struct cnfparamblk rspblk =$/;"	v	typeref:struct:cnfparamblk	file:
rspdescr	runtime/ruleset.c	/^static struct cnfparamdescr rspdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
rsrtExit	runtime/rsyslog.c	/^rsrtExit(void)$/;"	f
rsrtInit	runtime/rsyslog.c	/^rsrtInit(char **ppErrObj, obj_if_t *pObjIF)$/;"	f
rsrtIsInit	runtime/rsyslog.c	/^int rsrtIsInit(void)$/;"	f
rsrtSetErrLogger	runtime/rsyslog.c	/^rsrtSetErrLogger(void (*errLogger)(const int, const int, const uchar*))$/;"	f
rsyslogdDebugSwitch	tools/rsyslogd.c	/^rsyslogdDebugSwitch()$/;"	f
rsyslogdDoDie	tools/rsyslogd.c	/^rsyslogdDoDie(int sig)$/;"	f
rsyslogdPid	tests/nettester.c	/^static pid_t rsyslogdPid = 0;	\/* pid of rsyslog instance being tested *\/$/;"	v	file:
rsyslogd_InitGlobalClasses	tools/rsyslogd.c	/^rsyslogd_InitGlobalClasses(void)$/;"	f
rsyslogd_InitStdRatelimiters	tools/rsyslogd.c	/^rsyslogd_InitStdRatelimiters(void)$/;"	f
rsyslogd_destructAllActions	tools/rsyslogd.c	/^rsyslogd_destructAllActions(void)$/;"	f
rsyslogd_precmd	platform/freebsd/rsyslogd	/^rsyslogd_precmd()$/;"	f
rsyslogd_restart	platform/slackware/rc.rsyslogd	/^rsyslogd_restart() {$/;"	f
rsyslogd_start	platform/slackware/rc.rsyslogd	/^rsyslogd_start() {$/;"	f
rsyslogd_stop	platform/slackware/rc.rsyslogd	/^rsyslogd_stop() {$/;"	f
rsyslogd_submitErrMsg	tools/rsyslogd.c	/^rsyslogd_submitErrMsg(const int severity, const int iErr, const uchar *msg)$/;"	f
rsyslogd_usage	tools/rsyslogd.c	/^rsyslogd_usage(void)$/;"	f
rtryCall	runtime/nsd_gtls.h	/^	gtlsRtryCall_t rtryCall;\/**< what must we retry? *\/$/;"	m	struct:nsd_gtls_s
rule_t	runtime/typedefs.h	/^typedef struct rule_s rule_t;$/;"	t	typeref:struct:rule_s
rulebase	plugins/mmnormalize/mmnormalize.c	/^	uchar 	*rulebase;	\/**< name of rulebase to use *\/$/;"	m	struct:_instanceData	file:
rulebase	plugins/mmnormalize/mmnormalize.c	/^	uchar *rulebase;		\/**< name of normalization rulebase to use *\/$/;"	m	struct:configSettings_s	file:
ruleset	contrib/imczmq/imczmq.c	/^	ruleset_t *ruleset;$/;"	m	struct:_pollerData_t	file:
ruleset	contrib/imzmq3/imzmq3.c	/^    ruleset_t*  ruleset;$/;"	m	struct:_poller_data	file:
ruleset	grammar/rainerscript.h	/^			ruleset_t *ruleset;	\/* non-NULL if the ruleset has a queue assigned *\/$/;"	m	struct:cnfstmt::__anon4::__anon8
ruleset	plugins/omruleset/omruleset.c	/^DEFobjCurrIf(ruleset);$/;"	v
ruleset	runtime/ruleset.h	/^	INTERFACEObjDebugPrint(ruleset);$/;"	v
ruleset	runtime/ruleset.h	/^PROTOTYPEObj(ruleset);$/;"	v
rulesetAddParser	runtime/ruleset.c	/^rulesetAddParser(void __attribute__((unused)) *pVal, uchar *pName)$/;"	f	file:
rulesetCURR_IF_VERSION	runtime/ruleset.h	69;"	d
rulesetConstructFinalize	runtime/ruleset.c	/^rulesetConstructFinalize(rsconf_t *conf, ruleset_t *pThis)$/;"	f	file:
rulesetCreateQueue	runtime/ruleset.c	/^rulesetCreateQueue(void __attribute__((unused)) *pVal, int *pNewVal)$/;"	f	file:
rulesetDestructForLinkedList	runtime/ruleset.c	/^rulesetDestructForLinkedList(void *pData)$/;"	f
rulesetGetName	runtime/ruleset.h	/^rulesetGetName(ruleset_t *pRuleset)$/;"	f
rulesetGetRuleset	runtime/ruleset.c	/^rulesetGetRuleset(rsconf_t *conf, ruleset_t **ppRuleset, uchar *pszName)$/;"	f
rulesetHasQueue	runtime/ruleset.h	/^rulesetHasQueue(ruleset_t *pRuleset)$/;"	f
rulesetKeyDestruct	runtime/ruleset.c	/^rulesetKeyDestruct(void __attribute__((unused)) *pData)$/;"	f
rulesetOptimize	runtime/ruleset.c	/^rulesetOptimize(ruleset_t *pRuleset)$/;"	f	file:
rulesetOptimizeAll	runtime/ruleset.c	/^rulesetOptimizeAll(rsconf_t *conf)$/;"	f
rulesetProcessCnf	runtime/ruleset.c	/^rulesetProcessCnf(struct cnfobj *o)$/;"	f
rulesetSetCurrRulesetPtr	runtime/ruleset.h	/^rulesetSetCurrRulesetPtr(ruleset_t *pRuleset) {$/;"	f
rulesetSetName	runtime/ruleset.c	/^static rsRetVal rulesetSetName(ruleset_t *pThis, uchar *pszName)$/;"	f	file:
ruleset_s	runtime/ruleset.h	/^struct ruleset_s {$/;"	s
ruleset_t	runtime/typedefs.h	/^typedef struct ruleset_s ruleset_t;$/;"	t	typeref:struct:ruleset_s
rulesets	runtime/rsconf.h	/^	rulesets_t rulesets;$/;"	m	struct:rsconf_s
rulesets_s	runtime/rsconf.h	/^struct rulesets_s {$/;"	s
rulesets_t	runtime/typedefs.h	/^typedef struct rulesets_s rulesets_t;$/;"	t	typeref:struct:rulesets_s
run	plugins/imptcp/imptcp.c	/^	pthread_cond_t run;$/;"	m	struct:wrkrInfo_s	file:
run	runtime/tcpsrv.c	/^	pthread_cond_t run;$/;"	m	struct:wrkrInfo_s	file:
runGenerators	tests/tcpflood.c	/^runGenerators()$/;"	f	file:
runInput	runtime/modules.h	/^			rsRetVal (*runInput)(thrdInfo_t*);	\/* function to gather input and submit to queue *\/$/;"	m	struct:modInfo_s::__anon29::__anon30
runInputModules	runtime/rsconf.c	/^runInputModules(void)$/;"	f	file:
runModConf	contrib/imczmq/imczmq.c	/^	runModConf = pModConf;$/;"	v
runModConf	contrib/imczmq/imczmq.c	/^static modConfData_t *runModConf = NULL;$/;"	v	file:
runModConf	contrib/imkmsg/imkmsg.c	/^	runModConf = pModConf;$/;"	v
runModConf	contrib/imkmsg/imkmsg.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	contrib/imzmq3/imzmq3.c	/^    runModConf = pModConf;$/;"	v
runModConf	contrib/imzmq3/imzmq3.c	/^static modConfData_t*       runModConf      = NULL;$/;"	v	file:
runModConf	contrib/mmcount/mmcount.c	/^	runModConf = pModConf;$/;"	v
runModConf	contrib/mmcount/mmcount.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	contrib/mmgrok/mmgrok.c	/^	runModConf = pModConf;$/;"	v
runModConf	contrib/mmgrok/mmgrok.c	/^static  modConfData_t   *runModConf   = NULL;$/;"	v	file:
runModConf	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	runModConf = pModConf;$/;"	v
runModConf	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	contrib/mmsequence/mmsequence.c	/^	runModConf = pModConf;$/;"	v
runModConf	contrib/mmsequence/mmsequence.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/imfile/imfile.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/imfile/imfile.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	plugins/imklog/imklog.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/imklog/imklog.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	plugins/impstats/impstats.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/impstats/impstats.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	plugins/imptcp/imptcp.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	plugins/imrelp/imrelp.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/imrelp/imrelp.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	plugins/imtcp/imtcp.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/imtcp/imtcp.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	plugins/imudp/imudp.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/imudp/imudp.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	plugins/imuxsock/imuxsock.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/imuxsock/imuxsock.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current load process *\/$/;"	v	file:
runModConf	plugins/mmanon/mmanon.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/mmanon/mmanon.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/mmfields/mmfields.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/mmfields/mmfields.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/mmjsonparse/mmjsonparse.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/mmjsonparse/mmjsonparse.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/mmnormalize/mmnormalize.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/mmnormalize/mmnormalize.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/mmpstrucdata/mmpstrucdata.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/mmpstrucdata/mmpstrucdata.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/mmutf8fix/mmutf8fix.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/mmutf8fix/mmutf8fix.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/omjournal/omjournal.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/omjournal/omjournal.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/omlibdbi/omlibdbi.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/omlibdbi/omlibdbi.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/omudpspoof/omudpspoof.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/omudpspoof/omudpspoof.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	plugins/omuxsock/omuxsock.c	/^	runModConf = pModConf;$/;"	v
runModConf	plugins/omuxsock/omuxsock.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	tools/omfile.c	/^	runModConf = pModConf;$/;"	v
runModConf	tools/omfile.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	tools/omfwd.c	/^	runModConf = pModConf;$/;"	v
runModConf	tools/omfwd.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runModConf	tools/ompipe.c	/^	runModConf = pModConf;$/;"	v
runModConf	tools/ompipe.c	/^static modConfData_t *runModConf = NULL;\/* modConf ptr to use for the current exec process *\/$/;"	v	file:
runMultithreaded	tests/tcpflood.c	/^static int runMultithreaded = 0; \/* run tests in multithreaded mode *\/$/;"	v	file:
runTests	tests/tcpflood.c	/^runTests(void)$/;"	f	file:
runningThreads	tests/tcpflood.c	/^int runningThreads;		\/* number of threads currently running *\/$/;"	v
runstats	tests/tcpflood.c	/^struct runstats {$/;"	s	file:
rwlock	runtime/dnscache.c	/^	pthread_rwlock_t rwlock;$/;"	m	struct:dnscache_s	file:
rwlock	runtime/lookup.h	/^	pthread_rwlock_t rwlock;	\/* protect us in case of dynamic reloads *\/$/;"	m	struct:lookup_s
s6_addr32	runtime/net.c	67;"	d	file:
s6_addr32	runtime/net.h	44;"	d
sFEATUREAutomaticPRIParsing	runtime/syslogd-types.h	/^	sFEATUREAutomaticPRIParsing = 4		\/* for parser modules *\/$/;"	e	enum:_syslogFeature
sFEATUREAutomaticSanitazion	runtime/syslogd-types.h	/^	sFEATUREAutomaticSanitazion = 3,	\/* for parser modules *\/$/;"	e	enum:_syslogFeature
sFEATURENonCancelInputTermination	runtime/syslogd-types.h	/^	sFEATURENonCancelInputTermination = 2,	\/* for input modules *\/$/;"	e	enum:_syslogFeature
sFEATURERepeatedMsgReduction	runtime/syslogd-types.h	/^	sFEATURERepeatedMsgReduction = 1,	\/* for output modules *\/$/;"	e	enum:_syslogFeature
sIOBufSize	runtime/stream.h	/^	size_t sIOBufSize;\/* size of IO buffer *\/$/;"	m	struct:strm_s
sType	runtime/stream.h	/^	strmType_t sType;$/;"	m	struct:strm_s
s_act	grammar/grammar.y	/^s_act:	  BEGIN_ACTION nvlst ENDOBJ	{ $$ = cnfstmtNewAct($2); }$/;"	l
s_call	grammar/rainerscript.h	/^		} s_call;$/;"	m	union:cnfstmt::__anon4	typeref:struct:cnfstmt::__anon4::__anon8
s_context	contrib/imzmq3/imzmq3.c	/^static zctx_t*              s_context       = NULL;$/;"	v	file:
s_context	contrib/omzmq3/omzmq3.c	/^static zctx_t* s_context       = NULL;$/;"	v	file:
s_dynaFileCacheEntry	tools/omfile.c	/^struct s_dynaFileCacheEntry {$/;"	s	file:
s_dynaTopicCacheEntry	plugins/omkafka/omkafka.c	/^struct s_dynaTopicCacheEntry {$/;"	s	file:
s_foreach	grammar/rainerscript.h	/^		} s_foreach;$/;"	m	union:cnfstmt::__anon4	typeref:struct:cnfstmt::__anon4::__anon11
s_if	grammar/rainerscript.h	/^		} s_if;$/;"	m	union:cnfstmt::__anon4	typeref:struct:cnfstmt::__anon4::__anon5
s_namep	contrib/imczmq/imczmq.c	/^static prop_t *s_namep = NULL;$/;"	v	file:
s_namep	contrib/imzmq3/imzmq3.c	/^static prop_t*              s_namep         = NULL;$/;"	v	file:
s_prifilt	grammar/rainerscript.h	/^		} s_prifilt;$/;"	m	union:cnfstmt::__anon4	typeref:struct:cnfstmt::__anon4::__anon9
s_propfilt	grammar/rainerscript.h	/^		} s_propfilt;$/;"	m	union:cnfstmt::__anon4	typeref:struct:cnfstmt::__anon4::__anon10
s_set	grammar/rainerscript.h	/^		} s_set;$/;"	m	union:cnfstmt::__anon4	typeref:struct:cnfstmt::__anon4::__anon6
s_unset	grammar/rainerscript.h	/^		} s_unset;$/;"	m	union:cnfstmt::__anon4	typeref:struct:cnfstmt::__anon4::__anon7
s_workerThreads	contrib/omzmq3/omzmq3.c	/^	s_workerThreads = -1;$/;"	v
s_workerThreads	contrib/omzmq3/omzmq3.c	/^static int     s_workerThreads = -1;$/;"	v	file:
s_zloop	contrib/imzmq3/imzmq3.c	/^static zloop_t*             s_zloop         = NULL;$/;"	v	file:
sa	runtime/sd-daemon.c	/^        struct sockaddr sa;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr	file:
sanitizeValue	plugins/imjournal/imjournal.c	/^sanitizeValue(const char *in, size_t len, char **out)$/;"	f	file:
sbool	runtime/typedefs.h	/^typedef char sbool;		\/* (small bool) I intentionally use char, to keep it slim so that many fit into the CPU cache! *\/$/;"	t
script	grammar/grammar.y	/^script:	  stmt				{ $$ = $1; }$/;"	l
script	grammar/rainerscript.h	/^	struct cnfstmt *script;$/;"	m	struct:cnfobj	typeref:struct:cnfobj::cnfstmt
scriptAddStmt	grammar/rainerscript.c	/^scriptAddStmt(struct cnfstmt *root, struct cnfstmt *s)$/;"	f
scriptExec	runtime/ruleset.c	/^scriptExec(struct cnfstmt *root, msg_t *pMsg, wti_t *pWti)$/;"	f	file:
scriptIterateAllActions	runtime/ruleset.c	/^scriptIterateAllActions(struct cnfstmt *root, rsRetVal (*pFunc)(void*, void*), void* pParam)$/;"	f	file:
sd_booted	runtime/sd-daemon.c	/^_sd_export_ int sd_booted(void) {$/;"	f
sd_fds	plugins/imuxsock/imuxsock.c	/^static int sd_fds = 0;			\/* number of systemd activated sockets *\/$/;"	v	file:
sd_is_fifo	runtime/sd-daemon.c	/^_sd_export_ int sd_is_fifo(int fd, const char *path) {$/;"	f
sd_is_mq	runtime/sd-daemon.c	/^_sd_export_ int sd_is_mq(int fd, const char *path) {$/;"	f
sd_is_socket	runtime/sd-daemon.c	/^_sd_export_ int sd_is_socket(int fd, int family, int type, int listening) {$/;"	f
sd_is_socket_inet	runtime/sd-daemon.c	/^_sd_export_ int sd_is_socket_inet(int fd, int family, int type, int listening, uint16_t port) {$/;"	f
sd_is_socket_internal	runtime/sd-daemon.c	/^static int sd_is_socket_internal(int fd, int type, int listening) {$/;"	f	file:
sd_is_socket_unix	runtime/sd-daemon.c	/^_sd_export_ int sd_is_socket_unix(int fd, int type, int listening, const char *path, size_t length) {$/;"	f
sd_is_special	runtime/sd-daemon.c	/^_sd_export_ int sd_is_special(int fd, const char *path) {$/;"	f
sd_listen_fds	runtime/sd-daemon.c	/^_sd_export_ int sd_listen_fds(int unset_environment) {$/;"	f
sd_notify	runtime/sd-daemon.c	/^_sd_export_ int sd_notify(int unset_environment, const char *state) {$/;"	f
sd_notifyf	runtime/sd-daemon.c	/^_sd_export_ int sd_notifyf(int unset_environment, const char *format, ...) {$/;"	f
sdid	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	uchar *sdid;	\/* SD-ID to be used to persist the hmac *\/$/;"	m	struct:_instanceData	file:
sdidLen	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^	int16_t sdidLen;$/;"	m	struct:_instanceData	file:
searchIndex	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *searchIndex;$/;"	m	struct:_instanceData	file:
searchType	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *searchType;$/;"	m	struct:_instanceData	file:
secfrac	runtime/syslogd-types.h	/^	int secfrac;	\/* fractional seconds (must be 32 bit!) *\/$/;"	m	struct:syslogTime
secfracPrecision	runtime/syslogd-types.h	/^	intTiny secfracPrecision;$/;"	m	struct:syslogTime
second	runtime/syslogd-types.h	/^	intTiny second;$/;"	m	struct:syslogTime
seed	contrib/mmsequence/mmsequence.c	/^	unsigned int seed;$/;"	m	struct:_instanceData	file:
seedIV	runtime/libgcry.c	/^seedIV(gcryfile gf, uchar **iv)$/;"	f
seedIV	runtime/librsgt.c	/^seedIV(gtfile gf)$/;"	f
seedIVKSI	runtime/librsksi.c	/^seedIVKSI(ksifile ksi)$/;"	f
seedRandomNumber	runtime/srutils.c	/^void seedRandomNumber() {$/;"	f
select	plugins/external/skeletons/python/plugin.py	/^import select$/;"	i
select	plugins/external/solr/rsyslog_solr.py	/^import select$/;"	i
select	tools/logctl.c	/^	bson *select;	$/;"	m	struct:select_doc	file:
select_doc	tools/logctl.c	/^struct select_doc$/;"	s	file:
selectorAddList	tests/runtime-dummy.c	/^void selectorAddList(void) {};$/;"	f
selectorConstruct	tests/runtime-dummy.c	/^void selectorConstruct(void) {};$/;"	f
selectorDestruct	tests/runtime-dummy.c	/^void selectorDestruct(void) {};$/;"	f
sem	tools/syncdemo.c	/^static sem_t sem;$/;"	v	file:
semaphore	tools/syncdemo.c	/^typedef enum { part, none, atomic, cas, spinlock, mutex, semaphore } syncType_t;$/;"	e	enum:__anon79	file:
sendCmd	tests/diagtalker.c	/^sendCmd(int fd, char *buf, int len)$/;"	f	file:
sendError	contrib/omczmq/omczmq.c	/^	bool sendError;			\/* set to true of a socket send timed out *\/$/;"	m	struct:_instanceData	file:
sendFunc	runtime/tcpclt.h	/^	rsRetVal (*sendFunc)(void*, char*, size_t);$/;"	m	struct:tcpclt_s
sendMessages	tests/tcpflood.c	/^int sendMessages(struct instdata *inst)$/;"	f
sendMsg	plugins/omuxsock/omuxsock.c	/^static rsRetVal sendMsg(instanceData *pData, char *msg, size_t len)$/;"	f	file:
sendResponse	plugins/imdiag/imdiag.c	/^sendResponse(tcps_sess_t *pSess, char *fmt, ...)$/;"	f	file:
sendSMTP	plugins/ommail/ommail.c	/^sendSMTP(wrkrInstanceData_t *pWrkrData, uchar *body, uchar *subject)$/;"	f	file:
sendTLS	tests/tcpflood.c	/^sendTLS(int i, char *buf, int lenBuf)$/;"	f	file:
sendTLS	tests/tcpflood.c	/^static int sendTLS(int __attribute__((unused)) i, char __attribute__((unused)) *buf, int __attribute__((unused)) lenBuf) { return 0; }$/;"	f	file:
sendTimeout	contrib/omczmq/omczmq.c	/^	int sendTimeout;		\/* send timeout for socket (defaults to -1) *\/  $/;"	m	struct:_instanceData	file:
send_to_all	tools/rsyslogd.c	/^int send_to_all = 0;   \/* send message to all IPv4\/IPv6 addresses *\/$/;"	v
send_token	runtime/gss-misc.c	/^static int send_token(int s, gss_buffer_t tok)$/;"	f	file:
send_token	runtime/gss-misc.h	/^	int (*send_token)(int s, gss_buffer_t tok);$/;"	v
separator	plugins/mmfields/mmfields.c	/^	char separator;$/;"	m	struct:_instanceData	file:
serialize	tools/recover_qi.pl	/^sub serialize {$/;"	s
server	contrib/omhiredis/omhiredis.c	/^	uchar *server; \/* redis server address *\/$/;"	m	struct:_instanceData	file:
server	plugins/imsolaris/sun_cddl.c	/^server(	void __attribute__((unused)) *cookie,$/;"	f	file:
server	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *server;$/;"	m	struct:_instanceData	file:
server	plugins/ommongodb/ommongodb.c	/^	uchar *server;$/;"	m	struct:_instanceData	file:
serverCert	contrib/imczmq/imczmq.c	/^	zcert_t *serverCert;	\/* server curve certificate *\/$/;"	m	struct:lstn_s	file:
serverCert	contrib/omczmq/omczmq.c	/^	zcert_t *serverCert;	\/* server curve certificate *\/$/;"	m	struct:_instanceData	file:
serverCertPath	contrib/imczmq/imczmq.c	/^	char *serverCertPath;		\/* (optional) path to curve server cert *\/$/;"	m	struct:instanceConf_s	file:
serverCertPath	contrib/omczmq/omczmq.c	/^	char *serverCertPath;	\/* (optional) path to curve server cert *\/$/;"	m	struct:_instanceData	file:
serverConnect	plugins/ommail/ommail.c	/^serverConnect(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
serverDisconnect	plugins/ommail/ommail.c	/^serverDisconnect(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
serverish	contrib/imczmq/imczmq.c	/^	bool serverish;				\/* whether socket will be a server or client *\/$/;"	m	struct:instanceConf_s	file:
serverish	contrib/omczmq/omczmq.c	/^	bool serverish;			\/* whether socket will be a server (bind) or client *\/$/;"	m	struct:_instanceData	file:
sess	runtime/nsd_gtls.h	/^	gnutls_session_t sess;$/;"	m	struct:nsd_gtls_s
sessActivity	plugins/imptcp/imptcp.c	/^sessActivity(ptcpsess_t *pSess)$/;"	f	file:
sessArray	tests/tcpflood.c	/^static gnutls_session_t *sessArray;	\/* array of TLS sessions to use *\/$/;"	v	file:
setActionJustResumed	runtime/wti.h	/^setActionJustResumed(wti_t * const pWti, action_t * const pAction, int val)$/;"	f
setActionNbrResRtry	runtime/wti.h	/^setActionNbrResRtry(wti_t * const pWti, action_t * const pAction, const uint16_t val)$/;"	f
setActionQueType	action.c	/^static rsRetVal setActionQueType(void __attribute__((unused)) *pVal, uchar *pszType)$/;"	f	file:
setActionResumeInRow	runtime/wti.h	/^setActionResumeInRow(wti_t * const pWti, action_t * const pAction, uint16_t val)$/;"	f
setActionResumeInterval	runtime/rsconf.c	/^static rsRetVal setActionResumeInterval(void __attribute__((unused)) *pVal, int iNewVal)$/;"	f	file:
setActionState	runtime/wti.h	/^setActionState(wti_t * const pWti, action_t * const pAction, uint8_t newState)$/;"	f
setAllowRoot	runtime/net.c	/^setAllowRoot(struct AllowedSenders **ppAllowRoot, uchar *pszType)$/;"	f	file:
setBaseURL	plugins/omelasticsearch/omelasticsearch.c	/^setBaseURL(instanceData *pData, es_str_t **url)$/;"	f	file:
setCurlURL	plugins/omelasticsearch/omelasticsearch.c	/^setCurlURL(wrkrInstanceData_t *pWrkrData, instanceData *pData, uchar **tpls)$/;"	f	file:
setCurrRuleset	runtime/rsconf.c	/^setCurrRuleset(void __attribute__((unused)) *pVal, uchar *pszName)$/;"	f	file:
setDebugFile	runtime/glbl.c	/^setDebugFile(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
setDebugLevel	runtime/glbl.c	/^setDebugLevel(void __attribute__((unused)) *pVal, int level)$/;"	f	file:
setDefPFFamily	runtime/glbl.c	/^setDefPFFamily(int level)$/;"	f	file:
setDefaultRuleset	runtime/rsconf.c	/^setDefaultRuleset(void __attribute__((unused)) *pVal, uchar *pszName)$/;"	f	file:
setDefaults	contrib/imczmq/imczmq.c	/^static void setDefaults(instanceConf_t* iconf) {$/;"	f	file:
setDefaults	contrib/imzmq3/imzmq3.c	/^static void setDefaults(instanceConf_t* info) {$/;"	f	file:
setDisableDNS	runtime/glbl.c	/^setDisableDNS(int val)$/;"	f	file:
setDynaFileCacheSize	tools/omfile.c	/^rsRetVal setDynaFileCacheSize(void __attribute__((unused)) *pVal, int iNewVal)$/;"	f
setGSSMode	plugins/omgssapi/omgssapi.c	/^static rsRetVal setGSSMode(void __attribute__((unused)) *pVal, uchar *mode)$/;"	f	file:
setInstParamDefaults	contrib/mmcount/mmcount.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	contrib/mmgrok/mmgrok.c	/^static inline void setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	contrib/mmsequence/mmsequence.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	contrib/omczmq/omczmq.c	/^setInstParamDefaults(instanceData* pData) {$/;"	f	file:
setInstParamDefaults	contrib/omhiredis/omhiredis.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	contrib/omhttpfs/omhttpfs.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	contrib/omrabbitmq/omrabbitmq.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	contrib/omzmq3/omzmq3.c	/^setInstParamDefaults(instanceData* pData) {$/;"	f	file:
setInstParamDefaults	plugins/mmanon/mmanon.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/mmexternal/mmexternal.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/mmfields/mmfields.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/mmjsonparse/mmjsonparse.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/mmnormalize/mmnormalize.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/mmpstrucdata/mmpstrucdata.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/mmutf8fix/mmutf8fix.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/omelasticsearch/omelasticsearch.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/omkafka/omkafka.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/omlibdbi/omlibdbi.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/ommail/ommail.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/ommongodb/ommongodb.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/ommysql/ommysql.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/omprog/omprog.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/omrelp/omrelp.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/omsnmp/omsnmp.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	plugins/omudpspoof/omudpspoof.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	tools/omfile.c	/^setInstParamDefaults(instanceData *__restrict__ const pData)$/;"	f	file:
setInstParamDefaults	tools/omfwd.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	tools/ompipe.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setInstParamDefaults	tools/omusrmsg.c	/^setInstParamDefaults(instanceData *pData)$/;"	f	file:
setKey	tools/rscryutil.c	/^setKey()$/;"	f	file:
setLegacyDfltTpl	plugins/omudpspoof/omudpspoof.c	/^setLegacyDfltTpl(void __attribute__((unused)) *pVal, uchar* newVal)$/;"	f
setLegacyDfltTpl	plugins/omuxsock/omuxsock.c	/^setLegacyDfltTpl(void __attribute__((unused)) *pVal, uchar* newVal)$/;"	f
setLegacyDfltTpl	tools/omfile.c	/^setLegacyDfltTpl(void __attribute__((unused)) *pVal, uchar* newVal)$/;"	f
setLegacyDfltTpl	tools/omfwd.c	/^setLegacyDfltTpl(void __attribute__((unused)) *pVal, uchar* newVal)$/;"	f	file:
setLocalHostIPIF	runtime/glbl.c	/^setLocalHostIPIF(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
setLocalHostName	runtime/dnscache.c	/^setLocalHostName(dnscache_entry_t *etry)$/;"	f	file:
setMSGLen	runtime/msg.c	/^void setMSGLen(msg_t * const pM, int lenMsg)$/;"	f
setMainMsgQueType	runtime/rsconf.c	/^static rsRetVal setMainMsgQueType(void __attribute__((unused)) *pVal, uchar *pszType)$/;"	f	file:
setMaxFiles	runtime/rsconf.c	/^static rsRetVal setMaxFiles(void __attribute__((unused)) *pVal, int iFiles)$/;"	f	file:
setMaxLine	runtime/glbl.c	/^setMaxLine(const int64_t iNew)$/;"	f	file:
setModCnf	runtime/modules.h	/^	rsRetVal (*setModCnf)(struct nvlst *lst);$/;"	m	struct:modInfo_s
setModDir	runtime/rsconf.c	/^setModDir(void __attribute__((unused)) *pVal, uchar* pszNewVal)$/;"	f	file:
setName	runtime/statsobj.c	/^setName(statsobj_t *pThis, uchar *name)$/;"	f	file:
setOption_DisallowWarning	runtime/glbl.c	/^setOption_DisallowWarning(int val)$/;"	f	file:
setOrigin	runtime/statsobj.c	/^setOrigin(statsobj_t *pThis, uchar *origin)$/;"	f	file:
setParseHOSTNAMEandTAG	runtime/glbl.c	/^setParseHOSTNAMEandTAG(int val)$/;"	f	file:
setPermittedPeer	plugins/imdiag/imdiag.c	/^setPermittedPeer(void __attribute__((unused)) *pVal, uchar *pszID)$/;"	f	file:
setPermittedPeer	plugins/imtcp/imtcp.c	/^setPermittedPeer(void __attribute__((unused)) *pVal, uchar *pszID)$/;"	f	file:
setPermittedPeer	tools/omfwd.c	/^setPermittedPeer(void __attribute__((unused)) *pVal, uchar *pszID)$/;"	f	file:
setProtocolVersion	runtime/msg.c	/^void setProtocolVersion(msg_t * const pM, int iNewVersion)$/;"	f
setQPROP	action.c	480;"	d	file:
setQPROP	action.c	516;"	d	file:
setQPROP	tools/rsyslogd.c	613;"	d	file:
setQPROP	tools/rsyslogd.c	664;"	d	file:
setQPROPstr	action.c	485;"	d	file:
setQPROPstr	action.c	517;"	d	file:
setQPROPstr	tools/rsyslogd.c	617;"	d	file:
setQPROPstr	tools/rsyslogd.c	665;"	d	file:
setRuleBase	plugins/mmnormalize/mmnormalize.c	/^setRuleBase(void __attribute__((unused)) *pVal, uchar *pszName)$/;"	f	file:
setRuleset	plugins/omruleset/omruleset.c	/^setRuleset(void __attribute__((unused)) *pVal, uchar *pszName)$/;"	f	file:
setSchedParams	plugins/imudp/imudp.c	/^setSchedParams(modConfData_t *modConf)$/;"	f	file:
setUmask	runtime/rsconf.c	/^setUmask(int iUmask)$/;"	f	file:
setWorkDir	runtime/glbl.c	/^static rsRetVal setWorkDir(void __attribute__((unused)) *pVal, uchar *pNewVal)$/;"	f	file:
set_socketlist	platform/freebsd/rsyslogd	/^set_socketlist()$/;"	f
setsid	tools/rsyslogd.c	/^setsid(void)$/;"	f	file:
setupInstStatsCtrs	tools/omfile.c	/^setupInstStatsCtrs(instanceData *__restrict__ const pData)$/;"	f	file:
setupKafkaHandle	plugins/omkafka/omkafka.c	/^setupKafkaHandle(instanceData *const __restrict__ pData, int recreate)$/;"	f	file:
setupUDP	tests/tcpflood.c	/^setupUDP(void)$/;"	f	file:
setutent	tools/omusrmsg.c	162;"	d	file:
sev	plugins/omjournal/omjournal.c	/^	int sev;$/;"	v
sevCode	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	int sevCode;$/;"	v
severMap	plugins/mmsnmptrapd/mmsnmptrapd.c	/^	struct severMap_s *severMap;$/;"	m	struct:_instanceData	typeref:struct:_instanceData::severMap_s	file:
severMap_s	plugins/mmsnmptrapd/mmsnmptrapd.c	/^struct severMap_s {$/;"	s	file:
severity	contrib/mmcount/mmcount.c	/^	int severity[SEVERITY_COUNT];$/;"	m	struct:_instanceData	file:
severity	runtime/ratelimit.h	/^	intTiny severity; \/**< ratelimit only equal or lower severity levels (eq or higher values) *\/$/;"	m	struct:ratelimit_s
should_use_so_bsdcompat	runtime/net.c	/^should_use_so_bsdcompat(void)$/;"	f	file:
should_use_so_bsdcompat	runtime/net.h	/^	int (*should_use_so_bsdcompat)(void);$/;"	v
showSigblkParams	tools/rsgtutil.c	/^showSigblkParams(char *name)$/;"	f	file:
showSigblkParamsKSI	tools/rsgtutil.c	/^showSigblkParamsKSI(char *name)$/;"	f	file:
shutdownSrv	plugins/imptcp/imptcp.c	/^shutdownSrv(ptcpsrv_t *pSrv)$/;"	f	file:
sig	runtime/librsgt_common.h	/^	} sig;$/;"	m	struct:block_sig_s	typeref:struct:block_sig_s::__anon26
sigAct	plugins/imrelp/imrelp.c	/^	struct sigaction sigAct;$/;"	v	typeref:struct:sigaction
sigID	runtime/librsgt_common.h	/^	uint8_t sigID; \/* what type of *signature*? *\/$/;"	m	struct:block_sig_s
sigSet	plugins/imrelp/imrelp.c	/^	sigemptyset(&sigSet);$/;"	v
sigSet	plugins/imrelp/imrelp.c	/^	sigfillset(&sigSet);$/;"	v
sigSet	plugins/imrelp/imrelp.c	/^	sigset_t sigSet;$/;"	v
sigTypeName	runtime/librsgt_common.h	/^sigTypeName(uint8_t sigID)$/;"	f
sigblkAddRecord	runtime/librsgt.c	/^sigblkAddRecord(gtfile gf, const uchar *rec, const size_t len)$/;"	f
sigblkAddRecordKSI	runtime/librsksi.c	/^sigblkAddRecordKSI(ksifile ksi, const uchar *rec, const size_t len)$/;"	f
sigblkFinish	runtime/librsgt.c	/^sigblkFinish(gtfile gf)$/;"	f
sigblkFinishKSI	runtime/librsksi.c	/^sigblkFinishKSI(ksifile ksi)$/;"	f
sigblkInit	runtime/librsgt.c	/^sigblkInit(gtfile gf)$/;"	f
sigblkInitKSI	runtime/librsksi.c	/^sigblkInitKSI(ksifile ksi)$/;"	f
sigfilename	runtime/librsgt.h	/^	unsigned char *sigfilename;$/;"	m	struct:gtfile_s
sigfilename	runtime/librsksi.h	/^	unsigned char *sigfilename;$/;"	m	struct:ksifile_s
signIt	runtime/librsksi.c	/^signIt(ksifile ksi, KSI_DataHash *hash)$/;"	f	file:
sigprov	tools/omfile.c	/^	sigprov_if_t sigprov;	\/* ptr to signature provider interface *\/$/;"	m	struct:_instanceData	file:
sigprovCURR_IF_VERSION	runtime/sigprov.h	36;"	d
sigprovData	tools/omfile.c	/^	void	*sigprovData;	\/* opaque data ptr for provider use *\/$/;"	m	struct:_instanceData	file:
sigprovFileData	tools/omfile.c	/^	void	*sigprovFileData;	\/* opaque data ptr for provider use *\/$/;"	m	struct:s_dynaFileCacheEntry	file:
sigprovFileData	tools/omfile.c	/^	void 	*sigprovFileData;\/* opaque data ptr for file instance *\/$/;"	m	struct:_instanceData	file:
sigprovName	tools/omfile.c	/^	uchar 	*sigprovName;	\/* signature provider *\/$/;"	m	struct:_instanceData	file:
sigprovNameFull	tools/omfile.c	/^	uchar 	*sigprovNameFull;\/* full internal signature provider name *\/$/;"	m	struct:_instanceData	file:
sigprovPrepare	tools/omfile.c	/^sigprovPrepare(instanceData *__restrict__ const pData, uchar *__restrict__ const fn)$/;"	f	file:
sigsegvHdlr	runtime/debug.c	/^sigsegvHdlr(int signum)$/;"	f
sigusr2Hdlr	runtime/debug.c	/^static void sigusr2Hdlr(int __attribute__((unused)) signum)$/;"	f	file:
singleTest	tools/syncdemo.c	/^singleTest(void)$/;"	f	file:
sizeOnDisk	runtime/queue.h	/^			int64 sizeOnDisk; \/* current amount of disk space used *\/$/;"	m	struct:queue_s::__anon48::__anon51
sizeOnDiskMax	runtime/queue.h	/^	int64 sizeOnDiskMax;    \/* maximum size on disk allowed *\/$/;"	m	struct:queue_s
sizeWindow	plugins/omrelp/omrelp.c	/^	int sizeWindow;		\/**< the RELP window size - 0=use default *\/$/;"	m	struct:_instanceData	file:
skip	plugins/omelasticsearch/cJSON/cjson.c	/^static const char *skip(const char *in) {while (in && *in && (unsigned char)*in<=32) in++; return in;}$/;"	f	file:
skipOldMessages	plugins/imjournal/imjournal.c	/^skipOldMessages() {$/;"	f	file:
skipSDID	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^skipSDID(uchar *sdbuf, int sdlen, int *rootIdx)$/;"	f	file:
skipWhiteSpace	runtime/srutils.c	/^void skipWhiteSpace(uchar **pp)$/;"	f
skipWhitespace	plugins/mmaudit/mmaudit.c	/^skipWhitespace(uchar **buf)$/;"	f	file:
skip_Comma	outchannel.c	/^static void skip_Comma(char **pp)$/;"	f	file:
sleepBetweenRuns	tests/tcpflood.c	/^static int sleepBetweenRuns = 30; \/* number of seconds to sleep between runs *\/$/;"	v	file:
sm	runtime/modules.h	/^		} sm;$/;"	m	union:modInfo_s::__anon29	typeref:struct:modInfo_s::__anon29::__anon34
smtp	plugins/ommail/ommail.c	/^			} smtp;$/;"	m	union:_instanceData::__anon20	typeref:struct:_instanceData::__anon20::__anon21	file:
smtp	plugins/ommail/ommail.c	/^			} smtp;$/;"	m	union:wrkrInstanceData::__anon22	typeref:struct:wrkrInstanceData::__anon22::__anon23	file:
snaremessage	contrib/pmsnare/pmsnare.c	/^	int snaremessage;$/;"	v
sndBuf	contrib/imzmq3/imzmq3.c	/^    int                    sndBuf;$/;"	m	struct:instanceConf_s	file:
sndBuf	contrib/omzmq3/omzmq3.c	/^    int     sndBuf;$/;"	m	struct:_instanceData	file:
sndBuf	tools/omfwd.c	/^	uchar sndBuf[16*1024];	\/* this is intensionally fixed -- see no good reason to make configurable *\/$/;"	m	struct:wrkrInstanceData	file:
sndHWM	contrib/imzmq3/imzmq3.c	/^    int                    sndHWM; \/* if you want more than 2^32 messages, *\/$/;"	m	struct:instanceConf_s	file:
sndHWM	contrib/omzmq3/omzmq3.c	/^    int     sndHWM;$/;"	m	struct:_instanceData	file:
sndTimeout	contrib/imzmq3/imzmq3.c	/^    int                    sndTimeout;$/;"	m	struct:instanceConf_s	file:
sndTimeout	contrib/omzmq3/omzmq3.c	/^    int     sndTimeout;$/;"	m	struct:_instanceData	file:
snmpsession	plugins/omsnmp/omsnmp.c	/^	netsnmp_session *snmpsession;	\/* Holds to SNMP Session, NULL if not initialized *\/$/;"	m	struct:wrkrInstanceData	file:
sock	contrib/imczmq/imczmq.c	/^	zsock_t *sock;			\/* zeromq socket *\/$/;"	m	struct:lstn_s	file:
sock	contrib/imzmq3/imzmq3.c	/^    void* sock;$/;"	m	struct:lstn_s	file:
sock	contrib/omczmq/omczmq.c	/^	zsock_t *sock;			\/* zeromq socket *\/$/;"	m	struct:_instanceData	file:
sock	plugins/imptcp/imptcp.c	/^	int sock;$/;"	m	struct:ptcplstn_s	file:
sock	plugins/imptcp/imptcp.c	/^	int sock;$/;"	m	struct:ptcpsess_s	file:
sock	plugins/imudp/imudp.c	/^	int sock;		\/* socket *\/$/;"	m	struct:lstn_s	file:
sock	plugins/omgssapi/omgssapi.c	/^	short	sock;			\/* file descriptor *\/$/;"	m	struct:_instanceData	file:
sock	plugins/ommail/ommail.c	/^			int sock;	\/* socket to this server (most important when we do multiple msgs per mail) *\/$/;"	m	struct:wrkrInstanceData::__anon22::__anon23	file:
sock	plugins/omuxsock/omuxsock.c	/^	int sock;$/;"	m	struct:_instanceData	file:
sock	runtime/nsd_ptcp.h	/^	int sock;	\/**< the socket we use for regular, single-socket, operations *\/$/;"	m	struct:nsd_ptcp_s
sock	tests/uxsockrcvr.c	/^int sock;$/;"	v
sockArray	tests/tcpflood.c	/^static int *sockArray;  \/* array of sockets to use *\/$/;"	v	file:
sockClose	runtime/nsd_ptcp.c	/^sockClose(int *pSock)$/;"	f	file:
sockEndpoints	contrib/imczmq/imczmq.c	/^	char *sockEndpoints;		\/* (required) comma delimited list of endpoints *\/$/;"	m	struct:instanceConf_s	file:
sockEndpoints	contrib/omczmq/omczmq.c	/^	char *sockEndpoints;	\/* (required) comma delimited list of endpoints *\/$/;"	m	struct:_instanceData	file:
sockName	plugins/imuxsock/imuxsock.c	/^	uchar *sockName;	\/* read-only after startup *\/$/;"	m	struct:lstn_s	file:
sockName	plugins/imuxsock/imuxsock.c	/^	uchar *sockName;$/;"	m	struct:instanceConf_s	file:
sockName	plugins/omuxsock/omuxsock.c	/^	uchar *sockName; \/* name of the default template to use *\/$/;"	m	struct:configSettings_s	file:
sockName	plugins/omuxsock/omuxsock.c	/^	uchar *sockName;$/;"	m	struct:_instanceData	file:
sockName	tests/uxsockrcvr.c	/^char *sockName = NULL;$/;"	v
sockType	contrib/imczmq/imczmq.c	/^	int sockType;				\/* (required) type of zeromq socket *\/$/;"	m	struct:instanceConf_s	file:
sockType	contrib/imczmq/imczmq.c	/^	int sockType;	$/;"	m	struct:_pollerData_t	file:
sockType	contrib/omczmq/omczmq.c	/^	int sockType;			\/* (required) the type of our zeromq socket *\/$/;"	m	struct:_instanceData	file:
sockaddr_union	runtime/sd-daemon.c	/^union sockaddr_union {$/;"	u	file:
socket	contrib/omzmq3/omzmq3.c	/^    void*   socket;$/;"	m	struct:_instanceData	file:
socket	plugins/external/solr/rsyslog_solr.py	/^import socket$/;"	i
socketActions	contrib/imzmq3/imzmq3.c	/^static socket_action        socketActions[] = {$/;"	v	file:
socketTypes	contrib/imzmq3/imzmq3.c	/^static socket_type          socketTypes[]   = {$/;"	v	file:
socket_action	contrib/imzmq3/imzmq3.c	/^} socket_action;$/;"	t	typeref:struct:_socket_action	file:
socket_action	contrib/omzmq3/omzmq3.c	/^struct socket_action {$/;"	s	file:
socket_type	contrib/imzmq3/imzmq3.c	/^} socket_type;$/;"	t	typeref:struct:_socket_type	file:
socket_type	contrib/omzmq3/omzmq3.c	/^struct socket_type {$/;"	s	file:
socklen_t	runtime/typedefs.h	/^typedef int socklen_t;$/;"	t
softLimitConnections	tests/tcpflood.c	/^static int softLimitConnections  = 0; \/* soft connection limit, see -c option description *\/$/;"	v	file:
solrConnection	plugins/external/solr/rsyslog_solr.py	/^solrConnection = "" # HTTP connection to solr$/;"	v
solrPort	plugins/external/solr/rsyslog_solr.py	/^solrPort = 8983$/;"	v
solrServer	plugins/external/solr/rsyslog_solr.py	/^solrServer = "localhost"$/;"	v
solrUpdatePath	plugins/external/solr/rsyslog_solr.py	/^solrUpdatePath = "\/solr\/gettingstarted\/update"$/;"	v
sourcePort	plugins/omudpspoof/omudpspoof.c	/^	u_short sourcePort;$/;"	m	struct:wrkrInstanceData	file:
sourcePortEnd	plugins/omudpspoof/omudpspoof.c	/^	u_short sourcePortEnd;$/;"	m	struct:_instanceData	file:
sourcePortStart	plugins/omudpspoof/omudpspoof.c	/^	u_short sourcePortStart;	\/* for sorce port iteration *\/$/;"	m	struct:_instanceData	file:
sourceTpl	plugins/omudpspoof/omudpspoof.c	/^	uchar	*sourceTpl;$/;"	m	struct:_instanceData	file:
sourceTpl	plugins/omudpspoof/omudpspoof.c	/^	uchar *sourceTpl;$/;"	v
spin	tools/syncdemo.c	/^static pthread_spinlock_t spin;$/;"	v	file:
spinlock	tools/syncdemo.c	/^typedef enum { part, none, atomic, cas, spinlock, mutex, semaphore } syncType_t;$/;"	e	enum:__anon79	file:
srSLMGParseInt32	runtime/datetime.c	/^srSLMGParseInt32(uchar** ppsz, int *pLenStr)$/;"	f	file:
srSleep	runtime/srutils.c	/^srSleep(int iSeconds, int iuSeconds)$/;"	f
srUtilItoA	runtime/srutils.c	/^rsRetVal srUtilItoA(char *pBuf, int iLenBuf, number_t iToConv)$/;"	f
srUtilStrDup	runtime/srutils.c	/^uchar *srUtilStrDup(uchar *pOld, size_t len)$/;"	f
srcdir	tests/nettester.c	/^static char *srcdir;	\/* global $srcdir, set so that we can run outside of "make check" *\/$/;"	v	file:
srvDel	plugins/imptcp/imptcp.c	/^	ptcpsrv_t *pSrv, *srvDel;$/;"	v
srvPort	plugins/imgssapi/imgssapi.c	/^static uchar *srvPort;$/;"	v	file:
st_ru_inblock	plugins/impstats/impstats.c	/^static int st_ru_inblock;$/;"	v	file:
st_ru_majflt	plugins/impstats/impstats.c	/^static int st_ru_majflt;$/;"	v	file:
st_ru_maxrss	plugins/impstats/impstats.c	/^static int st_ru_maxrss;$/;"	v	file:
st_ru_minflt	plugins/impstats/impstats.c	/^static int st_ru_minflt;$/;"	v	file:
st_ru_nivcsw	plugins/impstats/impstats.c	/^static int st_ru_nivcsw;$/;"	v	file:
st_ru_nvcsw	plugins/impstats/impstats.c	/^static int st_ru_nvcsw;$/;"	v	file:
st_ru_oublock	plugins/impstats/impstats.c	/^static int st_ru_oublock;$/;"	v	file:
st_ru_stime	plugins/impstats/impstats.c	/^static intctr_t st_ru_stime;$/;"	v	file:
st_ru_utime	plugins/impstats/impstats.c	/^static intctr_t st_ru_utime;$/;"	v	file:
stackPtr	runtime/debug.h	/^	int stackPtr;$/;"	m	struct:dbgCallStack_s
stackPtrMax	runtime/debug.h	/^	int stackPtrMax;$/;"	m	struct:dbgCallStack_s
startIndexUxLocalSockets	plugins/imuxsock/imuxsock.c	/^static int startIndexUxLocalSockets; \/* process fd from that index on (used to$/;"	v	file:
startInputModules	runtime/rsconf.c	/^startInputModules(void)$/;"	f	file:
startLstnFile	plugins/imfile/imfile.c	/^startLstnFile(lstn_t *const __restrict__ pLstn)$/;"	f	file:
startMainQueue	tools/rsyslogd.c	/^startMainQueue(qqueue_t *pQueue)$/;"	f
startRegex	plugins/imfile/imfile.c	/^	uchar *startRegex;	\/* regex that signifies end of message (NULL if unset) *\/$/;"	m	struct:lstn_s	file:
startRegex	plugins/imfile/imfile.c	/^	uchar *startRegex;$/;"	m	struct:instanceConf_s	file:
startWorkerPool	plugins/imptcp/imptcp.c	/^startWorkerPool(void)$/;"	f	file:
startWorkerPool	runtime/tcpsrv.c	/^startWorkerPool(void)$/;"	f	file:
startupServers	plugins/imptcp/imptcp.c	/^startupServers()$/;"	f	file:
startupSrv	plugins/imptcp/imptcp.c	/^startupSrv(ptcpsrv_t *pSrv)$/;"	f	file:
state	contrib/pmpanngfw/pmpanngfw.c	/^    int state;$/;"	v
state	contrib/pmpanngfw/pmpanngfw.c	/^    state = STATE_FIELD_START;$/;"	v
state	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	m	struct:record	file:
stateFile	plugins/imjournal/imjournal.c	/^	char *stateFile;$/;"	m	struct:configSettings_s	file:
statefilename	runtime/librsgt.h	/^	unsigned char *statefilename;$/;"	m	struct:gtfile_s
statefilename	runtime/librsksi.h	/^	unsigned char *statefilename;$/;"	m	struct:ksifile_s
staticErrValue	runtime/dnscache.c	/^static prop_t *staticErrValue;$/;"	v	file:
stats	plugins/imptcp/imptcp.c	/^	statsobj_t *stats;	\/* listener stats *\/$/;"	m	struct:ptcplstn_s	file:
stats	plugins/imrelp/imrelp.c	/^		statsobj_t *stats;	\/* listener stats *\/$/;"	m	struct:instanceConf_s::__anon15	file:
stats	plugins/imudp/imudp.c	/^	statsobj_t *stats;	\/* listener stats *\/$/;"	m	struct:lstn_s	file:
stats	plugins/imudp/imudp.c	/^	statsobj_t *stats;	\/* worker thread stats *\/$/;"	m	struct:wrkrInfo_s	file:
stats	runtime/tcpsrv.h	/^	statsobj_t *stats;		\/**< associated stats object *\/$/;"	m	struct:tcpLstnPortList_s
stats	tools/omfile.c	/^	statsobj_t *stats;		\/* dynafile, primarily cache stats *\/$/;"	m	struct:_instanceData	file:
statsCtrType_e	runtime/statsobj.h	/^typedef enum statsCtrType_e {$/;"	g
statsCtrType_t	runtime/statsobj.h	/^} statsCtrType_t;$/;"	t	typeref:enum:statsCtrType_e
statsFmt	plugins/impstats/impstats.c	/^	statsFmtType_t statsFmt;$/;"	m	struct:modConfData_s	file:
statsFmtType_e	runtime/statsobj.h	/^typedef enum statsFmtType_e {$/;"	g
statsFmtType_t	runtime/statsobj.h	/^} statsFmtType_t;$/;"	t	typeref:enum:statsFmtType_e
statsFmt_CEE	runtime/statsobj.h	/^	statsFmt_CEE$/;"	e	enum:statsFmtType_e
statsFmt_JSON	runtime/statsobj.h	/^	statsFmt_JSON,$/;"	e	enum:statsFmtType_e
statsFmt_JSON_ES	runtime/statsobj.h	/^	statsFmt_JSON_ES,$/;"	e	enum:statsFmtType_e
statsFmt_Legacy	runtime/statsobj.h	/^	statsFmt_Legacy,$/;"	e	enum:statsFmtType_e
statslog_regex	plugins/impstats/statslog-analyzer.py	/^import statslog_regex$/;"	i
statslog_regex	plugins/impstats/statslog-splitter.py	/^import statslog_regex$/;"	i
statsobj	action.h	/^	statsobj_t *statsobj;$/;"	m	struct:action_s
statsobj	runtime/queue.h	/^	statsobj_t *statsobj;$/;"	m	struct:queue_s
statsobj	runtime/statsobj.h	/^	INTERFACEObjDebugPrint(statsobj);$/;"	v
statsobj	runtime/statsobj.h	/^PROTOTYPEObj(statsobj);$/;"	v
statsobjCURR_IF_VERSION	runtime/statsobj.h	97;"	d
statsobjConstructFinalize	runtime/statsobj.c	/^statsobjConstructFinalize(statsobj_t *pThis)$/;"	f	file:
statsobj_resources	plugins/impstats/impstats.c	/^static statsobj_t *statsobj_resources;$/;"	v	file:
statsobj_s	runtime/statsobj.h	/^struct statsobj_s {$/;"	s
statsobj_t	runtime/typedefs.h	/^typedef struct statsobj_s statsobj_t;$/;"	t	typeref:struct:statsobj_s
statusCheckOnly	plugins/omelasticsearch/omelasticsearch.c	/^	int statusCheckOnly;$/;"	m	struct:exeContext	file:
std_checkRuleset	runtime/im-helper.h	/^std_checkRuleset(modConfData_t *modConf, instanceConf_t *inst)$/;"	f
std_checkRuleset_genErrMsg	contrib/imczmq/imczmq.c	/^std_checkRuleset_genErrMsg(__attribute__((unused)) modConfData_t *modConf, instanceConf_t *inst)$/;"	f	file:
std_checkRuleset_genErrMsg	contrib/imzmq3/imzmq3.c	/^std_checkRuleset_genErrMsg(__attribute__((unused)) modConfData_t *modConf, instanceConf_t *inst)$/;"	f	file:
std_checkRuleset_genErrMsg	plugins/imfile/imfile.c	/^std_checkRuleset_genErrMsg(__attribute__((unused)) modConfData_t *modConf, instanceConf_t *inst)$/;"	f	file:
std_checkRuleset_genErrMsg	plugins/imptcp/imptcp.c	/^std_checkRuleset_genErrMsg(__attribute__((unused)) modConfData_t *modConf, instanceConf_t *inst)$/;"	f	file:
std_checkRuleset_genErrMsg	plugins/imrelp/imrelp.c	/^std_checkRuleset_genErrMsg(__attribute__((unused)) modConfData_t *modConf, instanceConf_t *inst)$/;"	f	file:
std_checkRuleset_genErrMsg	plugins/imtcp/imtcp.c	/^std_checkRuleset_genErrMsg(__attribute__((unused)) modConfData_t *modConf, instanceConf_t *inst)$/;"	f	file:
std_checkRuleset_genErrMsg	plugins/imudp/imudp.c	/^std_checkRuleset_genErrMsg(__attribute__((unused)) modConfData_t *modConf, instanceConf_t *inst)$/;"	f	file:
stddbg	runtime/debug.c	/^int stddbg = 1; \/* the handle for regular debug output, set to stdout if not forking, -1 otherwise *\/$/;"	v
stdlog_chanspec	runtime/glbl.c	/^static uchar *stdlog_chanspec = NULL;$/;"	v	file:
stdlog_hdl	runtime/glbl.c	/^stdlog_channel_t stdlog_hdl = NULL;	\/* handle to be used for stdlog *\/$/;"	v
step	contrib/mmsequence/mmsequence.c	/^	int step;$/;"	m	struct:_instanceData	file:
stmt	grammar/grammar.y	/^stmt:	  actlst			{ $$ = $1; }$/;"	l
stmt	grammar/rainerscript.h	/^			struct cnfstmt *stmt;$/;"	m	struct:cnfstmt::__anon4::__anon8	typeref:struct:cnfstmt::__anon4::__anon8::cnfstmt
stmt	tests/testconfgen.c	/^static char *stmt[128];$/;"	v	file:
stopWorkerPool	plugins/imptcp/imptcp.c	/^stopWorkerPool(void)$/;"	f	file:
stopWorkerPool	runtime/tcpsrv.c	/^stopWorkerPool(void)$/;"	f	file:
stopWriter	runtime/stream.c	/^stopWriter(strm_t *pThis)$/;"	f	file:
storage	runtime/sd-daemon.c	/^        struct sockaddr_storage storage;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr_storage	file:
storeLocalHostIPIF	runtime/glbl.c	/^storeLocalHostIPIF(uchar *myIP)$/;"	f	file:
str	runtime/var.h	/^		es_str_t *str;$/;"	m	union:var_s::__anon58
str2num	grammar/rainerscript.c	/^str2num(es_str_t *s, int *bSuccess)$/;"	f	file:
strExit	runtime/stringbuf.c	/^rsRetVal strExit()$/;"	f
strInit	runtime/stringbuf.c	/^rsRetVal strInit()$/;"	f
strgen	runtime/modules.h	/^			rsRetVal (*strgen)(const msg_t*const, actWrkrIParams_t *const iparam);$/;"	m	struct:modInfo_s::__anon29::__anon34
strgen	runtime/strgen.h	/^PROTOTYPEObj(strgen);$/;"	v
strgenCURR_IF_VERSION	runtime/strgen.h	54;"	d
strgenList_s	runtime/strgen.h	/^struct strgenList_s {$/;"	s
strgenList_t	runtime/typedefs.h	/^typedef struct strgenList_s strgenList_t;$/;"	t	typeref:struct:strgenList_s
strgen_s	runtime/strgen.h	/^struct strgen_s {$/;"	s
strgen_t	runtime/typedefs.h	/^typedef struct strgen_s strgen_t;$/;"	t	typeref:struct:strgen_s
string	plugins/omelasticsearch/cJSON/cjson.h	/^	char *string;				\/* The item's name string, if this item is the child of, or is in the list of subitems of an object. *\/$/;"	m	struct:cJSON
strm	runtime/stream.h	/^PROTOTYPEObjClassInit(strm);$/;"	v
strmCURR_IF_VERSION	runtime/stream.h	204;"	d
strmCheckNextOutputFile	runtime/stream.c	/^static rsRetVal strmCheckNextOutputFile(strm_t *pThis)$/;"	f	file:
strmCloseFile	runtime/stream.c	/^static rsRetVal strmCloseFile(strm_t *pThis)$/;"	f	file:
strmCompFlushOnTxEnd	tools/omfwd.c	/^	sbool strmCompFlushOnTxEnd; \/* flush stream compression on transaction end? *\/$/;"	m	struct:_instanceData	file:
strmConstructFinalize	runtime/stream.c	/^static rsRetVal strmConstructFinalize(strm_t *pThis)$/;"	f	file:
strmDup	runtime/stream.c	/^strmDup(strm_t *pThis, strm_t **ppNew)$/;"	f
strmFlush	runtime/stream.c	/^strmFlush(strm_t *pThis)$/;"	f	file:
strmFlushInternal	runtime/stream.c	/^strmFlushInternal(strm_t *pThis, int bFlushZip)$/;"	f	file:
strmGetCurrFileNum	runtime/stream.h	/^strmGetCurrFileNum(strm_t *pStrm) {$/;"	f
strmGetCurrOffset	runtime/stream.c	/^strmGetCurrOffset(strm_t *pThis, int64 *pOffs)$/;"	f	file:
strmHandleEOF	runtime/stream.c	/^strmHandleEOF(strm_t *pThis)$/;"	f	file:
strmHandleEOFMonitor	runtime/stream.c	/^strmHandleEOFMonitor(strm_t *pThis)$/;"	f	file:
strmLstnPortList_s	runtime/strmsrv.h	/^struct strmLstnPortList_s {$/;"	s
strmLstnPortList_t	runtime/typedefs.h	/^typedef struct strmLstnPortList_s strmLstnPortList_t; \/\/ TODO: rename?$/;"	t	typeref:struct:strmLstnPortList_s
strmMode_t	runtime/stream.h	/^} strmMode_t;$/;"	t	typeref:enum:__anon66
strmMultiFileSeek	runtime/stream.c	/^strmMultiFileSeek(strm_t *pThis, int FNum, off64_t offs, off64_t *bytesDel)$/;"	f
strmNextFile	runtime/stream.c	/^strmNextFile(strm_t *pThis)$/;"	f	file:
strmOpenFile	runtime/stream.c	/^static rsRetVal strmOpenFile(strm_t *pThis)$/;"	f	file:
strmPhysWrite	runtime/stream.c	/^strmPhysWrite(strm_t *pThis, uchar *pBuf, size_t lenBuf)$/;"	f	file:
strmReadBuf	runtime/stream.c	/^strmReadBuf(strm_t *pThis, int *padBytes)$/;"	f	file:
strmReadChar	runtime/stream.c	/^static rsRetVal strmReadChar(strm_t *pThis, uchar *pC)$/;"	f	file:
strmReadLine	runtime/stream.c	/^strmReadLine(strm_t *pThis, cstr_t **ppCStr, uint8_t mode, sbool bEscapeLF)$/;"	f	file:
strmReadMultiLine	runtime/stream.c	/^strmReadMultiLine(strm_t *pThis, cstr_t **ppCStr, regex_t *preg, sbool bEscapeLF)$/;"	f
strmRecordBegin	runtime/stream.c	/^static rsRetVal strmRecordBegin(strm_t *pThis)$/;"	f	file:
strmRecordEnd	runtime/stream.c	/^static rsRetVal strmRecordEnd(strm_t *pThis)$/;"	f	file:
strmSchedWrite	runtime/stream.c	/^strmSchedWrite(strm_t *pThis, uchar *pBuf, size_t lenBuf, int bFlushZip)$/;"	f	file:
strmSeek	runtime/stream.c	/^static rsRetVal strmSeek(strm_t *pThis, off64_t offs)$/;"	f	file:
strmSeekCurrOffs	runtime/stream.c	/^static rsRetVal strmSeekCurrOffs(strm_t *pThis)$/;"	f	file:
strmSerialize	runtime/stream.c	/^static rsRetVal strmSerialize(strm_t *pThis, strm_t *pStrm)$/;"	f	file:
strmSetCurrFName	runtime/stream.c	/^strmSetCurrFName(strm_t *pThis)$/;"	f	file:
strmSetDir	runtime/stream.c	/^strmSetDir(strm_t *pThis, uchar *pszDir, size_t iLenDir)$/;"	f	file:
strmSetFName	runtime/stream.c	/^strmSetFName(strm_t *pThis, uchar *pszName, size_t iLenName)$/;"	f	file:
strmSetProperty	runtime/stream.c	/^static rsRetVal strmSetProperty(strm_t *pThis, var_t *pProp)$/;"	f	file:
strmSetWCntr	runtime/stream.c	/^strmSetWCntr(strm_t *pThis, number_t *pWCnt)$/;"	f	file:
strmSetbDeleteOnClose	runtime/stream.c	/^static rsRetVal strmSetbDeleteOnClose(strm_t *pThis, int val)$/;"	f	file:
strmSetiMaxFiles	runtime/stream.c	/^static rsRetVal strmSetiMaxFiles(strm_t *pThis, int iNewVal)$/;"	f	file:
strmType_t	runtime/stream.h	/^} strmType_t;$/;"	t	typeref:enum:__anon65
strmUnreadChar	runtime/stream.c	/^static rsRetVal strmUnreadChar(strm_t *pThis, uchar c)$/;"	f	file:
strmWaitAsyncWriterDone	runtime/stream.c	/^strmWaitAsyncWriterDone(strm_t *pThis)$/;"	f	file:
strmWrite	runtime/stream.c	/^strmWrite(strm_t *__restrict__ const pThis, const uchar *__restrict__ const pBuf, size_t lenBuf)$/;"	f	file:
strmWriteChar	runtime/stream.c	/^static rsRetVal strmWriteChar(strm_t *__restrict__ const pThis, const uchar c)$/;"	f	file:
strmWriteLong	runtime/stream.c	/^static rsRetVal strmWriteLong(strm_t *__restrict__ const pThis, const long i)$/;"	f	file:
strm_s	runtime/stream.h	/^typedef struct strm_s {$/;"	s
strm_t	runtime/stream.h	/^} strm_t;$/;"	t	typeref:struct:strm_s
strms_sess	runtime/strms_sess.h	/^	INTERFACEObjDebugPrint(strms_sess);$/;"	v
strms_sess	runtime/strms_sess.h	/^PROTOTYPEObj(strms_sess);$/;"	v
strms_sessCURR_IF_VERSION	runtime/strms_sess.h	60;"	d
strms_sessClassExit	runtime/strmsrv.c	/^	strms_sessClassExit();$/;"	v
strms_sessConstructFinalize	runtime/strms_sess.c	/^strms_sessConstructFinalize(strms_sess_t *pThis)$/;"	f	file:
strms_sess_s	runtime/strms_sess.h	/^struct strms_sess_s {$/;"	s
strms_sess_t	runtime/typedefs.h	/^typedef struct strms_sess_s strms_sess_t;$/;"	t	typeref:struct:strms_sess_s
strmsrv	runtime/strmsrv.h	/^	INTERFACEObjDebugPrint(strmsrv);$/;"	v
strmsrv	runtime/strmsrv.h	/^PROTOTYPEObj(strmsrv);$/;"	v
strmsrvCURR_IF_VERSION	runtime/strmsrv.h	106;"	d
strmsrvConstructFinalize	runtime/strmsrv.c	/^strmsrvConstructFinalize(strmsrv_t *pThis)$/;"	f	file:
strmsrv_s	runtime/strmsrv.h	/^struct strmsrv_s {$/;"	s
strmsrv_t	runtime/typedefs.h	/^typedef struct strmsrv_s strmsrv_t;$/;"	t	typeref:struct:strmsrv_s
strndup	compat/strndup.c	/^strndup(const char *s, size_t n)$/;"	f
strtab	runtime/lookup.h	/^		lookup_string_tab_etry_t *strtab;$/;"	m	union:lookup_s::__anon28
sub	contrib/imzmq3/imzmq3.c	/^    sublist *sub, *sub_r;$/;"	v
sub_r	contrib/imzmq3/imzmq3.c	/^    sublist *sub, *sub_r;$/;"	v
subject	plugins/ommail/ommail.c	/^	uchar *subject;$/;"	v
sublist	contrib/imzmq3/imzmq3.c	/^} sublist;$/;"	t	typeref:struct:sublist_t	file:
sublist_t	contrib/imzmq3/imzmq3.c	/^typedef struct sublist_t {$/;"	s	file:
submitLine	plugins/impstats/impstats.c	/^submitLine(uchar *const ln, const size_t lenLn)$/;"	f	file:
submitMsg	tools/rsyslogd.c	/^submitMsg(msg_t *pMsg)$/;"	f
submitMsg2	tools/rsyslogd.c	/^submitMsg2(msg_t *pMsg)$/;"	f
submitMsgWithDfltRatelimiter	tools/rsyslogd.c	/^submitMsgWithDfltRatelimiter(msg_t *pMsg)$/;"	f	file:
submitSyslog	contrib/imkmsg/kmsg.c	/^submitSyslog(uchar *buf)$/;"	f	file:
submitSyslog	plugins/imklog/bsd.c	/^submitSyslog(modConfData_t *pModConf, syslog_pri_t pri, uchar *buf)$/;"	f	file:
submitToActQ	action.h	/^	rsRetVal (*submitToActQ)(action_t *, wti_t*, msg_t*);\/* function submit message to action queue *\/$/;"	m	struct:action_s
subobjs	grammar/rainerscript.h	/^	struct objlst *subobjs;$/;"	m	struct:cnfobj	typeref:struct:cnfobj::objlst
subscribe	contrib/imzmq3/imzmq3.c	/^    char* subscribe;$/;"	m	struct:sublist_t	file:
subscriptions	contrib/imzmq3/imzmq3.c	/^    sublist*               subscriptions;$/;"	m	struct:instanceConf_s	file:
subtree	template.h	/^	msgPropDescr_t subtree;	\/* subtree property name for subtree-type templates *\/$/;"	m	struct:__anon68
suffix_object	plugins/omelasticsearch/cJSON/cjson.c	/^static void suffix_object(cJSON *prev,cJSON *item) {prev->next=item;item->prev=prev;}$/;"	f	file:
sun_Pfd	plugins/imsolaris/sun_cddl.c	/^struct pollfd sun_Pfd;		\/* Pollfd for local log device *\/$/;"	v	typeref:struct:pollfd
sun_delete_doorfiles	plugins/imsolaris/sun_cddl.c	/^sun_delete_doorfiles(void)$/;"	f
sun_getkmsg	plugins/imklog/solaris_cddl.c	/^sun_getkmsg()$/;"	f
sun_open_door	plugins/imsolaris/sun_cddl.c	/^sun_open_door(void)$/;"	f
sun_openklog	plugins/imklog/solaris_cddl.c	/^sun_openklog(char *name, int mode)$/;"	f
sun_openklog	plugins/imsolaris/sun_cddl.c	/^sun_openklog(char *name)$/;"	f
sun_sys_poll	plugins/imklog/solaris_cddl.c	/^sun_sys_poll()$/;"	f
supportsTX	runtime/modules.h	/^			sbool supportsTX;	\/* set if the module supports transactions *\/$/;"	m	struct:modInfo_s::__anon29::__anon31
syncFile	runtime/stream.c	/^syncFile(strm_t *pThis)$/;"	f	file:
syncType	tools/syncdemo.c	/^syncType_t syncType;$/;"	v
syncType_t	tools/syncdemo.c	/^typedef enum { part, none, atomic, cas, spinlock, mutex, semaphore } syncType_t;$/;"	t	typeref:enum:__anon79	file:
syncTypes	tools/syncdemo.c	/^static syncType_t syncTypes[] = { part, none, atomic, cas, spinlock, mutex, semaphore };$/;"	v	file:
sys	plugins/external/messagemod/anon_cc_nbrs/anon_cc_nbrs.py	/^import sys$/;"	i
sys	plugins/external/messagemod/fac-sever-rewrite/fac-sever-rewrite.py	/^import sys$/;"	i
sys	plugins/external/skeletons/python/mm-python.py	/^import sys$/;"	i
sys	plugins/external/skeletons/python/plugin.py	/^import sys$/;"	i
sys	plugins/external/solr/rsyslog_solr.py	/^import sys$/;"	i
sys	plugins/impstats/statslog-analyzer.py	/^import sys$/;"	i
sys	plugins/impstats/statslog-graph.py	/^import sys$/;"	i
sys	plugins/impstats/statslog-splitter.py	/^import sys$/;"	i
sys	plugins/impstats/statslog_regex.py	/^import sys$/;"	i
sys	tests/elasticsearch-error-format-check.py	/^import sys$/;"	i
syslogCODE	runtime/syslogd-types.h	/^} syslogCODE;$/;"	t	typeref:struct:_syslogCode
syslogFacNames	runtime/srutils.c	/^syslogName_t	syslogFacNames[] = {$/;"	v
syslogFeature	runtime/syslogd-types.h	/^} syslogFeature;$/;"	t	typeref:enum:_syslogFeature
syslogName_s	runtime/srUtils.h	/^typedef struct syslogName_s {$/;"	s
syslogName_t	runtime/srUtils.h	/^} syslogName_t;$/;"	t	typeref:struct:syslogName_s
syslogPriNames	runtime/srutils.c	/^syslogName_t	syslogPriNames[] = {$/;"	v
syslogTime	runtime/syslogd-types.h	/^struct syslogTime {$/;"	s
syslogTime2time_t	runtime/datetime.c	/^time_t syslogTime2time_t(struct syslogTime *ts)$/;"	f
syslogTime2time_t	runtime/datetime.h	/^	time_t (*syslogTime2time_t)(struct syslogTime *ts);$/;"	v
syslogTime_t	runtime/syslogd-types.h	/^typedef struct syslogTime syslogTime_t;$/;"	t	typeref:struct:syslogTime
syslog_fac_names	runtime/msg.c	/^static char *syslog_fac_names[LOG_NFACILITIES] = { "kern", "user", "mail", "daemon", "auth", "syslog", "lpr",$/;"	v	file:
syslog_number_names	runtime/msg.c	/^static char *syslog_number_names[LOG_NFACILITIES] = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14",$/;"	v	file:
syslog_pri_names	runtime/msg.c	/^} syslog_pri_names[200] = {$/;"	v	typeref:struct:__anon35	file:
syslog_pri_t	runtime/typedefs.h	/^typedef uint16_t syslog_pri_t; \/* to be used for syslog PRI values *\/$/;"	t
syslog_severity_names	runtime/msg.c	/^static char *syslog_severity_names[8] = { "emerg", "alert", "crit", "err", "warning", "notice", "info", "debug" };$/;"	v	file:
syslog_tag	tools/logctl.c	/^	const char *syslog_tag;$/;"	m	struct:ofields	file:
syslogd_crunch_list	tools/syslogd.c	/^char **syslogd_crunch_list(char *list)$/;"	f
sz	runtime/prop.h	/^		uchar sz[CONF_PROP_BUFSIZE];$/;"	m	union:prop_s::__anon46
szBinary	plugins/mmexternal/mmexternal.c	/^	uchar *szBinary;	\/* name of binary to call *\/$/;"	m	struct:_instanceData	file:
szBinary	plugins/mmexternal/mmexternal.c	/^	uchar *szBinary;	\/* name of binary to call *\/$/;"	m	struct:configSettings_s	file:
szBinary	plugins/omprog/omprog.c	/^	uchar *szBinary;	\/* name of binary to call *\/$/;"	m	struct:_instanceData	file:
szBinary	plugins/omprog/omprog.c	/^	uchar *szBinary;	\/* name of binary to call *\/$/;"	m	struct:configSettings_s	file:
szBuf	plugins/omstdout/omstdout.c	/^	char szBuf[65564];$/;"	v
szBuf	plugins/omtesting/omtesting.c	/^	uchar szBuf[1024];$/;"	v
szBuf	runtime/msg.h	/^		uchar	szBuf[CONF_PROGNAME_BUFSIZE];$/;"	m	union:msg::__anon37
szBuf	runtime/msg.h	/^		uchar	szBuf[CONF_TAG_BUFSIZE];$/;"	m	union:msg::__anon38
szChartAddArgs	plugins/impstats/statslog-splitter.py	/^szChartAddArgs = ""$/;"	v
szChartsFormat	plugins/impstats/statslog-splitter.py	/^		szChartsFormat = arg[15:]$/;"	v
szChartsFormat	plugins/impstats/statslog-splitter.py	/^szChartsFormat = "svg"$/;"	v
szCommunity	plugins/omsnmp/omsnmp.c	/^	uchar	*szCommunity;	\/* Snmp Community *\/ $/;"	m	struct:_instanceData	file:
szEnterpriseOID	plugins/omsnmp/omsnmp.c	/^	uchar	*szEnterpriseOID;\/* Snmp Enterprise OID - default is (1.3.6.1.4.1.3.1.1 = enterprises.cmu.1.1) *\/ $/;"	m	struct:_instanceData	file:
szFileName	plugins/impstats/statslog-splitter.py	/^					szFileName = re.sub("[^a-zA-Z0-9]", "_", result[ loglineindexes[iLogRegExIndex]["LN_LOGOBJECT"] ]) + ".csv"$/;"	v
szHOSTNAME	runtime/msg.h	/^	uchar szHOSTNAME[CONF_HOSTNAME_BUFSIZE];$/;"	m	struct:msg
szHost	plugins/impstats/statslog-analyzer.py	/^			szHost = singleStatLine[LN_HOST]$/;"	v
szHost	plugins/impstats/statslog-analyzer.py	/^		szHost = ""$/;"	v
szHtmlCode	plugins/impstats/statslog-splitter.py	/^		szHtmlCode =	"<!DOCTYPE html><html><head><\/head><body><center>"$/;"	v
szInput	plugins/impstats/statslog-analyzer.py	/^		szInput = arg[8:]$/;"	v
szInput	plugins/impstats/statslog-analyzer.py	/^szInput = "rsyslog-stats.log"$/;"	v
szInput	plugins/impstats/statslog-graph.py	/^		szInput = arg[8:]$/;"	v
szInput	plugins/impstats/statslog-graph.py	/^szInput = ""$/;"	v
szInput	plugins/impstats/statslog-splitter.py	/^		szInput = arg[8:]$/;"	v
szInput	plugins/impstats/statslog-splitter.py	/^szInput = "rsyslog-stats.log"$/;"	v
szLineDate	plugins/impstats/statslog-analyzer.py	/^			szLineDate = singleStatLine[LN_DATE]$/;"	v
szLineDate	plugins/impstats/statslog-analyzer.py	/^		szLineDate  = ""$/;"	v
szOutputDir	plugins/impstats/statslog-splitter.py	/^		szOutputDir = arg[12:]$/;"	v
szOutputDir	plugins/impstats/statslog-splitter.py	/^szOutputDir = ".\/"$/;"	v
szOutputFile	plugins/impstats/statslog-graph.py	/^		szOutputFile = arg[13:]$/;"	v
szOutputFile	plugins/impstats/statslog-graph.py	/^szOutputFile = ""$/;"	v
szParams	plugins/omstdout/omstdout.c	/^	char **szParams;$/;"	v
szPngFileName	plugins/impstats/statslog-graph.py	/^		szPngFileName = szOutputFile[:-4] + ".png"$/;"	v
szRawMsg	runtime/msg.h	/^	uchar szRawMsg[CONF_RAWMSG_BUFSIZE];	\/* most messages are small, and these are stored here (without malloc\/free!) *\/$/;"	m	struct:msg
szSnmpTrapOID	plugins/omsnmp/omsnmp.c	/^	uchar	*szSnmpTrapOID;	\/* Snmp Trap OID - default is (1.3.6.1.4.1.19406.1.2.1 = ADISCON-MONITORWARE-MIB::syslogtrap) *\/ $/;"	m	struct:_instanceData	file:
szStatsID	plugins/impstats/statslog-analyzer.py	/^					szStatsID = result[ loglineindexes[iLogRegExIndex]["LN_LOGOBJECT"] ]$/;"	v
szSyslogMessageOID	plugins/omsnmp/omsnmp.c	/^	uchar	*szSyslogMessageOID;	\/* Snmp OID used for the Syslog Message:$/;"	m	struct:_instanceData	file:
szTarget	plugins/omsnmp/omsnmp.c	/^	uchar	*szTarget;	\/* IP\/hostname of Snmp Target*\/ $/;"	m	struct:_instanceData	file:
szTransport	plugins/omsnmp/omsnmp.c	/^	uchar	*szTransport;	\/* Transport - Can be udp, tcp, udp6, tcp6 and other types supported by NET-SNMP *\/ $/;"	m	struct:_instanceData	file:
szVal	runtime/prop.h	/^	} szVal;$/;"	m	struct:prop_s	typeref:union:prop_s::__anon46
tActNow	action.h	/^	time_t	tActNow;	\/* the current time for an action execution. Initially set to -1 and$/;"	m	struct:action_s
tLastExec	action.h	/^	time_t	tLastExec;	\/* time this action was last executed *\/$/;"	m	struct:action_s
tLastOccur	action.h	/^	time_t  tLastOccur;	\/* time last occurence was seen (for timing them out) *\/$/;"	m	struct:action_s
tOpenMode	runtime/stream.h	/^	mode_t tOpenMode;$/;"	m	struct:strm_s
tOperationsMode	runtime/stream.h	/^	strmMode_t tOperationsMode;$/;"	m	struct:strm_s
tRcvdAt	runtime/msg.h	/^	struct syslogTime tRcvdAt;\/* time the message entered this program *\/$/;"	m	struct:msg	typeref:struct:msg::syslogTime
tTIMESTAMP	runtime/msg.h	/^	struct syslogTime tTIMESTAMP;\/* (parsed) value of the timestamp *\/$/;"	m	struct:msg	typeref:struct:msg::syslogTime
tVars	runtime/queue.h	/^	} tVars;$/;"	m	struct:queue_s	typeref:struct:queue_s::__anon48
t_else	grammar/rainerscript.h	/^			struct cnfstmt *t_else;$/;"	m	struct:cnfstmt::__anon4::__anon10	typeref:struct:cnfstmt::__anon4::__anon10::cnfstmt
t_else	grammar/rainerscript.h	/^			struct cnfstmt *t_else;$/;"	m	struct:cnfstmt::__anon4::__anon5	typeref:struct:cnfstmt::__anon4::__anon5::cnfstmt
t_else	grammar/rainerscript.h	/^			struct cnfstmt *t_else;$/;"	m	struct:cnfstmt::__anon4::__anon9	typeref:struct:cnfstmt::__anon4::__anon9::cnfstmt
t_then	grammar/rainerscript.h	/^			struct cnfstmt *t_then;$/;"	m	struct:cnfstmt::__anon4::__anon10	typeref:struct:cnfstmt::__anon4::__anon10::cnfstmt
t_then	grammar/rainerscript.h	/^			struct cnfstmt *t_then;$/;"	m	struct:cnfstmt::__anon4::__anon5	typeref:struct:cnfstmt::__anon4::__anon5::cnfstmt
t_then	grammar/rainerscript.h	/^			struct cnfstmt *t_then;$/;"	m	struct:cnfstmt::__anon4::__anon9	typeref:struct:cnfstmt::__anon4::__anon9::cnfstmt
table	runtime/hashtable_private.h	/^    struct entry **table;$/;"	m	struct:hashtable	typeref:struct:hashtable::entry
tablelength	runtime/hashtable_private.h	/^    unsigned int tablelength;$/;"	m	struct:hashtable
tablength	contrib/pmsnare/pmsnare.c	/^	int tablength;$/;"	v
tablength	contrib/pmsnare/pmsnare.c	/^	tablength=sizeof(TabRepresentation);$/;"	v
tag	plugins/omjournal/omjournal.c	/^	uchar *tag;$/;"	v
tail	contrib/imczmq/imczmq.c	/^	instanceConf_t *tail;$/;"	m	struct:modConfData_s	file:
tail	contrib/imzmq3/imzmq3.c	/^    instanceConf_t* tail;$/;"	m	struct:modConfData_s	file:
tail	plugins/imfile/imfile.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
tail	plugins/imptcp/imptcp.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
tail	plugins/imrelp/imrelp.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
tail	plugins/imtcp/imtcp.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
tail	plugins/imudp/imudp.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
tail	plugins/imuxsock/imuxsock.c	/^	instanceConf_t *root, *tail;$/;"	m	struct:modConfData_s	file:
tail	runtime/queue.h	/^			long deqhead, head, tail;$/;"	m	struct:queue_s::__anon48::__anon49
tail	tests/filewriter.c	/^} *root, *tail;$/;"	v	typeref:struct:line
target	plugins/omrelp/omrelp.c	/^	uchar *target;$/;"	m	struct:_instanceData	file:
target	tools/omfwd.c	/^	char	*target;$/;"	m	struct:_instanceData	file:
targetIP	tests/diagtalker.c	/^static char *targetIP = "127.0.0.1";$/;"	v	file:
targetIP	tests/tcpflood.c	/^static char *targetIP = "127.0.0.1";$/;"	v	file:
targetPort	tests/diagtalker.c	/^static int targetPort = 13500;$/;"	v	file:
targetPort	tests/tcpflood.c	/^static int targetPort = 13514;$/;"	v	file:
tcpLstnPortList_s	runtime/tcpsrv.h	/^struct tcpLstnPortList_s {$/;"	s
tcpLstnPortList_t	runtime/typedefs.h	/^typedef struct tcpLstnPortList_s tcpLstnPortList_t; \/\/ TODO: rename?$/;"	t	typeref:struct:tcpLstnPortList_s
tcpSend	tests/nettester.c	/^tcpSend(char *buf, int lenBuf)$/;"	f
tcp_framing	plugins/omgssapi/omgssapi.c	/^	TCPFRAMINGMODE tcp_framing = TCP_FRAMING_OCTET_STUFFING;$/;"	v
tcp_framing	runtime/tcpclt.h	/^	TCPFRAMINGMODE tcp_framing;$/;"	m	struct:tcpclt_s
tcp_framing	tools/omfwd.c	/^	TCPFRAMINGMODE tcp_framing = TCP_FRAMING_OCTET_STUFFING;$/;"	v
tcp_framing	tools/omfwd.c	/^	TCPFRAMINGMODE tcp_framing;$/;"	m	struct:_instanceData	file:
tcpclt	runtime/tcpclt.h	/^PROTOTYPEObj(tcpclt);$/;"	v
tcpcltCURR_IF_VERSION	runtime/tcpclt.h	62;"	d
tcpcltClassExit	runtime/tcpclt.c	/^	tcpcltClassExit();$/;"	v
tcpcltConstructFinalize	runtime/tcpclt.c	/^tcpcltConstructFinalize(tcpclt_t __attribute__((unused)) *pThis)$/;"	f	file:
tcpclt_s	runtime/tcpclt.h	/^typedef struct tcpclt_s {$/;"	s
tcpclt_t	runtime/tcpclt.h	/^} tcpclt_t;$/;"	t	typeref:struct:tcpclt_s
tcps_sess	runtime/tcps_sess.h	/^	INTERFACEObjDebugPrint(tcps_sess);$/;"	v
tcps_sess	runtime/tcps_sess.h	/^PROTOTYPEObj(tcps_sess);$/;"	v
tcps_sessCURR_IF_VERSION	runtime/tcps_sess.h	75;"	d
tcps_sessConstructFinalize	runtime/tcps_sess.c	/^tcps_sessConstructFinalize(tcps_sess_t __attribute__((unused)) *pThis)$/;"	f	file:
tcps_sess_s	runtime/tcps_sess.h	/^struct tcps_sess_s {$/;"	s
tcps_sess_t	runtime/typedefs.h	/^typedef struct tcps_sess_s tcps_sess_t;$/;"	t	typeref:struct:tcps_sess_s
tcpsrv	runtime/tcpsrv.h	/^	INTERFACEObjDebugPrint(tcpsrv);$/;"	v
tcpsrv	runtime/tcpsrv.h	/^PROTOTYPEObj(tcpsrv);$/;"	v
tcpsrvCURR_IF_VERSION	runtime/tcpsrv.h	172;"	d
tcpsrvConstructFinalize	runtime/tcpsrv.c	/^tcpsrvConstructFinalize(tcpsrv_t *pThis)$/;"	f	file:
tcpsrv_s	runtime/tcpsrv.h	/^struct tcpsrv_s {$/;"	s
tcpsrv_t	runtime/typedefs.h	/^typedef struct tcpsrv_s tcpsrv_t;$/;"	t	typeref:struct:tcpsrv_s
tcpsrv_workset_s	runtime/tcpsrv.h	/^struct tcpsrv_workset_s {$/;"	s
tdlAdd	runtime/queue.c	/^static inline rsRetVal tdlAdd(qqueue_t *pQueue, qDeqID deqID, int nElemDeq)$/;"	f	file:
tdlPeek	runtime/queue.c	/^static inline toDeleteLst_t *tdlPeek(qqueue_t *pQueue)$/;"	f	file:
tdlPop	runtime/queue.c	/^static inline rsRetVal tdlPop(qqueue_t *pQueue)$/;"	f	file:
tellChildReady	tools/rsyslogd.c	/^tellChildReady(int pipefd, char *const msg)$/;"	f	file:
tellCoreConfigLoadDone	runtime/rsconf.c	/^tellCoreConfigLoadDone(void)$/;"	f	file:
tellLostCnt	runtime/ratelimit.c	/^tellLostCnt(ratelimit_t *ratelimit)$/;"	f	file:
tellModulesActivateConfig	runtime/rsconf.c	/^tellModulesActivateConfig(void)$/;"	f	file:
tellModulesActivateConfigPrePrivDrop	runtime/rsconf.c	/^tellModulesActivateConfigPrePrivDrop(void)$/;"	f	file:
tellModulesCheckConfig	runtime/rsconf.c	/^tellModulesCheckConfig(void)$/;"	f	file:
tellModulesConfigLoadDone	runtime/rsconf.c	/^tellModulesConfigLoadDone(void)$/;"	f	file:
templateEntry	template.h	/^struct templateEntry {$/;"	s
templateInit	template.c	/^rsRetVal templateInit()$/;"	f
template_DebugFormat	runtime/rsconf.c	/^static uchar template_DebugFormat[] = "\\"Debug line with all properties:\\nFROMHOST: '%FROMHOST%', fromhost-ip: '%fromhost-ip%', HOSTNAME: '%HOSTNAME%', PRI: %PRI%,\\nsyslogtag '%syslogtag%', programname: '%programname%', APP-NAME: '%APP-NAME%', PROCID: '%PROCID%', MSGID: '%MSGID%',\\nTIMESTAMP: '%TIMESTAMP%', STRUCTURED-DATA: '%STRUCTURED-DATA%',\\nmsg: '%msg%'\\nescaped msg: '%msg:::drop-cc%'\\ninputname: %inputname% rawmsg: '%rawmsg%'\\n$!:%$!%\\n$.:%$.%\\n$\/:%$\/%\\n\\n\\"";$/;"	v	file:
template_FileFormat	runtime/rsconf.c	/^static uchar template_FileFormat[] = "=RSYSLOG_FileFormat";$/;"	v	file:
template_ForwardFormat	runtime/rsconf.c	/^static uchar template_ForwardFormat[] = "=RSYSLOG_ForwardFormat";$/;"	v	file:
template_StdDBFmt	runtime/rsconf.c	/^static uchar template_StdDBFmt[] = "\\"insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag) values ('%msg%', %syslogfacility%, '%HOSTNAME%', %syslogpriority%, '%timereported:::date-mysql%', '%timegenerated:::date-mysql%', %iut%, '%syslogtag%')\\",SQL";$/;"	v	file:
template_StdJSONFmt	runtime/rsconf.c	/^static uchar template_StdJSONFmt[] = "\\"{\\\\\\"message\\\\\\":\\\\\\"%msg:::json%\\\\\\",\\\\\\"fromhost\\\\\\":\\\\\\"%HOSTNAME:::json%\\\\\\",\\\\\\"facility\\\\\\":\\\\\\"%syslogfacility-text%\\\\\\",\\\\\\"priority\\\\\\":\\\\\\"%syslogpriority-text%\\\\\\",\\\\\\"timereported\\\\\\":\\\\\\"%timereported:::date-rfc3339%\\\\\\",\\\\\\"timegenerated\\\\\\":\\\\\\"%timegenerated:::date-rfc3339%\\\\\\"}\\"";$/;"	v	file:
template_StdPgSQLFmt	runtime/rsconf.c	/^static uchar template_StdPgSQLFmt[] = "\\"insert into SystemEvents (Message, Facility, FromHost, Priority, DeviceReportedTime, ReceivedAt, InfoUnitID, SysLogTag) values ('%msg%', %syslogfacility%, '%HOSTNAME%', %syslogpriority%, '%timereported:::date-pgsql%', '%timegenerated:::date-pgsql%', %iut%, '%syslogtag%')\\",STDSQL";$/;"	v	file:
template_StdUsrMsgFmt	runtime/rsconf.c	/^static uchar template_StdUsrMsgFmt[] = "\\" %syslogtag%%msg%\\n\\r\\"";$/;"	v	file:
template_SysklogdFileFormat	runtime/rsconf.c	/^static uchar template_SysklogdFileFormat[] = "\\"%TIMESTAMP% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg%\\n\\"";$/;"	v	file:
template_SyslogProtocol23Format	runtime/rsconf.c	/^static uchar template_SyslogProtocol23Format[] = "\\"<%PRI%>1 %TIMESTAMP:::date-rfc3339% %HOSTNAME% %APP-NAME% %PROCID% %MSGID% %STRUCTURED-DATA% %msg%\\n\\"";$/;"	v	file:
template_TraditionalFileFormat	runtime/rsconf.c	/^static uchar template_TraditionalFileFormat[] = "=RSYSLOG_TraditionalFileFormat";$/;"	v	file:
template_TraditionalForwardFormat	runtime/rsconf.c	/^static uchar template_TraditionalForwardFormat[] = "=RSYSLOG_TraditionalForwardFormat";$/;"	v	file:
template_WallFmt	runtime/rsconf.c	/^static uchar template_WallFmt[] = "\\"\\r\\n\\7Message from syslogd@%HOSTNAME% at %timegenerated% ...\\r\\n %syslogtag%%msg%\\n\\r\\"";$/;"	v	file:
template_spoofadr	runtime/rsconf.c	/^static uchar template_spoofadr[] = "\\"%fromhost-ip%\\"";$/;"	v	file:
templates	runtime/rsconf.h	/^	templates_t templates;$/;"	m	struct:rsconf_s
templates_s	runtime/rsconf.h	/^struct templates_s {$/;"	s
templates_t	runtime/typedefs.h	/^typedef struct templates_s templates_t;$/;"	t	typeref:struct:templates_s
tenPowers	runtime/datetime.c	/^static const int tenPowers[6] = { 1, 10, 100, 1000, 10000, 100000 };$/;"	v	file:
testFile	tests/rscript.c	/^	uchar *testFile;$/;"	v
testFiles	tests/rscript.c	/^	glob_t testFiles;$/;"	v
testFiles	tests/rscript.c	/^	globfree(&testFiles);$/;"	v
testSuite	tests/nettester.c	/^static char *testSuite = NULL; \/* name of current test suite *\/$/;"	v	file:
tester	runtime/debug.c	/^void tester(void)$/;"	f
textpri	runtime/msg.c	/^textpri(const msg_t *const __restrict__ pMsg)$/;"	f	file:
thrd	runtime/debug.c	/^	pthread_t thrd;$/;"	m	struct:dbgMutLog_s	file:
thrd	runtime/debug.h	/^	pthread_t thrd; \/* thrd where the mutex was locked *\/$/;"	m	struct:dbgFuncDBmutInfoEntry_s
thrd	runtime/debug.h	/^	pthread_t thrd;$/;"	m	struct:dbgCallStack_s
thrdConstruct	threads.c	/^thrdConstruct(thrdInfo_t **ppThis)$/;"	f	file:
thrdCreate	threads.c	/^rsRetVal thrdCreate(rsRetVal (*thrdMain)(thrdInfo_t*), rsRetVal(*afterRun)(thrdInfo_t *), sbool bNeedsCancel, uchar *name)$/;"	f
thrdDestruct	threads.c	/^static rsRetVal thrdDestruct(thrdInfo_t *pThis)$/;"	f	file:
thrdExit	threads.c	/^rsRetVal thrdExit(void)$/;"	f
thrdID	runtime/wti.h	/^	pthread_t thrdID; 	\/* thread ID *\/$/;"	m	struct:wti_s
thrdID	threads.h	/^	pthread_t thrdID;$/;"	m	struct:thrdInfo
thrdInfo	threads.h	/^struct thrdInfo {$/;"	s
thrdInfo_t	runtime/typedefs.h	/^typedef struct thrdInfo thrdInfo_t;$/;"	t	typeref:struct:thrdInfo
thrdInit	threads.c	/^rsRetVal thrdInit(void)$/;"	f
thrdMgmt	tests/tcpflood.c	/^pthread_mutex_t thrdMgmt;	\/* mutex for controling startup\/shutdown *\/$/;"	v
thrdStarter	tests/tcpflood.c	/^thrdStarter(void *arg)$/;"	f	file:
thrdStarter	threads.c	/^static void* thrdStarter(void *arg)$/;"	f	file:
thrdTerminate	threads.c	/^rsRetVal thrdTerminate(thrdInfo_t *pThis)$/;"	f
thrdTerminateAll	threads.c	/^rsRetVal thrdTerminateAll(void)$/;"	f
thrdTerminateNonCancel	threads.c	/^thrdTerminateNonCancel(thrdInfo_t *pThis)$/;"	f	file:
thrd_WorkToDo	tools/syncdemo.c	/^static unsigned thrd_WorkToDo;	\/* number of computations each thread must do *\/$/;"	v	file:
thread	contrib/imczmq/imczmq.c	/^	thrdInfo_t *thread; $/;"	m	struct:_pollerData_t	file:
thread	contrib/imzmq3/imzmq3.c	/^    thrdInfo_t* thread;$/;"	m	struct:_poller_data	file:
thread	tests/tcpflood.c	/^	pthread_t thread; \/**< thread processing this instance *\/$/;"	m	struct:instdata	file:
tid	plugins/imptcp/imptcp.c	/^	pthread_t tid;	\/* the worker's thread ID *\/$/;"	m	struct:wrkrInfo_s	file:
tid	plugins/imudp/imudp.c	/^	pthread_t tid;	\/* the worker's thread ID *\/$/;"	m	struct:wrkrInfo_s	file:
tid	runtime/tcpsrv.c	/^	pthread_t tid;	\/* the worker's thread ID *\/$/;"	m	struct:wrkrInfo_s	file:
time	plugins/external/solr/rsyslog_solr.py	/^import time$/;"	i
time	plugins/impstats/statslog-analyzer.py	/^import time$/;"	i
time	plugins/impstats/statslog-graph.py	/^import time$/;"	i
time	plugins/impstats/statslog-splitter.py	/^import time$/;"	i
timeType	runtime/syslogd-types.h	/^	intTiny timeType;	\/* 0 - unitinialized , 1 - RFC 3164, 2 - syslog-protocol *\/$/;"	m	struct:syslogTime
timeout	contrib/omhttpfs/omhttpfs.c	/^    int timeout;$/;"	m	struct:_instanceData	file:
timeout	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *timeout;$/;"	m	struct:_instanceData	file:
timeout	plugins/omkafka/omkafka.c	/^	int timeout = closeTimeout;$/;"	v
timeout	plugins/omrelp/omrelp.c	/^	unsigned timeout;$/;"	m	struct:_instanceData	file:
timeoutComp	runtime/srutils.c	/^timeoutComp(struct timespec *pt, long iTimeout)$/;"	f
timeoutVal	runtime/srutils.c	/^timeoutVal(struct timespec *pt)$/;"	f
timestampIt	runtime/librsgt.c	/^timestampIt(gtfile gf, GTDataHash *hash)$/;"	f	file:
timestamper	runtime/librsgt.h	/^	char *timestamper;$/;"	m	struct:gtctx_s
timestamper	runtime/librsksi.h	/^	char *timestamper;$/;"	m	struct:rsksictx_s
timeval2syslogTime	runtime/datetime.c	/^timeval2syslogTime(struct timeval *tp, struct syslogTime *t)$/;"	f
timeval2syslogTime	runtime/datetime.h	/^	void (*timeval2syslogTime)(struct timeval *tp, struct syslogTime *t);$/;"	v
timezonecnfparamdescr	runtime/glbl.c	/^static struct cnfparamdescr timezonecnfparamdescr[] = {$/;"	v	typeref:struct:cnfparamdescr	file:
timezonepblk	runtime/glbl.c	/^static struct cnfparamblk timezonepblk =$/;"	v	typeref:struct:cnfparamblk	file:
tlpRegexNoMatchType	template.h	/^			enum tlpRegexNoMatchType {$/;"	g	struct:templateEntry::__anon69::__anon71
tlsCertFile	tests/tcpflood.c	/^static char *tlsCertFile = NULL;$/;"	v	file:
tlsKeyFile	tests/tcpflood.c	/^static char *tlsKeyFile = NULL;$/;"	v	file:
tlsLogFunction	tests/tcpflood.c	/^static void tlsLogFunction(int level, const char *msg)$/;"	f	file:
tlsLogLevel	tests/tcpflood.c	/^static int tlsLogLevel = 0;$/;"	v	file:
tlscred	tests/tcpflood.c	/^static gnutls_certificate_credentials tlscred;$/;"	v	file:
tlv16Write	runtime/librsgt.c	/^tlv16Write(gtfile gf, int flags, int tlvtype, uint16_t len)$/;"	f	file:
tlv16WriteKSI	runtime/librsksi.c	/^tlv16WriteKSI(ksifile ksi, int flags, int tlvtype, uint16_t len)$/;"	f
tlv8Write	runtime/librsgt.c	/^tlv8Write(gtfile gf, int flags, int tlvtype, int len)$/;"	f	file:
tlv8WriteKSI	runtime/librsksi.c	/^tlv8WriteKSI(ksifile ksi, int flags, int tlvtype, int len)$/;"	f
tlvBuf	runtime/librsgt.h	/^	char	tlvBuf[4096];$/;"	m	struct:gtfile_s
tlvBuf	runtime/librsksi.h	/^	char	tlvBuf[4096];$/;"	m	struct:ksifile_s
tlvClose	runtime/librsgt.c	/^tlvClose(gtfile gf)$/;"	f
tlvCloseKSI	runtime/librsksi.c	/^tlvCloseKSI(ksifile ksi)$/;"	f
tlvFlush	runtime/librsgt.c	/^tlvFlush(gtfile gf)$/;"	f
tlvFlushKSI	runtime/librsksi.c	/^tlvFlushKSI(ksifile ksi)$/;"	f
tlvIdx	runtime/librsgt.h	/^	int	tlvIdx; \/* current index into tlvBuf *\/$/;"	m	struct:gtfile_s
tlvIdx	runtime/librsksi.h	/^	int	tlvIdx; \/* current index into tlvBuf *\/$/;"	m	struct:ksifile_s
tlvOpen	runtime/librsgt.c	/^tlvOpen(gtfile gf, char *hdr, unsigned lenHdr)$/;"	f
tlvOpenKSI	runtime/librsksi.c	/^tlvOpenKSI(ksifile ksi, char *hdr, unsigned lenHdr)$/;"	f
tlvWriteBlockHdr	runtime/librsgt.c	/^tlvWriteBlockHdr(gtfile gf) {$/;"	f
tlvWriteBlockHdrKSI	runtime/librsksi.c	/^tlvWriteBlockHdrKSI(ksifile ksi) {$/;"	f
tlvWriteBlockSig	runtime/librsgt.c	/^tlvWriteBlockSig(gtfile gf, uchar *der, uint16_t lenDer)$/;"	f
tlvWriteBlockSigKSI	runtime/librsksi.c	/^tlvWriteBlockSigKSI(ksifile ksi, uchar *der, uint16_t lenDer)$/;"	f
tlvWriteHash	runtime/librsgt.c	/^tlvWriteHash(gtfile gf, uint16_t tlvtype, GTDataHash *rec)$/;"	f
tlvWriteHashKSI	runtime/librsksi.c	/^tlvWriteHashKSI(ksifile ksi, uint16_t tlvtype, KSI_DataHash *rec)$/;"	f
tlvbufAddInt64	runtime/librsgt.c	/^tlvbufAddInt64(gtfile gf, uint64_t val)$/;"	f	file:
tlvbufAddInt64	runtime/librsksi.c	/^tlvbufAddInt64(ksifile ksi, uint64_t val)$/;"	f	file:
tlvbufAddOctet	runtime/librsgt.c	/^tlvbufAddOctet(gtfile gf, int8_t octet)$/;"	f	file:
tlvbufAddOctet	runtime/librsksi.c	/^tlvbufAddOctet(ksifile ksi, int8_t octet)$/;"	f	file:
tlvbufAddOctetString	runtime/librsgt.c	/^tlvbufAddOctetString(gtfile gf, uint8_t *octet, int size)$/;"	f	file:
tlvbufAddOctetString	runtime/librsksi.c	/^tlvbufAddOctetString(ksifile ksi, uint8_t *octet, size_t size)$/;"	f	file:
tlvbufChkWrite	runtime/librsgt.c	/^tlvbufChkWrite(gtfile gf)$/;"	f	file:
tlvbufChkWrite	runtime/librsksi.c	/^tlvbufChkWrite(ksifile ksi)$/;"	f	file:
tlvbufGetInt64OctetSize	runtime/librsgt.c	/^tlvbufGetInt64OctetSize(uint64_t val)$/;"	f	file:
tlvbufGetInt64OctetSize	runtime/librsksi.c	/^tlvbufGetInt64OctetSize(uint64_t val)$/;"	f	file:
tlvbufPhysWrite	runtime/librsgt.c	/^tlvbufPhysWrite(gtfile gf)$/;"	f	file:
tlvbufPhysWrite	runtime/librsksi.c	/^tlvbufPhysWrite(ksifile ksi)$/;"	f	file:
tlvlen	runtime/librsgt_common.h	/^	uint16_t tlvlen;$/;"	m	struct:tlvrecord_s
tlvrecord_s	runtime/librsgt_common.h	/^struct tlvrecord_s {$/;"	s
tlvrecord_t	runtime/librsgt_common.h	/^typedef struct tlvrecord_s tlvrecord_t;$/;"	t	typeref:struct:tlvrecord_s
tlvtype	runtime/librsgt_common.h	/^	uint16_t tlvtype;$/;"	m	struct:tlvrecord_s
tmpBUFSIZE	runtime/msg.c	2751;"	d	file:
tmpBUFSIZE	runtime/msg.c	2805;"	d	file:
tmpCOPYCSTR	runtime/msg.c	1107;"	d	file:
tmpCOPYCSTR	runtime/msg.c	994;"	d	file:
tmpCOPYSZ	runtime/msg.c	1106;"	d	file:
tmpCOPYSZ	runtime/msg.c	981;"	d	file:
toActShutdown	runtime/queue.h	/^	int	toActShutdown;	\/* timeout for long-running action shutdown in ms *\/$/;"	m	struct:queue_s
toDeleteLst	runtime/queue.h	/^	toDeleteLst_t *toDeleteLst;\/* this queue's to-delete list *\/$/;"	m	struct:queue_s
toDeleteLst_s	runtime/queue.h	/^struct toDeleteLst_s {$/;"	s
toDeleteLst_t	runtime/queue.h	/^typedef struct toDeleteLst_s toDeleteLst_t;$/;"	t	typeref:struct:toDeleteLst_s
toEnq	runtime/queue.h	/^	int	toEnq;		\/* enqueue timeout *\/$/;"	m	struct:queue_s
toQShutdown	runtime/queue.h	/^	int	toQShutdown;	\/* timeout for regular queue shutdown in ms *\/$/;"	m	struct:queue_s
toRcpt_s	plugins/ommail/ommail.c	/^struct toRcpt_s {$/;"	s	file:
toRcpt_t	plugins/ommail/ommail.c	/^typedef struct toRcpt_s toRcpt_t;$/;"	t	typeref:struct:toRcpt_s	file:
toWrite	plugins/omstdout/omstdout.c	/^	char *toWrite;$/;"	v
toWrkShutdown	runtime/queue.h	/^	int	toWrkShutdown;	\/* timeout for idle workers in ms, -1 means indefinite (0 is immediate) *\/$/;"	m	struct:queue_s
toWrkShutdown	runtime/wtp.h	/^	int	toWrkShutdown;	\/* timeout for idle workers in ms, -1 means indefinite (0 is immediate) *\/$/;"	m	struct:wtp_s
tokenToString	grammar/rainerscript.c	/^tokenToString(const int token)$/;"	f
tokener	plugins/mmjsonparse/mmjsonparse.c	/^	struct json_tokener *tokener;$/;"	m	struct:wrkrInstanceData	typeref:struct:wrkrInstanceData::json_tokener	file:
tokenval2str	grammar/rainerscript.c	/^tokenval2str(int tok)$/;"	f
topic	plugins/omkafka/omkafka.c	/^	uchar *topic;$/;"	m	struct:_instanceData	file:
topicConfParams	plugins/omkafka/omkafka.c	/^	struct kafka_params *topicConfParams;$/;"	m	struct:_instanceData	typeref:struct:_instanceData::kafka_params	file:
topicFrame	contrib/omczmq/omczmq.c	/^	bool topicFrame;		\/* (optional) whether to set topic as separate frame *\/$/;"	m	struct:_instanceData	file:
topicList	contrib/imczmq/imczmq.c	/^	char *topicList;			\/* (optional) topics to subscribe to if SUB *\/$/;"	m	struct:instanceConf_s	file:
topicList	contrib/omczmq/omczmq.c	/^	char *topicList;		\/* (optional) topic list *\/$/;"	m	struct:_instanceData	file:
topics	contrib/omczmq/omczmq.c	/^	zlist_t *topics;		\/* publish topics if set *\/$/;"	m	struct:_instanceData	file:
totalRuntime	tests/tcpflood.c	/^	unsigned long long totalRuntime;$/;"	m	struct:runstats	file:
totalRuntime	tools/syncdemo.c	/^static long long totalRuntime;$/;"	v	file:
tpeConstruct	template.c	/^struct templateEntry* tpeConstruct(struct template *pTpl)$/;"	f
tpenElements	template.h	/^	int tpenElements; \/* number of elements in templateEntry list *\/$/;"	m	struct:__anon68
tpl	template.h	/^PROTOTYPEObj(tpl);$/;"	v
tplAddLine	template.c	/^struct template *tplAddLine(rsconf_t *conf, char* pName, uchar** ppRestOfConfLine)$/;"	f
tplAddTplMod	template.c	/^tplAddTplMod(struct template *pTpl, uchar** ppRestOfConfLine)$/;"	f	file:
tplCURR_IF_VERSION	template.h	139;"	d
tplCaseConvLower	template.h	/^enum tplFormatCaseConvTypes { tplCaseConvNo = 0, tplCaseConvUpper = 1, tplCaseConvLower = 2 };$/;"	e	enum:tplFormatCaseConvTypes
tplCaseConvNo	template.h	/^enum tplFormatCaseConvTypes { tplCaseConvNo = 0, tplCaseConvUpper = 1, tplCaseConvLower = 2 };$/;"	e	enum:tplFormatCaseConvTypes
tplCaseConvUpper	template.h	/^enum tplFormatCaseConvTypes { tplCaseConvNo = 0, tplCaseConvUpper = 1, tplCaseConvLower = 2 };$/;"	e	enum:tplFormatCaseConvTypes
tplConstruct	template.c	/^tplConstruct(rsconf_t *conf)$/;"	f	file:
tplDeleteAll	runtime/rsconf.c	/^	tplDeleteAll(pThis);$/;"	v
tplDeleteAll	template.c	/^void tplDeleteAll(rsconf_t *conf)$/;"	f
tplDeleteNew	template.c	/^void tplDeleteNew(rsconf_t *conf)$/;"	f
tplFind	template.c	/^struct template *tplFind(rsconf_t *conf, char *pName, int iLenName)$/;"	f
tplFmtDay	template.h	/^		      tplFmtWDayName = 8, tplFmtYear = 9, tplFmtMonth = 10, tplFmtDay = 11,$/;"	e	enum:tplFormatTypes
tplFmtDefault	template.h	/^enum tplFormatTypes { tplFmtDefault = 0, tplFmtMySQLDate = 1,$/;"	e	enum:tplFormatTypes
tplFmtHour	template.h	/^		      tplFmtHour = 12, tplFmtMinute = 13, tplFmtSecond = 14,$/;"	e	enum:tplFormatTypes
tplFmtMinute	template.h	/^		      tplFmtHour = 12, tplFmtMinute = 13, tplFmtSecond = 14,$/;"	e	enum:tplFormatTypes
tplFmtMonth	template.h	/^		      tplFmtWDayName = 8, tplFmtYear = 9, tplFmtMonth = 10, tplFmtDay = 11,$/;"	e	enum:tplFormatTypes
tplFmtMySQLDate	template.h	/^enum tplFormatTypes { tplFmtDefault = 0, tplFmtMySQLDate = 1,$/;"	e	enum:tplFormatTypes
tplFmtOrdinal	template.h	/^		      tplFmtWDay = 18, tplFmtOrdinal = 19, tplFmtWeek = 20};$/;"	e	enum:tplFormatTypes
tplFmtPgSQLDate	template.h	/^                      tplFmtRFC3164Date = 2, tplFmtRFC3339Date = 3, tplFmtPgSQLDate = 4,$/;"	e	enum:tplFormatTypes
tplFmtRFC3164BuggyDate	template.h	/^		      tplFmtSecFrac = 5, tplFmtRFC3164BuggyDate = 6, tplFmtUnixDate = 7,$/;"	e	enum:tplFormatTypes
tplFmtRFC3164Date	template.h	/^                      tplFmtRFC3164Date = 2, tplFmtRFC3339Date = 3, tplFmtPgSQLDate = 4,$/;"	e	enum:tplFormatTypes
tplFmtRFC3339Date	template.h	/^                      tplFmtRFC3164Date = 2, tplFmtRFC3339Date = 3, tplFmtPgSQLDate = 4,$/;"	e	enum:tplFormatTypes
tplFmtSecFrac	template.h	/^		      tplFmtSecFrac = 5, tplFmtRFC3164BuggyDate = 6, tplFmtUnixDate = 7,$/;"	e	enum:tplFormatTypes
tplFmtSecond	template.h	/^		      tplFmtHour = 12, tplFmtMinute = 13, tplFmtSecond = 14,$/;"	e	enum:tplFormatTypes
tplFmtTZOffsDirection	template.h	/^		      tplFmtTZOffsHour = 15, tplFmtTZOffsMin = 16, tplFmtTZOffsDirection = 17,$/;"	e	enum:tplFormatTypes
tplFmtTZOffsHour	template.h	/^		      tplFmtTZOffsHour = 15, tplFmtTZOffsMin = 16, tplFmtTZOffsDirection = 17,$/;"	e	enum:tplFormatTypes
tplFmtTZOffsMin	template.h	/^		      tplFmtTZOffsHour = 15, tplFmtTZOffsMin = 16, tplFmtTZOffsDirection = 17,$/;"	e	enum:tplFormatTypes
tplFmtUnixDate	template.h	/^		      tplFmtSecFrac = 5, tplFmtRFC3164BuggyDate = 6, tplFmtUnixDate = 7,$/;"	e	enum:tplFormatTypes
tplFmtWDay	template.h	/^		      tplFmtWDay = 18, tplFmtOrdinal = 19, tplFmtWeek = 20};$/;"	e	enum:tplFormatTypes
tplFmtWDayName	template.h	/^		      tplFmtWDayName = 8, tplFmtYear = 9, tplFmtMonth = 10, tplFmtDay = 11,$/;"	e	enum:tplFormatTypes
tplFmtWeek	template.h	/^		      tplFmtWDay = 18, tplFmtOrdinal = 19, tplFmtWeek = 20};$/;"	e	enum:tplFormatTypes
tplFmtYear	template.h	/^		      tplFmtWDayName = 8, tplFmtYear = 9, tplFmtMonth = 10, tplFmtDay = 11,$/;"	e	enum:tplFormatTypes
tplFormatCaseConvTypes	template.h	/^enum tplFormatCaseConvTypes { tplCaseConvNo = 0, tplCaseConvUpper = 1, tplCaseConvLower = 2 };$/;"	g
tplFormatTypes	template.h	/^enum tplFormatTypes { tplFmtDefault = 0, tplFmtMySQLDate = 1,$/;"	g
tplGetEntryCount	template.c	/^int tplGetEntryCount(struct template *pTpl)$/;"	f
tplLastStaticInit	template.c	/^void tplLastStaticInit(rsconf_t *conf, struct template *tpl)$/;"	f
tplName	contrib/omczmq/omczmq.c	/^	uchar *tplName;			\/* (optional) name of template to use *\/$/;"	m	struct:_instanceData	file:
tplName	contrib/omhiredis/omhiredis.c	/^	uchar *tplName; \/* template name *\/$/;"	m	struct:_instanceData	file:
tplName	contrib/omhttpfs/omhttpfs.c	/^    uchar* tplName;$/;"	m	struct:_instanceData	file:
tplName	contrib/omrabbitmq/omrabbitmq.c	/^	uchar *tplName;$/;"	m	struct:_instanceData	file:
tplName	contrib/omzmq3/omzmq3.c	/^    uchar*  tplName;$/;"	m	struct:_instanceData	file:
tplName	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *tplName;$/;"	m	struct:_instanceData	file:
tplName	plugins/omkafka/omkafka.c	/^	uchar *tplName;		\/* assigned output template *\/$/;"	m	struct:_instanceData	file:
tplName	plugins/omlibdbi/omlibdbi.c	/^	uchar	*tplName;       \/* format template to use *\/$/;"	m	struct:_instanceData	file:
tplName	plugins/omlibdbi/omlibdbi.c	/^	uchar 	*tplName;	\/* default template *\/$/;"	m	struct:modConfData_s	file:
tplName	plugins/ommail/ommail.c	/^	uchar *tplName;	\/* format template to use *\/$/;"	m	struct:_instanceData	file:
tplName	plugins/ommongodb/ommongodb.c	/^	uchar *tplName;$/;"	m	struct:_instanceData	file:
tplName	plugins/ommysql/ommysql.c	/^	uchar	*tplName;			\/* format template to use *\/$/;"	m	struct:_instanceData	file:
tplName	plugins/omprog/omprog.c	/^	uchar *tplName;		\/* assigned output template *\/$/;"	m	struct:_instanceData	file:
tplName	plugins/omrelp/omrelp.c	/^	uchar *tplName;$/;"	m	struct:_instanceData	file:
tplName	plugins/omsnmp/omsnmp.c	/^	uchar	*tplName;       	\/* format template to use *\/$/;"	m	struct:_instanceData	file:
tplName	plugins/omudpspoof/omudpspoof.c	/^	uchar 	*tplName;	\/* default template *\/$/;"	m	struct:modConfData_s	file:
tplName	plugins/omudpspoof/omudpspoof.c	/^	uchar 	*tplName;	\/* name of assigned template *\/$/;"	m	struct:_instanceData	file:
tplName	plugins/omudpspoof/omudpspoof.c	/^	uchar *tplName; \/* name of the default template to use *\/$/;"	m	struct:configSettings_s	file:
tplName	plugins/omuxsock/omuxsock.c	/^	uchar 	*tplName;	\/* default template *\/$/;"	m	struct:modConfData_s	file:
tplName	plugins/omuxsock/omuxsock.c	/^	uchar *tplName; \/* name of the default template to use *\/$/;"	m	struct:configSettings_s	file:
tplName	tools/omfile.c	/^	uchar 	*tplName;	\/* default template *\/$/;"	m	struct:modConfData_s	file:
tplName	tools/omfile.c	/^	uchar 	*tplName;	\/* name of assigned template *\/$/;"	m	struct:_instanceData	file:
tplName	tools/omfwd.c	/^	uchar 	*tplName;	\/* default template *\/$/;"	m	struct:modConfData_s	file:
tplName	tools/omfwd.c	/^	uchar 	*tplName;	\/* name of assigned template *\/$/;"	m	struct:_instanceData	file:
tplName	tools/ompipe.c	/^	uchar	*tplName;       \/* format template to use *\/$/;"	m	struct:_instanceData	file:
tplName	tools/ompipe.c	/^	uchar 	*tplName;	\/* default template *\/$/;"	m	struct:modConfData_s	file:
tplName	tools/omusrmsg.c	/^	uchar *tplName;$/;"	m	struct:_instanceData	file:
tplPrintList	template.c	/^void tplPrintList(rsconf_t *conf)$/;"	f
tplProcessCnf	template.c	/^tplProcessCnf(struct cnfobj *o)$/;"	f
tplRegexType	template.h	/^enum tplRegexType { TPL_REGEX_BRE = 0, \/* posix BRE *\/$/;"	g
tplSubject	plugins/ommail/ommail.c	/^	uchar *tplSubject = NULL;$/;"	v
tplToArray	template.c	/^tplToArray(struct template *pTpl, msg_t *pMsg, uchar*** ppArr, struct syslogTime *ttNow)$/;"	f
tplToJSON	template.c	/^tplToJSON(struct template *pTpl, msg_t *pMsg, struct json_object **pjson, struct syslogTime *ttNow)$/;"	f
tplToString	template.c	/^tplToString(struct template *__restrict__ const pTpl,$/;"	f
tplToUse	contrib/omhttpfs/omhttpfs.c	/^    uchar *tplToUse;$/;"	v
tplToUse	plugins/omlibdbi/omlibdbi.c	/^	uchar *tplToUse;$/;"	v
tplToUse	plugins/omudpspoof/omudpspoof.c	/^	uchar *tplToUse;$/;"	v
tplToUse	tools/omfile.c	/^	uchar *tplToUse;$/;"	v
tplToUse	tools/omfwd.c	/^	uchar *tplToUse;$/;"	v
transport	tests/tcpflood.c	/^static enum { TP_UDP, TP_TCP, TP_TLS } transport = TP_TCP;$/;"	v	typeref:enum:__anon75	file:
treeLevel	runtime/librsgt.h	/^	uint8_t treeLevel;$/;"	m	struct:gterrctx_s
treeLevel	runtime/librsksi.h	/^	uint8_t treeLevel;$/;"	m	struct:ksierrctx_s
tryEmulateAPPNAME	runtime/msg.c	/^static void tryEmulateAPPNAME(msg_t * const pM)$/;"	f	file:
tryEmulateTAG	runtime/msg.c	/^static inline void tryEmulateTAG(msg_t * const pM, sbool bLockMutex)$/;"	f	file:
tryExec	plugins/ompgsql/ompgsql.c	/^tryExec(uchar *pszCmd, instanceData *pData)$/;"	f	file:
tryRecover	plugins/imsolaris/imsolaris.c	/^tryRecover(void)$/;"	f	file:
tryRestart	plugins/mmexternal/mmexternal.c	/^tryRestart(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
tryRestart	plugins/omprog/omprog.c	/^tryRestart(wrkrInstanceData_t *pWrkrData)$/;"	f	file:
tryResume	runtime/modules.h	/^	rsRetVal (*tryResume)(void*);\/* called to see if module actin can be resumed now *\/$/;"	m	struct:modInfo_s
tryShutdownWorkersWithinActionTimeout	runtime/queue.c	/^tryShutdownWorkersWithinActionTimeout(qqueue_t *pThis)$/;"	f	file:
tryShutdownWorkersWithinQueueTimeout	runtime/queue.c	/^tryShutdownWorkersWithinQueueTimeout(qqueue_t *pThis)$/;"	f	file:
tryTTYRecover	runtime/stream.c	/^tryTTYRecover(strm_t *pThis, int err)$/;"	f	file:
tryUseURandom	tests/randomgen.c	/^static int tryUseURandom = 0;		\/* try to use \/dev\/urandom? *\/$/;"	v	file:
ttGenTime	runtime/msg.h	/^	time_t ttGenTime;	\/* time msg object was generated, same as tRcvdAt, but a Unix timestamp.$/;"	m	struct:msg
ttLastDiscard	plugins/imudp/imudp.c	/^static time_t ttLastDiscard = 0;	\/* timestamp when a message from a non-permitted sender was last discarded$/;"	v	file:
ttResumeRtry	action.h	/^	time_t	ttResumeRtry;	\/* when is it time to retry the resume? *\/$/;"	m	struct:action_s
tv	tools/ompipe.c	/^	struct timeval tv;$/;"	v	typeref:struct:timeval
tvEnd	tools/syncdemo.c	/^static struct timeval tvStart, tvEnd; \/* used for timing one testing iteration *\/$/;"	v	typeref:struct:	file:
tvStart	tools/syncdemo.c	/^static struct timeval tvStart, tvEnd; \/* used for timing one testing iteration *\/$/;"	v	typeref:struct:timeval	file:
two_digits	runtime/msg.c	/^static char *two_digits[100] = {$/;"	v	file:
two_ip	runtime/hashtable/tester.c	/^    uint32_t one_ip; uint32_t two_ip; uint16_t one_port; uint16_t two_port;$/;"	m	struct:key	file:
two_port	runtime/hashtable/tester.c	/^    uint32_t one_ip; uint32_t two_ip; uint16_t one_port; uint16_t two_port;$/;"	m	struct:key	file:
tx	runtime/wti.h	/^		} tx;$/;"	m	union:actWrkrInfo::__anon60	typeref:struct:actWrkrInfo::__anon60::__anon61
txSupport	plugins/omlibdbi/omlibdbi.c	/^	int txSupport;		\/* transaction support *\/$/;"	m	struct:_instanceData	file:
typ	plugins/imptcp/imptcp.c	/^	epolld_type_t typ;$/;"	m	struct:epolld_s	file:
type	contrib/imzmq3/imzmq3.c	/^    int                    type;$/;"	m	struct:instanceConf_s	file:
type	contrib/imzmq3/imzmq3.c	/^    int    type;$/;"	m	struct:_socket_type	file:
type	contrib/mmgrok/mmgrok.c	/^    char *type;$/;"	m	struct:result_s	file:
type	contrib/omzmq3/omzmq3.c	/^    int     type;$/;"	m	struct:_instanceData	file:
type	contrib/omzmq3/omzmq3.c	/^    int    type;$/;"	m	struct:socket_type	file:
type	grammar/rainerscript.h	/^	ecslCmdHdrlType type;$/;"	m	struct:cnfparamdescr
type	plugins/omelasticsearch/cJSON/cjson.h	/^	int type;					\/* The type of the item, as above. *\/$/;"	m	struct:cJSON
type	tools/recover_qi.pl	/^sub type { 'OPB' }$/;"	s
type	tools/recover_qi.pl	/^sub type { 'Obj' }$/;"	s
typeID	plugins/mmaudit/mmaudit.c	/^	int typeID;$/;"	v
typeRegex	template.h	/^			enum tplRegexType typeRegex;$/;"	m	struct:templateEntry::__anon69::__anon71	typeref:enum:templateEntry::__anon69::__anon71::tplRegexType
types	contrib/omzmq3/omzmq3.c	/^static struct socket_type types[] = {$/;"	v	typeref:struct:socket_type	file:
tzinfo	runtime/syslogd-types.h	/^struct tzinfo {$/;"	s
tzinfo_t	runtime/syslogd-types.h	/^typedef struct tzinfo tzinfo_t;$/;"	t	typeref:struct:tzinfo
tzinfos	runtime/glbl.c	/^tzinfo_t *tzinfos = NULL;$/;"	v
uLastDBErrno	plugins/omlibdbi/omlibdbi.c	/^	unsigned uLastDBErrno;	\/* last errno returned by libdbi or 0 if all is well *\/$/;"	m	struct:_instanceData	file:
uLastMySQLErrno	plugins/ommysql/ommysql.c	/^	unsigned uLastMySQLErrno;		\/* last errno returned by MySQL or 0 if all is well *\/$/;"	m	struct:wrkrInstanceData	file:
uRefCnt	runtime/modules.h	/^	unsigned	uRefCnt;	\/* reference count for this module; 0 -> may be unloaded *\/$/;"	m	struct:modInfo_s
uResumeOKinRow	runtime/wti.h	/^	uint16_t uResumeOKinRow;\/* number of times in a row that resume said OK with an$/;"	m	struct:actWrkrInfo
uSizeLimit	outchannel.h	/^	off_t	uSizeLimit;$/;"	m	struct:outchannel
u_int32_t	runtime/net.c	/^	typedef unsigned int	u_int32_t;$/;"	t	file:
u_int32_t	runtime/typedefs.h	/^typedef unsigned int u_int32_t; \/* TODO: is this correct? *\/$/;"	t
uchar	runtime/librsgt.c	/^typedef unsigned char uchar;$/;"	t	file:
uchar	runtime/librsgt_read.c	/^typedef unsigned char uchar;$/;"	t	file:
uchar	runtime/librsksi.c	/^typedef unsigned char uchar;$/;"	t	file:
uchar	runtime/librsksi_read.c	/^typedef unsigned char uchar;$/;"	t	file:
uchar	runtime/typedefs.h	/^typedef unsigned char uchar;\/* get rid of the unhandy "unsigned char" *\/$/;"	t
uchar	tools/rsgtutil.c	/^typedef unsigned char uchar;$/;"	t	file:
ucred	plugins/imuxsock/imuxsock.c	/^struct ucred { int pid; uid_t uid; gid_t gid; };$/;"	s	file:
udpRcvr	tests/tcpflood.c	/^static struct sockaddr_in udpRcvr;	\/* remote receiver in UDP mode *\/$/;"	v	typeref:struct:sockaddr_in	file:
udpSend	tests/nettester.c	/^udpSend(char *buf, int lenBuf)$/;"	f
udpsock	tests/tcpflood.c	/^static int udpsock;			\/* socket for sending in UDP mode *\/$/;"	v	file:
uid	plugins/imuxsock/imuxsock.c	/^struct ucred { int pid; uid_t uid; gid_t gid; };$/;"	m	struct:ucred	file:
uid	plugins/omelasticsearch/omelasticsearch.c	/^	uchar *uid;$/;"	m	struct:_instanceData	file:
uid	plugins/ommongodb/ommongodb.c	/^	uchar *uid;$/;"	m	struct:_instanceData	file:
uidDropPriv	runtime/rsconf.h	/^	int uidDropPriv;	\/* user-id to which priveleges should be dropped to *\/$/;"	m	struct:globals_s
uint16_t	runtime/hashtable/tester.c	/^typedef unsigned short uint16_t;$/;"	t	file:
uint32_t	runtime/hashtable/tester.c	/^typedef unsigned int uint32_t;$/;"	t	file:
uint64	runtime/typedefs.h	/^typedef long long unsigned uint64;$/;"	t
uintTiny	runtime/typedefs.h	/^typedef unsigned char uintTiny;	\/* 0..255! *\/$/;"	t
umask	runtime/rsconf.h	/^	int umask;		\/* umask to use *\/$/;"	m	struct:globals_s
un	runtime/sd-daemon.c	/^        struct sockaddr_un un;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr_un	file:
uname	tools/omusrmsg.c	/^	char uname[MAXUNAMES][UNAMESZ+1];$/;"	m	struct:_instanceData	file:
uncompressMessage	runtime/parser.c	/^static inline rsRetVal uncompressMessage(msg_t *pMsg)$/;"	f	file:
unescapeStr	grammar/rainerscript.c	/^unescapeStr(uchar *s, int len)$/;"	f
unescapeTestdata	tests/nettester.c	/^void unescapeTestdata(char *testdata)$/;"	f
unlinkEvent	runtime/nsdpoll_ptcp.c	/^unlinkEvent(nsdpoll_ptcp_t *pThis, int id, void *pUsr, nsdpoll_epollevt_lst_t **ppEvtLst) {$/;"	f	file:
unregCfSysLineHdlrs	runtime/cfsysline.c	/^rsRetVal unregCfSysLineHdlrs(void)$/;"	f
unregCfSysLineHdlrs4Owner	runtime/cfsysline.c	/^rsRetVal unregCfSysLineHdlrs4Owner(void *pOwnerCookie)$/;"	f
untty	tools/syslogd.c	/^void untty(void)$/;"	f
usage	tests/syslog_caller.c	/^static void usage(void)$/;"	f	file:
usage	tests/uxsockrcvr.c	/^usage(void)$/;"	f
usage	tools/syncdemo.c	/^usage(void)$/;"	f	file:
useCryprov	runtime/queue.h	/^	sbool	useCryprov;	\/* quicker than checkig ptr (1 vs 8 bytes!) *\/$/;"	m	struct:queue_s
useCryprov	tools/omfile.c	/^	sbool	useCryprov;	\/* quicker than checkig ptr (1 vs 8 bytes!) *\/$/;"	m	struct:_instanceData	file:
useHttps	plugins/omelasticsearch/omelasticsearch.c	/^        sbool useHttps;$/;"	m	struct:_instanceData	file:
useRFC5424Format	tests/tcpflood.c	/^static int useRFC5424Format = 0; \/* should the test message be in RFC5424 format? *\/$/;"	v	file:
useSigprov	tools/omfile.c	/^	sbool	useSigprov;	\/* quicker than checkig ptr (1 vs 8 bytes!) *\/$/;"	m	struct:_instanceData	file:
user	contrib/omhttpfs/omhttpfs.c	/^    uchar* user;$/;"	m	struct:_instanceData	file:
user	contrib/omrabbitmq/omrabbitmq.c	/^	uchar *user;$/;"	m	struct:_instanceData	file:
usrName	plugins/omlibdbi/omlibdbi.c	/^	uchar *usrName;		\/* user name for connect *\/$/;"	m	struct:_instanceData	file:
usrName	plugins/omlibdbi/omlibdbi.c	/^	uchar *usrName;		\/* user name for connect *\/$/;"	m	struct:configSettings_s	file:
usrptr	runtime/librsgt.h	/^	void *usrptr; \/* for error function *\/$/;"	m	struct:gtctx_s
usrptr	runtime/librsksi.h	/^	void *usrptr; \/* for error function *\/$/;"	m	struct:rsksictx_s
usrs	tools/omusrmsg.c	/^	es_str_t *usrs;$/;"	v
ustrcmp	runtime/unicode-helper.h	/^static inline int ustrcmp(const uchar *psz1, const uchar *psz2)$/;"	f
ustrdup	runtime/unicode-helper.h	/^	static inline uchar* ustrdup(const uchar *psz)$/;"	f
ustrdup	runtime/unicode-helper.h	37;"	d
ustrlen	runtime/unicode-helper.h	/^static inline int ustrlen(const uchar *psz)$/;"	f
ustrncpy	runtime/unicode-helper.h	/^	static inline uchar* ustrncpy(uchar *psz1, const uchar *psz2, size_t len)$/;"	f
ustrncpy	runtime/unicode-helper.h	36;"	d
v	runtime/hashtable_private.h	/^    void *k, *v;$/;"	m	struct:entry
vSyslogTime	runtime/var.h	/^		syslogTime_t vSyslogTime;$/;"	m	union:var_s::__anon58
val	contrib/mmsequence/mmsequence.c	/^	int val = 0;$/;"	v
val	grammar/rainerscript.h	/^	long long val;$/;"	m	struct:cnfnumval
val	grammar/rainerscript.h	/^	struct var val;$/;"	m	struct:cnfparamvals	typeref:struct:cnfparamvals::var
val	grammar/rainerscript.h	/^  struct var val;$/;"	m	struct:nvlst	typeref:struct:nvlst::var
val	plugins/omkafka/omkafka.c	/^	const char *val;$/;"	m	struct:kafka_params	file:
val	runtime/lookup.h	/^	uchar *val;$/;"	m	struct:lookup_string_tab_etry_s
val	runtime/statsobj.h	/^	} val;$/;"	m	struct:ctr_s	typeref:union:ctr_s::__anon52
val	runtime/var.h	/^	} val;$/;"	m	struct:var_s	typeref:union:var_s::__anon58
validateConf	runtime/rsconf.c	/^validateConf(void)$/;"	f	file:
validateConfig	contrib/imzmq3/imzmq3.c	/^static rsRetVal validateConfig(instanceConf_t* info) {$/;"	f	file:
validateEntry	runtime/dnscache.c	/^validateEntry(dnscache_entry_t __attribute__((unused)) *etry, struct sockaddr_storage __attribute__((unused)) *addr)$/;"	f	file:
value	contrib/mmgrok/mmgrok.c	/^    const char *value;$/;"	m	struct:result_s	file:
value	contrib/mmsequence/mmsequence.c	/^	int value;$/;"	m	struct:_instanceData	file:
value	contrib/pmpanngfw/pmpanngfw.c	/^    uint64 value;$/;"	m	struct:__anon2	file:
value	grammar/grammar.y	/^value:	  STRING			{ $$ = nvlstNewStr($1); }$/;"	l
value	runtime/hashtable/tester.c	/^struct value$/;"	s	file:
valueCounter	contrib/mmcount/mmcount.c	/^	int valueCounter;$/;"	m	struct:_instanceData	file:
valueFrom	contrib/mmsequence/mmsequence.c	/^	int valueFrom;$/;"	m	struct:_instanceData	file:
valueTo	contrib/mmsequence/mmsequence.c	/^	int valueTo;$/;"	m	struct:_instanceData	file:
value_len	contrib/mmgrok/mmgrok.c	/^    int value_len;$/;"	m	struct:result_s	file:
valuedouble	plugins/omelasticsearch/cJSON/cjson.h	/^	double valuedouble;			\/* The item's number, if type==cJSON_Number *\/$/;"	m	struct:cJSON
valueint	plugins/omelasticsearch/cJSON/cjson.h	/^	int valueint;				\/* The item's number, if type==cJSON_Number *\/$/;"	m	struct:cJSON
valuestring	plugins/omelasticsearch/cJSON/cjson.h	/^	char *valuestring;			\/* The item's string, if type==cJSON_String *\/$/;"	m	struct:cJSON
var	grammar/rainerscript.h	/^    char* var;$/;"	m	struct:cnfitr
var	grammar/rainerscript.h	/^struct var {$/;"	s
var	runtime/parser.h	/^	INTERFACEObjDebugPrint(var);$/;"	v
var	runtime/var.h	/^	INTERFACEObjDebugPrint(var);$/;"	v
var	runtime/var.h	/^PROTOTYPEObj(var);$/;"	v
var2CString	grammar/rainerscript.c	/^var2CString(struct var *__restrict__ const r, int *__restrict__ const bMustFree)$/;"	f	file:
var2Number	grammar/rainerscript.c	/^var2Number(struct var *r, int *bSuccess)$/;"	f	file:
var2String	grammar/rainerscript.c	/^var2String(struct var *__restrict__ const r, int *__restrict__ const bMustFree)$/;"	f	file:
varCURR_IF_VERSION	runtime/var.h	56;"	d
varDelete	grammar/rainerscript.c	/^varDelete(const struct var *v)$/;"	f
varDescr	plugins/mmnormalize/mmnormalize.c	/^	msgPropDescr_t *varDescr;\/**< name of variable to use *\/$/;"	m	struct:_instanceData	file:
varFreeMembers	grammar/rainerscript.c	/^varFreeMembers(const struct var *r)$/;"	f	file:
varFreeMembersSelectively	grammar/rainerscript.c	/^varFreeMembersSelectively(const struct var *r, const int skipMask)$/;"	f	file:
varName	plugins/mmnormalize/mmnormalize.c	/^	char *varName = NULL;$/;"	v
varType	runtime/var.h	/^	varType_t varType;$/;"	m	struct:var_s
varType_t	runtime/var.h	/^} varType_t;$/;"	t	typeref:enum:__anon57
var_s	runtime/var.h	/^typedef struct var_s {$/;"	s
var_t	runtime/var.h	/^} var_t;$/;"	t	typeref:struct:var_s
varname	grammar/rainerscript.h	/^			uchar *varname;$/;"	m	struct:cnfstmt::__anon4::__anon6
varname	grammar/rainerscript.h	/^			uchar *varname;$/;"	m	struct:cnfstmt::__anon4::__anon7
verbose	runtime/librsgt.h	/^	uint8_t verbose;$/;"	m	struct:gterrctx_s
verbose	runtime/librsksi.h	/^	uint8_t verbose;$/;"	m	struct:ksierrctx_s
verbose	tests/nettester.c	/^static int verbose = 0;	\/* verbose output? -v option *\/$/;"	v	file:
verbose	tools/rscryutil.c	/^static int verbose = 0;$/;"	v	file:
verbose	tools/rsgtutil.c	/^static int verbose = 0;$/;"	v	file:
verify	tools/rsgtutil.c	/^verify(char *name, char *errbuf)$/;"	f	file:
verifyBLOCK_HDR	runtime/librsgt_read.c	/^verifyBLOCK_HDR(FILE *sigfp, FILE *nsigfp)$/;"	f
verifyBLOCK_HDRKSI	runtime/librsksi_read.c	/^verifyBLOCK_HDRKSI(FILE *sigfp, FILE *nsigfp)$/;"	f
verifyBLOCK_SIG	runtime/librsgt_read.c	/^verifyBLOCK_SIG(block_sig_t *bs, gtfile gf, FILE *sigfp, FILE *nsigfp,$/;"	f
verifyBLOCK_SIGKSI	runtime/librsksi_read.c	/^verifyBLOCK_SIGKSI(block_sig_t *bs, ksifile ksi, FILE *sigfp, FILE *nsigfp,$/;"	f
verifyGT	tools/rsgtutil.c	/^verifyGT(char *name, char *errbuf, char *sigfname, char *oldsigfname, char *nsigfname, FILE *logfp, FILE *sigfp, FILE *nsigfp)$/;"	f	file:
verifyKSI	tools/rsgtutil.c	/^verifyKSI(char *name, char *errbuf, char *sigfname, char *oldsigfname, char *nsigfname, FILE *logfp, FILE *sigfp, FILE *nsigfp)$/;"	f	file:
verifySigblkFinish	runtime/librsgt_read.c	/^verifySigblkFinish(gtfile gf, GTDataHash **pRoot)$/;"	f	file:
verifySigblkFinish	runtime/librsksi_read.c	/^verifySigblkFinish(ksifile ksi, KSI_DataHash **pRoot)$/;"	f	file:
version	grammar/rainerscript.h	/^	unsigned short version;$/;"	m	struct:cnfparamblk
version	tools/recover_qi.pl	/^sub version {$/;"	s
vhost	contrib/omrabbitmq/omrabbitmq.c	/^	uchar *vhost;$/;"	m	struct:_instanceData	file:
vmstk_t	runtime/typedefs.h	/^typedef struct vmstk_s vmstk_t;$/;"	t	typeref:struct:vmstk_s
waitGenerators	tests/tcpflood.c	/^waitGenerators()$/;"	f	file:
waitMainQEmpty	plugins/imdiag/imdiag.c	/^waitMainQEmpty(tcps_sess_t *pSess)$/;"	f	file:
waitRsp	tests/diagtalker.c	/^waitRsp(int fd, char *buf, int len)$/;"	f	file:
waittime	tests/tcpflood.c	/^static int waittime = 0;$/;"	v	file:
waitusecs	tests/filewriter.c	/^static int waitusecs = 0;$/;"	v	file:
wallmsg	tools/omusrmsg.c	/^static rsRetVal wallmsg(uchar* pMsg, instanceData *pData)$/;"	f	file:
wd	plugins/imfile/imfile.c	/^	int wd;		\/* ascending sort key *\/$/;"	m	struct:wd_map_s	file:
wd_map_s	plugins/imfile/imfile.c	/^struct wd_map_s {$/;"	s	file:
wd_map_t	plugins/imfile/imfile.c	/^typedef struct wd_map_s wd_map_t;$/;"	t	typeref:struct:wd_map_s	file:
wdayNames	runtime/msg.c	/^static char *wdayNames[7] = { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };$/;"	v	file:
wdmap	plugins/imfile/imfile.c	/^	free(wdmap);$/;"	v
wdmap	plugins/imfile/imfile.c	/^static wd_map_t *wdmap = NULL;$/;"	v	file:
wdmapAdd	plugins/imfile/imfile.c	/^wdmapAdd(int wd, const int dirIdx, lstn_t *const pLstn)$/;"	f	file:
wdmapDel	plugins/imfile/imfile.c	/^wdmapDel(const int wd)$/;"	f	file:
wdmapInit	plugins/imfile/imfile.c	/^wdmapInit(void)$/;"	f	file:
wdmapLookup	plugins/imfile/imfile.c	/^wdmapLookup(int wd)$/;"	f	file:
wdmapLookupListner	plugins/imfile/imfile.c	/^wdmapLookupListner(lstn_t* pLstn)$/;"	f	file:
wdmap_cmp	plugins/imfile/imfile.c	/^wdmap_cmp(const void *k, const void *a)$/;"	f	file:
wildcardType	runtime/net.h	/^	} wildcardType;$/;"	m	struct:permittedPeerWildcard_s	typeref:enum:permittedPeerWildcard_s::__anon40
willRun	runtime/modules.h	/^\/* TODO: remove? *\/rsRetVal (*willRun)(void); 		\/* check if the current config will be able to run*\/$/;"	m	struct:modInfo_s::__anon29::__anon30
withinRatelimit	runtime/ratelimit.c	/^withinRatelimit(ratelimit_t *ratelimit, time_t tt)$/;"	f	file:
workerThread	tools/syncdemo.c	/^void *workerThread( void *arg )$/;"	f
wrds	tools/ompipe.c	/^	fd_set wrds;$/;"	v
writeDB	plugins/omlibdbi/omlibdbi.c	/^rsRetVal writeDB(uchar *psz, instanceData *pData)$/;"	f
writeDataError	plugins/omelasticsearch/omelasticsearch.c	/^writeDataError(wrkrInstanceData_t *pWrkrData, instanceData *pData, cJSON **pReplyRoot, uchar *reqmsg)$/;"	f	file:
writeDataError	plugins/omkafka/omkafka.c	/^writeDataError(instanceData *const pData,$/;"	f	file:
writeFile	tools/omfile.c	/^writeFile(instanceData *__restrict__ const pData,$/;"	f	file:
writeHiredis	contrib/omhiredis/omhiredis.c	/^rsRetVal writeHiredis(uchar *message, wrkrInstanceData_t *pWrkrData)$/;"	f
writeKafka	plugins/omkafka/omkafka.c	/^writeKafka(instanceData *pData, uchar *msg, uchar *topic)$/;"	f	file:
writeMySQL	plugins/ommysql/ommysql.c	/^rsRetVal writeMySQL(wrkrInstanceData_t *pWrkrData, uchar *psz)$/;"	f
writeOctet	plugins/mmanon/mmanon.c	/^writeOctet(uchar *msg, int idx, int *nxtidx, uint8_t octet)$/;"	f	file:
writeOutputDebug	plugins/mmexternal/mmexternal.c	/^writeOutputDebug(wrkrInstanceData_t *__restrict__ const pWrkrData,$/;"	f	file:
writePgSQL	plugins/ompgsql/ompgsql.c	/^writePgSQL(uchar *psz, instanceData *pData)$/;"	f	file:
writePidFile	tools/rsyslogd.c	/^rsRetVal writePidFile(void)$/;"	f
writePipe	plugins/omprog/omprog.c	/^writePipe(wrkrInstanceData_t *pWrkrData, uchar *szMsg)$/;"	f	file:
writePipe	tools/ompipe.c	/^static rsRetVal writePipe(uchar **ppString, instanceData *pData)$/;"	f	file:
writeProgramOutput	plugins/omprog/omprog.c	/^writeProgramOutput(wrkrInstanceData_t *__restrict__ const pWrkrData,$/;"	f	file:
writeStateFile	runtime/librsgt.c	/^writeStateFile(gtfile gf)$/;"	f	file:
writeStateFile	runtime/librsksi.c	/^writeStateFile(ksifile ksi)$/;"	f	file:
writeZMQ	contrib/omzmq3/omzmq3.c	/^rsRetVal writeZMQ(uchar* msg, instanceData* pData) {$/;"	f
write_all	runtime/gss-misc.c	/^static int write_all(int fd, char *buf, unsigned int nbyte)$/;"	f	file:
write_keyfile	tools/rscryutil.c	/^write_keyfile(char *fn)$/;"	f	file:
writefds	runtime/nsdsel_ptcp.h	/^	fd_set writefds;$/;"	m	struct:nsdsel_ptcp_s
writerThreadID	runtime/stream.h	/^	pthread_t writerThreadID;$/;"	m	struct:strm_s
wrkr	plugins/imptcp/imptcp.c	/^wrkr(void *myself)$/;"	f	file:
wrkr	plugins/imudp/imudp.c	/^wrkr(void *myself)$/;"	f	file:
wrkr	runtime/tcpsrv.c	/^wrkr(void *myself)$/;"	f	file:
wrkrDataTable	action.h	/^	void **wrkrDataTable;$/;"	m	struct:action_s
wrkrDataTableSize	action.h	/^	int wrkrDataTableSize;$/;"	m	struct:action_s
wrkrIdle	plugins/imptcp/imptcp.c	/^static pthread_cond_t wrkrIdle;$/;"	v	file:
wrkrIdle	runtime/tcpsrv.c	/^static pthread_cond_t wrkrIdle;$/;"	v	file:
wrkrInfo	plugins/imptcp/imptcp.c	/^} wrkrInfo[16];$/;"	v	typeref:struct:wrkrInfo_s	file:
wrkrInfo	plugins/imudp/imudp.c	/^	wrkr(&wrkrInfo[i]);$/;"	v
wrkrInfo	plugins/imudp/imudp.c	/^} wrkrInfo[MAX_WRKR_THREADS];$/;"	v	typeref:struct:wrkrInfo_s	file:
wrkrInfo	runtime/tcpsrv.c	/^} wrkrInfo[4];$/;"	v	typeref:struct:wrkrInfo_s	file:
wrkrInfo_s	plugins/imptcp/imptcp.c	/^static struct wrkrInfo_s {$/;"	s	file:
wrkrInfo_s	plugins/imudp/imudp.c	/^static struct wrkrInfo_s {$/;"	s	file:
wrkrInfo_s	runtime/tcpsrv.c	/^static struct wrkrInfo_s {$/;"	s	file:
wrkrInstanceData	contrib/mmcount/mmcount.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	contrib/mmgrok/mmgrok.c	/^typedef struct wrkrInstanceData{$/;"	s	file:
wrkrInstanceData	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	contrib/mmsequence/mmsequence.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	contrib/omczmq/omczmq.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	contrib/omhiredis/omhiredis.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	contrib/omhttpfs/omhttpfs.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	contrib/omrabbitmq/omrabbitmq.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	contrib/omzmq3/omzmq3.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmanon/mmanon.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmaudit/mmaudit.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmexternal/mmexternal.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmfields/mmfields.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmjsonparse/mmjsonparse.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmnormalize/mmnormalize.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmpstrucdata/mmpstrucdata.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmsnmptrapd/mmsnmptrapd.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/mmutf8fix/mmutf8fix.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omelasticsearch/omelasticsearch.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omgssapi/omgssapi.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omhdfs/omhdfs.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omjournal/omjournal.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omkafka/omkafka.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omlibdbi/omlibdbi.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/ommail/ommail.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/ommongodb/ommongodb.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/ommysql/ommysql.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/ompgsql/ompgsql.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omprog/omprog.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omrelp/omrelp.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omruleset/omruleset.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omsnmp/omsnmp.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omstdout/omstdout.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omtesting/omtesting.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omudpspoof/omudpspoof.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	plugins/omuxsock/omuxsock.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	tools/omdiscard.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	tools/omfile.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	tools/omfwd.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	tools/ompipe.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	tools/omshell.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData	tools/omusrmsg.c	/^typedef struct wrkrInstanceData {$/;"	s	file:
wrkrInstanceData_t	contrib/mmcount/mmcount.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	contrib/mmgrok/mmgrok.c	/^}wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	contrib/mmrfc5424addhmac/mmrfc5424addhmac.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	contrib/mmsequence/mmsequence.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	contrib/omczmq/omczmq.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	contrib/omhiredis/omhiredis.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	contrib/omhttpfs/omhttpfs.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	contrib/omrabbitmq/omrabbitmq.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	contrib/omzmq3/omzmq3.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmanon/mmanon.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmaudit/mmaudit.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmexternal/mmexternal.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmfields/mmfields.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmjsonparse/mmjsonparse.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmnormalize/mmnormalize.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmpstrucdata/mmpstrucdata.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmsnmptrapd/mmsnmptrapd.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/mmutf8fix/mmutf8fix.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omelasticsearch/omelasticsearch.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omgssapi/omgssapi.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omhdfs/omhdfs.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omjournal/omjournal.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omkafka/omkafka.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omlibdbi/omlibdbi.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/ommail/ommail.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/ommongodb/ommongodb.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/ommysql/ommysql.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/ompgsql/ompgsql.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omprog/omprog.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omrelp/omrelp.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omruleset/omruleset.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omsnmp/omsnmp.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omstdout/omstdout.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omtesting/omtesting.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omudpspoof/omudpspoof.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	plugins/omuxsock/omuxsock.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	tools/omdiscard.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	tools/omfile.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	tools/omfwd.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	tools/ompipe.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	tools/omshell.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrInstanceData_t	tools/omusrmsg.c	/^} wrkrInstanceData_t;$/;"	t	typeref:struct:wrkrInstanceData	file:
wrkrMax	plugins/imptcp/imptcp.c	/^	int wrkrMax;			\/* max number of workers (actually "helper workers") *\/$/;"	m	struct:configSettings_s	file:
wrkrMax	plugins/imptcp/imptcp.c	/^	int wrkrMax;$/;"	m	struct:modConfData_s	file:
wrkrMax	plugins/imudp/imudp.c	/^	int wrkrMax;$/;"	v
wrkrMax	plugins/imudp/imudp.c	/^	int8_t wrkrMax;			\/* max nbr of worker threads *\/$/;"	m	struct:modConfData_s	file:
wrkrMax	runtime/tcpsrv.c	/^static int wrkrMax = 4;$/;"	v	file:
wrkrMut	plugins/imptcp/imptcp.c	/^static pthread_mutex_t wrkrMut;$/;"	v	file:
wrkrMut	runtime/tcpsrv.c	/^	pthread_mutex_destroy(&wrkrMut);$/;"	v
wrkrMut	runtime/tcpsrv.c	/^static pthread_mutex_t wrkrMut;$/;"	v	file:
wrkrRunning	plugins/imptcp/imptcp.c	/^static int wrkrRunning;$/;"	v	file:
wrkrRunning	runtime/tcpsrv.c	/^static int wrkrRunning;$/;"	v	file:
wrkrThrdAttr	plugins/imptcp/imptcp.c	/^	pthread_attr_destroy(&wrkrThrdAttr);$/;"	v
wrkrThrdAttr	plugins/imptcp/imptcp.c	/^	pthread_attr_init(&wrkrThrdAttr);$/;"	v
wrkrThrdAttr	plugins/imptcp/imptcp.c	/^pthread_attr_t wrkrThrdAttr;	\/* Attribute for session threads; read only after startup *\/$/;"	v
wrkrThrdAttr	plugins/imudp/imudp.c	/^	pthread_attr_destroy(&wrkrThrdAttr);$/;"	v
wrkrThrdAttr	plugins/imudp/imudp.c	/^	pthread_attr_init(&wrkrThrdAttr);$/;"	v
wrkrThrdAttr	plugins/imudp/imudp.c	/^	pthread_attr_t wrkrThrdAttr;$/;"	v
wti	runtime/wti.h	/^PROTOTYPEObjClassInit(wti);$/;"	v
wtiCancelThrd	runtime/wti.c	/^wtiCancelThrd(wti_t *pThis)$/;"	f
wtiGetDbgHdr	runtime/wti.c	/^wtiGetDbgHdr(wti_t *pThis)$/;"	f	file:
wtiGetDummy	runtime/wti.c	/^wtiGetDummy(void)$/;"	f
wtiGetState	runtime/wti.c	/^wtiGetState(wti_t *pThis)$/;"	f
wtiInitIParam	runtime/wti.h	/^wtiInitIParam(actWrkrIParams_t *piparams)$/;"	f
wtiNewIParam	runtime/wti.h	/^wtiNewIParam(wti_t *const pWti, action_t *const pAction, actWrkrIParams_t **piparams)$/;"	f
wtiQueryInterface	runtime/wti.c	/^rsRetVal wtiQueryInterface(void) { return RS_RET_NOT_IMPLEMENTED; }$/;"	f
wtiResetExecState	runtime/wti.h	/^wtiResetExecState(wti_t * const pWti, batch_t * const pBatch)$/;"	f
wtiSetAlwaysRunning	runtime/wti.c	/^wtiSetAlwaysRunning(wti_t *pThis)$/;"	f
wtiSetDbgHdr	runtime/wti.c	/^wtiSetDbgHdr(wti_t *pThis, uchar *pszMsg, size_t lenMsg)$/;"	f
wtiSetState	runtime/wti.c	/^wtiSetState(wti_t *pThis, sbool bNewVal)$/;"	f
wtiWakeupThrd	runtime/wti.c	/^wtiWakeupThrd(wti_t *pThis)$/;"	f
wtiWorker	runtime/wti.c	/^wtiWorker(wti_t *__restrict__ const pThis)$/;"	f
wtiWorkerCancelCleanup	runtime/wti.c	/^wtiWorkerCancelCleanup(void *arg)$/;"	f	file:
wti_s	runtime/wti.h	/^struct wti_s {$/;"	s
wti_t	runtime/typedefs.h	/^typedef struct wti_s wti_t;$/;"	t	typeref:struct:wti_s
wtp	runtime/wtp.h	/^PROTOTYPEObjClassInit(wtp);$/;"	v
wtpAdviseMaxWorkers	runtime/wtp.c	/^wtpAdviseMaxWorkers(wtp_t *pThis, int nMaxWrkr)$/;"	f
wtpCancelAll	runtime/wtp.c	/^wtpCancelAll(wtp_t *pThis)$/;"	f
wtpChkStopWrkr	runtime/wtp.c	/^wtpChkStopWrkr(wtp_t *pThis, int bLockUsrMutex)$/;"	f
wtpGetDbgHdr	runtime/wtp.c	/^wtpGetDbgHdr(wtp_t *pThis)$/;"	f	file:
wtpQueryInterface	runtime/wtp.c	/^rsRetVal wtpQueryInterface(void) { return RS_RET_NOT_IMPLEMENTED; }$/;"	f
wtpShutdownAll	runtime/wtp.c	/^wtpShutdownAll(wtp_t *pThis, wtpState_t tShutdownCmd, struct timespec *ptTimeout)$/;"	f
wtpStartWrkr	runtime/wtp.c	/^wtpStartWrkr(wtp_t *pThis)$/;"	f	file:
wtpState	runtime/wtp.h	/^	wtpState_t wtpState;$/;"	m	struct:wtp_s
wtpState_RUNNING	runtime/wtp.h	/^	wtpState_RUNNING = 0,		\/* runs in regular mode *\/$/;"	e	enum:__anon64
wtpState_SHUTDOWN	runtime/wtp.h	/^	wtpState_SHUTDOWN = 1,		\/* worker threads shall shutdown when idle *\/$/;"	e	enum:__anon64
wtpState_SHUTDOWN_IMMEDIATE	runtime/wtp.h	/^	wtpState_SHUTDOWN_IMMEDIATE = 2	\/* worker threads shall shutdown ASAP, even if not idle *\/$/;"	e	enum:__anon64
wtpState_t	runtime/wtp.h	/^} wtpState_t;$/;"	t	typeref:enum:__anon64
wtpWorker	runtime/wtp.c	/^wtpWorker(void *arg) \/* the arg is actually a wti object, even though we are in wtp! *\/$/;"	f	file:
wtpWrkrExecCancelCleanup	runtime/wtp.c	/^wtpWrkrExecCancelCleanup(void *arg)$/;"	f	file:
wtpWrkrExecCleanup	runtime/wtp.c	/^wtpWrkrExecCleanup(wti_t *pWti)$/;"	f	file:
wtp_s	runtime/wtp.h	/^struct wtp_s {$/;"	s
wtp_t	runtime/typedefs.h	/^typedef struct wtp_s wtp_t;$/;"	t	typeref:struct:wtp_s
x_prev	runtime/librsgt.h	/^	imprint_t *x_prev; \/* last leaf hash (maybe of previous block) --> preserve on term *\/$/;"	m	struct:gtfile_s
x_prev	runtime/librsksi.h	/^	imprint_t *x_prev; \/* last leaf hash (maybe of previous block) --> preserve on term *\/$/;"	m	struct:ksifile_s
xcred	runtime/nsd_gtls.c	/^static gnutls_certificate_credentials_t xcred;$/;"	v	file:
year	runtime/syslogd-types.h	/^	short year;$/;"	m	struct:syslogTime
yearInSec_startYear	runtime/datetime.c	/^static const int yearInSec_startYear = 1967;$/;"	v	file:
yearInSecs	runtime/datetime.c	/^static const time_t yearInSecs[] = {$/;"	v	file:
years	runtime/msg.c	/^static char *years[] = {$/;"	v	file:
yyerror	grammar/testdriver.c	/^yyerror(char *s)$/;"	f
yyerror	runtime/rsconf.c	/^yyerror(char *s)$/;"	f
zip	plugins/omelasticsearch/cJSON/test.c	/^struct record {const char *precision;double lat,lon;const char *address,*city,*state,*zip,*country; };$/;"	m	struct:record	file:
zlibw	runtime/zlibw.h	/^PROTOTYPEObj(zlibw);$/;"	v
zlibwCURR_IF_VERSION	runtime/zlibw.h	35;"	d
zloopHandle	contrib/imczmq/imczmq.c	/^static zloop_t *zloopHandle = NULL;$/;"	v	file:
zstrm	plugins/imptcp/imptcp.c	/^	z_stream zstrm;	\/* zip stream to use for tcp compression *\/$/;"	m	struct:ptcpsess_s	file:
zstrm	runtime/stream.h	/^	z_stream zstrm;	\/* zip stream to use *\/$/;"	m	struct:strm_s
zstrm	tools/omfwd.c	/^	z_stream zstrm;	\/* zip stream to use for tcp compression *\/$/;"	m	struct:wrkrInstanceData	file:
